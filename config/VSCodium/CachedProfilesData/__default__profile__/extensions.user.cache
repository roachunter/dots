{"input":{"location":{"$mid":1,"external":"vscode-userdata:/home/dan/.vscode-oss/extensions/extensions.json","path":"/home/dan/.vscode-oss/extensions/extensions.json","scheme":"vscode-userdata"},"mtime":1749888977236,"profile":true,"profileScanOptions":{"bailOutWhenFileNotFound":true},"type":1,"validate":true,"productVersion":"1.101.03933","productDate":"2025-06-12T21:31:35.492Z","productCommit":"3a9d13eb624032e7f764def3dd45db451a4f0270","devMode":false,"language":"en","translations":{}},"result":[{"type":1,"identifier":{"id":"mvllow.rose-pine","uuid":"6ef63bba-e6b8-4209-b562-9a927f36ae8f"},"manifest":{"name":"rose-pine","version":"2.14.0","publisher":"mvllow","description":"All natural pine, faux fur and a bit of soho vibes for the classy minimalist","license":"MIT","repository":{"url":"https://github.com/rose-pine/vscode"},"funding":"https://github.com/rose-pine/vscode?sponsor=1","sponsor":{"url":"https://github.com/rose-pine/vscode?sponsor=1"},"author":{"name":"Rosé Pine","email":"hi@rosepinetheme.com"},"type":"module","engines":{"vscode":"^1.57.0"},"scripts":{"build":"pinecone && npm run format","watch":"pinecone --watch","format":"prettier --write .","release":"npx np@latest --no-publish --no-tests","version":"npm run build && npm run format"},"icon":"assets/icon.png","displayName":"Rosé Pine","categories":["Themes"],"keywords":["minimal","aesthetic","pastel","classy","soft"],"galleryBanner":{"color":"#191724","theme":"dark"},"contributes":{"iconThemes":[{"id":"rose-pine-icons","label":"Rosé Pine Icons","path":"./icons/rose-pine-icon-theme.json"}],"themes":[{"label":"Rosé Pine","uiTheme":"vs-dark","path":"./themes/rose-pine-color-theme.json"},{"label":"Rosé Pine (no italics)","uiTheme":"vs-dark","path":"./themes/rose-pine-no-italics-color-theme.json"},{"label":"Rosé Pine Moon","uiTheme":"vs-dark","path":"./themes/rose-pine-moon-color-theme.json"},{"label":"Rosé Pine Moon (no italics)","uiTheme":"vs-dark","path":"./themes/rose-pine-moon-no-italics-color-theme.json"},{"label":"Rosé Pine Dawn","uiTheme":"vs","path":"./themes/rose-pine-dawn-color-theme.json"},{"label":"Rosé Pine Dawn (no italics)","uiTheme":"vs","path":"./themes/rose-pine-dawn-no-italics-color-theme.json"}]},"devDependencies":{"@rose-pine/palette":"3.0.1","pinecone-cli":"^4.0.1","prettier":"^2.8.7"},"prettier":{"semi":false,"singleQuote":true,"useTabs":true}},"location":{"$mid":1,"path":"/home/dan/.vscode-oss/extensions/mvllow.rose-pine-2.14.0-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"mvllow","metadata":{"installedTimestamp":1748718165942,"pinned":false,"source":"gallery","id":"6ef63bba-e6b8-4209-b562-9a927f36ae8f","publisherId":"dbc69b63-e1da-4022-a0a6-25eee990a29c","publisherDisplayName":"mvllow","targetPlatform":"universal","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":178317},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"usernamehw.errorlens","uuid":"9d8c32ab-354c-4daf-a9bf-20b633734435"},"manifest":{"name":"errorlens","displayName":"Error Lens","description":"Improve highlighting of errors, warnings and other language diagnostics.","version":"3.26.0","publisher":"usernamehw","license":"MIT","engines":{"vscode":"^1.95.0","npm":">=10.0.0"},"extensionKind":["ui","workspace"],"categories":["Other"],"qna":false,"keywords":["highlight","problem","problems","error","warning","inline","message","diagnostic","status bar","gutter"],"icon":"img/icon.png","repository":{"type":"git","url":"https://github.com/usernamehw/vscode-error-lens"},"activationEvents":["onStartupFinished"],"main":"./dist/extension.js","browser":"./dist/extension.js","contributes":{"commands":[{"command":"errorLens.toggle","title":"Toggle (Enable/Disable) Everything","description":"Toggle (Enable/Disable) Everything (toggle global setting `\"errorLens.enabled\"`)","category":"Error Lens"},{"command":"errorLens.toggleError","title":"Toggle Errors","description":"Enable/Disable Errors in `\"errorLens.enabledDiagnosticLevels\"` setting.","category":"Error Lens"},{"command":"errorLens.toggleWarning","title":"Toggle Warnings","description":"Enable/Disable Warnings in `\"errorLens.enabledDiagnosticLevels\"` setting.","category":"Error Lens"},{"command":"errorLens.toggleInfo","title":"Toggle Info","description":"Enable/Disable Info in `\"errorLens.enabledDiagnosticLevels\"` setting.","category":"Error Lens"},{"command":"errorLens.toggleHint","title":"Toggle Hint","description":"Enable/Disable Hint in `\"errorLens.enabledDiagnosticLevels\"` setting.","category":"Error Lens"},{"command":"errorLens.toggleInlineMessage","title":"Toggle Inline Message","description":"Toggle global setting `\"errorLens.messageEnabled\"`.","category":"Error Lens"},{"command":"errorLens.searchForProblem","title":"Search for problem","description":"Open problem in default browser (controlled by `errorLens.searchForProblemQuery` setting).","category":"Error Lens"},{"command":"errorLens.selectProblem","title":"Select Problem","description":"Set editor selection to the problem range (controlled by `errorLens.selectProblemType` setting).","category":"Error Lens"},{"command":"errorlens.toggleWorkspace","title":"Toggle Workspace in Disabled List","description":"Exclude/Include current workspace by fs path.","category":"Error Lens"},{"command":"errorLens.disableLine","title":"Disable line","description":"Add a comment to disable line for linter rule. Comment format is controlled by `\"errorLens.disableLineComments\"` setting.","category":"Error Lens"},{"command":"errorLens.findLinterRuleDefinition","title":"Find Linter Rule Definition","description":"Search in local linter files (like `.eslintrc.json`) for the rule definition. Target files are controlled by \"errorLens.lintFilePaths\" setting.","category":"Error Lens"},{"command":"errorLens.copyProblemMessage","title":"Copy Problem Message","description":"Copy problem message to the clipboard (at the active cursor).","category":"Error Lens"},{"command":"errorLens.excludeProblem","title":"Exclude Problem","description":"Exclude problem (at the active cursor) (write into settings).","category":"Error Lens"},{"command":"errorLens.copyProblemCode","title":"Copy Problem Code","description":"Copy problem code to the clipboard (at the active cursor).","category":"Error Lens"},{"command":"errorLens.updateEverything","title":"Update Everything","description":"Update all decorations. Supports args {\"kind\": \"update\" | \"clear\"}","category":"Error Lens"}],"configuration":{"properties":{"errorLens.enabled":{"type":"boolean","default":true,"markdownDescription":"Controls all decorations and features (except commands)."},"errorLens.respectUpstreamEnabled":{"type":"object","properties":{"enabled":{"type":"boolean","description":"When true - extension will honour VSCode setting `#problems.visibility#` and not show errors if `#problems.visibility#` is false.","default":true},"inlineMessage":{"type":"boolean","default":true},"gutter":{"type":"boolean","default":true},"statusBar":{"type":"boolean","default":false}},"default":{"enabled":true,"inlineMessage":true,"gutter":true,"statusBar":false},"markdownDescription":"When enabled - extension will take into account global VSCode setting `#problems.visibility#`. ([1.85.0 changelog](https://code.visualstudio.com/updates/v1_85#_hide-problem-decorations)).","additionalProperties":false},"errorLens.enabledInMergeConflict":{"type":"boolean","default":true,"markdownDescription":"Controls if decorations are shown if the editor has git merge conflict indicators `<<<<<<<` or `=======` or `>>>>>>>`."},"errorLens.fontFamily":{"type":"string","default":"","markdownDescription":"Font family of inline message. [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensfontfamily). May break `#errorLens.alignMessage#`"},"errorLens.fontWeight":{"type":"string","enum":["100","200","300","400","normal","500","600","700","bold","800","900"],"default":"normal","markdownDescription":"Font weight of inline message. `\"normal\"` is alias for 400, `\"bold\"` is alias for 700). [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensfontweight)"},"errorLens.fontStyleItalic":{"type":"boolean","default":false,"markdownDescription":"When enabled - shows inline message in italic font style. [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensfontstyleitalic)"},"errorLens.fontSize":{"type":"string","default":"","markdownDescription":"Font size of inline message ([CSS units](https://developer.mozilla.org/en-US/docs/Web/CSS/length)). Use negative value to have it relative to the editor's fontSize (e.g. `-3px`). May break `#errorLens.alignMessage#`. [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensfontsize)."},"errorLens.margin":{"type":"string","default":"4ch","markdownDescription":"Distance between the last word on the line and the start of inline message ([CSS units](https://developer.mozilla.org/en-US/docs/Web/CSS/length)). [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensmargin)"},"errorLens.alignMessage":{"type":"object","properties":{"start":{"type":"integer","minimum":0,"description":"Starting column where to align decorations."},"end":{"type":"integer","minimum":0,"description":"Ending column where to align decorations."},"minimumMargin":{"type":"integer","description":"Minimal space between line end and decoration. Very similar to the global setting `errorLens.margin`, but can only be a number of characters.","minimum":4},"padding":{"type":"array","items":{"type":"number","default":0,"minimum":0},"minItems":2,"maxItems":2,"default":[0,0],"description":"Very similar to the global setting `errorLens.padding`, but it can only be a number (not any CSS unit like pixels). First number is top+bottom padding; Second number - left+right padding."},"useFixedPosition":{"type":"boolean","default":true,"description":"Use fixed position for decoration that has stuttering/twitching on the active line (e.g. when typing). Will prevent hover over decoration text."}},"default":{"start":0,"end":0,"minimumMargin":4,"padding":[0,0],"useFixedPosition":true},"markdownDescription":"Align inline error message (either by starting position or ending position). Only works for monospace fonts. Set \"start\" and \"end\" to **0** to disable. [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensalignmessage)","additionalProperties":false},"errorLens.border":{"type":"array","default":["","","",""],"items":{"type":"string","default":""},"minItems":4,"maxItems":4,"additionalItems":false,"markdownDescription":"Border of the inline message. Examples: `1px solid`, `1px dashed`, `2px dotted`, `1px solid #00000050`... Set to empty string to disable. [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensborder)"},"errorLens.padding":{"type":"string","default":"","markdownDescription":"Padding of the inline message. Visible when `#errorLens.messageBackgroundMode#` is set to \"message\". [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlenspadding)","examples":["2px 1ch"]},"errorLens.borderRadius":{"type":"string","default":"0.2em","markdownDescription":"Border radius of the inline message. Visible when `#errorLens.messageBackgroundMode#` is set to \"message\". [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensborderradius)","examples":["5px","5em 0px","0px 5em 5em 0px"]},"errorLens.enabledDiagnosticLevels":{"type":"array","items":{"type":"string","enum":["error","warning","info","hint"]},"uniqueItems":true,"markdownDescription":"Customize which diagnostic levels(severity) to highlight. [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensenableddiagnosticlevels)","default":["error","warning","info"]},"errorLens.messageTemplate":{"type":"string","default":"$message","markdownDescription":"Template used for all inline messages. Whitespace between items is important.\n\nList of variables:\n\n- `$message` - diagnostic message text\n\n- `$count` - Number of diagnostics on the line\n\n- `$severity` - Severity prefix taken from `#errorLens.severityText#`\n\n- `$source` - Source of diagnostic e.g. \"eslint\"\n\n- `$code` - Code of the diagnostic [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensmessagetemplate)"},"errorLens.messageMaxChars":{"type":"integer","default":500,"minimum":0,"markdownDescription":"Cut off inline message if it's longer than this value. (Improves performance when the diagnostic message is long). [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensmessagemaxchars)"},"errorLens.severityText":{"type":"array","items":{"type":"string"},"markdownDescription":"Replaces `$severity` variable in `#errorLens.messageTemplate#`. [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensseveritytext)","default":["⛔","⚠","ℹ","🍏"],"minItems":4,"maxItems":4},"errorLens.messageEnabled":{"type":"boolean","default":true,"markdownDescription":"Controls whether inline message is shown or not (Including background highlight). [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensmessageenabled)"},"errorLens.messageBackgroundMode":{"type":"string","default":"line","enum":["line","message","none"],"enumDescriptions":["The entire line is highlighted.","Inline message is highlighted.","Message is not highlighted (only has foreground colors)."],"markdownDescription":"Controls how inline message is highlighted in the editor (entire line / only message / none). [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensmessagebackgroundmode)"},"errorLens.problemRangeDecorationEnabled":{"type":"boolean","default":false,"markdownDescription":"When checked - highlight the entire problem range. [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensproblemrangedecorationenabled)"},"errorLens.editorHoverPartsEnabled":{"type":"object","properties":{"messageEnabled":{"type":"boolean","default":false},"sourceCodeEnabled":{"type":"boolean","default":false},"buttonsEnabled":{"type":"boolean","default":false}},"additionalProperties":false,"default":{"messageEnabled":false,"sourceCodeEnabled":false,"buttonsEnabled":false},"markdownDescription":"Controls which parts of the editor hover tooltip to show."},"errorLens.statusBarIconsEnabled":{"type":"boolean","markdownDescription":"When enabled - shows highlighted error/warning icons in status bar. [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensstatusbariconsenabled)","default":false},"errorLens.statusBarIconsPriority":{"type":"integer","markdownDescription":"Move status bar icons left or right by adjusting the number priority.","default":-9000},"errorLens.statusBarIconsAlignment":{"type":"string","markdownDescription":"Choose on which side the icons status bar is on: left or right.","enum":["left","right"],"default":"left"},"errorLens.statusBarIconsTargetProblems":{"type":"string","enum":["all","activeEditor","visibleEditors"],"enumDescriptions":["Should be the same as native status bar icons - counts all known problems from all files.","Count only problems from the Active Text Editor.","Count only problems from the Visible Text Editors."],"default":"all","markdownDescription":"Which problems to use for counting problems at icons status bar."},"errorLens.statusBarIconsUseBackground":{"type":"boolean","markdownDescription":"When enabled - highlights status bar icons with background, when disabled - with foreground.","default":true},"errorLens.statusBarIconsAtZero":{"type":"string","markdownDescription":"What to do when there are 0 errors/warnings - hide the item or strip its background color.","enum":["hide","removeBackground"],"default":"removeBackground"},"errorLens.statusBarMessageEnabled":{"type":"boolean","markdownDescription":"When enabled - shows message in status bar. [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensstatusbarmessageenabled)","default":false},"errorLens.statusBarMessagePriority":{"type":"integer","markdownDescription":"Move status bar message left or right by adjusting the number priority.","default":-10000},"errorLens.statusBarMessageAlignment":{"type":"string","markdownDescription":"Choose on which side the message status bar is on: left or right.","enum":["left","right"],"default":"left"},"errorLens.statusBarColorsEnabled":{"type":"boolean","markdownDescription":"When enabled - use message decoration foreground as color of Status Bar text. Uses colors `errorLens.statusBarErrorForeground`, `errorLens.statusBarWarningForeground`, `errorLens.statusBarInfoForeground`, `errorLens.statusBarHintForeground`. [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensstatusbarcolorsenabled)","default":false},"errorLens.statusBarMessageType":{"type":"string","markdownDescription":"Pick what to show in Status Bar: closest message or only message for the active line.","enum":["closestProblem","closestSeverity","activeLine","activeCursor"],"enumDescriptions":["Show closest to the cursor diagnostic.","Show closest to the cursor diagnostic sorted by severity (e.g. error will be shown before warning even if it's farther from the cursor).","Show only diagnostic that is on the same line as the cursor.","Similar to \"activeLine\" but follows the cursor movement inside the line."],"default":"activeLine"},"errorLens.statusBarCommand":{"type":"string","markdownDescription":"Command that executes on click for Status Bar.","enum":["goToProblem","goToLine","copyMessage"],"default":"goToProblem"},"errorLens.statusBarMessageTemplate":{"type":"string","default":"","markdownDescription":"Template for status bar message. Whitespace between items is important.\n\nList of variables:\n\n- `$message` - diagnostic message text\n\n- `$count` - Number of diagnostics on the line\n\n- `$severity` - Severity prefix taken from `#errorLens.severityText#`\n\n- `$source` - Source of diagnostic e.g. \"eslint\"\n\n- `$code` - Code of the diagnostic"},"errorLens.replace":{"type":"array","default":[],"items":{"type":"object","properties":{"matcher":{"type":"string","description":"The RegExp pattern against which to match diagnostic messages"},"message":{"type":"string","description":"The entire replacement for messages matching matcher. Can reference match groups like $0 (entire expression), $1 (first capture group), etc."}},"required":["matcher","message"]},"markdownDescription":"Specify message to transform. E.g. if this is configured to [{ matcher: 'foo (.*)', message: 'just $1' }], the message 'foo bar' would be displayed as 'just bar'. [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensreplace)"},"errorLens.exclude":{"type":"array","default":[],"items":{"type":"string"},"markdownDescription":"❗Deprecated. Use `#errorLens.excludeByMessage#`. Specify messages that should not be highlighted (RegExp). Strings passed to the RegExp constructor: `new RegExp(EXCLUDE_ITEM, 'iu');`","markdownDeprecationMessage":"Deprecated in favor of `#errorLens.excludeByMessage#`. This setting makes all exclude messages to be Regular Expressions which is bad for performance. It could lead to `Extension causes high cpu load` problem. New setting `#errorLens.excludeByMessage#` matches strings by default, but can also use Regular Expressions if needed(usually not)."},"errorLens.excludeByMessage":{"type":"array","default":[],"items":{"oneOf":[{"type":"string","default":""},{"type":"object","properties":{"regex":{"type":"string","default":""},"flags":{"type":"string","default":"iu"}},"additionalProperties":false,"default":{"regex":"","flags":"iu"}}]},"markdownDescription":"Exclude diagnostics by message. Excludes when the diagnostic message contains the exlcuding string(case-insensitive). Can use Regular Expressions (use object instead of a string)."},"errorLens.excludeBySource":{"type":"array","default":[],"items":{"type":"string"},"markdownDescription":"Specify `source` or `source(code)` pair to exclude. Examples: \n\n```json\n[\n\t\"eslint\",// exclude all problems from eslint linter\n\t\"eslint(padded-blocks)\",// exclude padded-blocks rule from eslint linter\n\t\"Pylance(reportUndefinedVariable)\",// exlude reportUndefinedVariable rule from Pylance linter\n]\n```"},"errorLens.excludePatterns":{"type":"array","default":[],"items":{"type":"string"},"markdownDescription":"Exclude files by using [glob](https://code.visualstudio.com/docs/editor/glob-patterns) pattern. Example `[\"**/*.{ts,js}\"]`"},"errorLens.excludeWorkspaces":{"type":"array","default":[],"items":{"type":"string"},"markdownDescription":"Exclude workspaces by path."},"errorLens.disableLineComments":{"type":"object","markdownDescription":"Used for `errorLens.disableLine` command that adds a comment disabling linter rule for a line.\nTo force comment on the same line - add `SAME_LINE` to the message: `\"eslint\": \"// eslint-disable-line $code SAME_LINE\"`","patternProperties":{".*":{"type":"string"}},"default":{"eslint":"// eslint-disable-next-line $code","Stylelint":"/* stylelint-disable-next-line $code */"}},"errorLens.lintFilePaths":{"type":"object","default":{"eslint":["**/*.eslintrc.{js,cjs,yaml,yml,json}","**/*package.json"],"Stylelint":["**/*.stylelintrc","**/*.stylelintrc.{cjs,js,json,yaml,yml}","**/*stylelint.config.{cjs,js}","**/*package.json"]},"patternProperties":{".*":{"oneOf":[{"type":"array","items":{"type":"string"}},{"type":"string","enum":["none"]}]}},"markdownDescription":"Specify where to search for linter rule definitions by diagnostic source ([glob](https://code.visualstudio.com/docs/editor/glob-patterns) for local linter files). `node_modules` folder is excluded."},"errorLens.searchForProblemQuery":{"type":"string","default":"https://duckduckgo.com/?q=$message","markdownDescription":"Pick query to open in default browser when searching for problem with `errorLens.searchForProblem` command."},"errorLens.selectProblemType":{"type":"string","default":"closestProblem","enum":["closestProblem","closestSeverity","activeLine"],"enumDescriptions":["Show closest to the cursor diagnostic.","Show closest to the cursor diagnostic (sorted by severity e.g. error will be shown before warning even if it's farther from the cursor).","Show only diagnostic that is on the same line as the cursor."],"markdownDescription":"Which problem to select (closest / active line) when executing `errorLens.selectProblem` command."},"errorLens.light":{"type":"object","markdownDescription":"Specify color of decorations for when the light color theme is active.","properties":{"errorGutterIconPath":{"type":"string","description":"Absolute path to error gutter icon for light themes.","default":""},"warningGutterIconPath":{"type":"string","description":"Absolute path to warning gutter icon for light themes.","default":""},"infoGutterIconPath":{"type":"string","description":"Absolute path to info gutter icon for light themes.","default":""},"hintGutterIconPath":{"type":"string","description":"Absolute path to hint gutter icon for light themes.","default":""},"errorGutterIconColor":{"type":"string","default":"","markdownDescription":"Error color of simple gutter icons (shapes and letters) for light themes.","format":"color"},"warningGutterIconColor":{"type":"string","default":"","markdownDescription":"Warning color of simple gutter icons (shapes and letters) for light themes.","format":"color"},"infoGutterIconColor":{"type":"string","default":"","markdownDescription":"Info color of simple gutter icons (shapes and letters) for light themes.","format":"color"},"hintGutterIconColor":{"type":"string","default":"","markdownDescription":"Hint color of simple gutter icons (shapes and letters) for light themes.","format":"color"}}},"errorLens.delay":{"type":"integer","markdownDescription":"Delay (ms) before showing problem decorations (**0** to disable). Minimum delay of **500** is enforced by the extension. `#errorLens.delayMode#` controls how to handle the delay.","default":0},"errorLens.delayMode":{"type":"string","default":"new","enum":["new","old","debounce"],"markdownEnumDescriptions":["New problems appear according to `errorLens.delay` setting. Fixed problems disappear faster.","Decorations for problems are debounced according to `errorLens.delay` setting.","Decorations disappear when document changes (typing)."],"markdownDescription":"Pick which version of the delay to use."},"errorLens.onSave":{"type":"boolean","markdownDescription":"When enabled - updates decorations only on document save (manual).","default":false},"errorLens.onSaveTimeout":{"type":"integer","markdownDescription":"Time period (ms) that used for showing decorations after the document save (manual, not auto save).","default":500,"minimum":50},"errorLens.onSaveUpdateOnActiveEditorChange":{"type":"boolean","markdownDescription":"When `#errorLens.onSave#` enabled - extension still draws decorations when active/visible editors change.","default":true},"errorLens.enableOnDiffView":{"type":"boolean","markdownDescription":"Enable decorations when viewing a diff view in the editor (e.g. Git diff). [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensenableondiffview)","default":false},"errorLens.followCursor":{"type":"string","enum":["allLines","allLinesExceptActive","activeLine","closestProblem"],"enumDescriptions":["Highlight all problems in file","Highlight all problems in file (except the line at the cursor)","Highlight only the problem at the cursor","Highlight only closest to the cursor problem"],"markdownDescription":"Highlight only portion of the problems. [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensfollowcursor)","default":"allLines"},"errorLens.followCursorMore":{"type":"number","markdownDescription":"Augments `#errorLens.followCursor#`.\nAdds number of lines to top and bottom when `#errorLens.followCursor#` is set to `activeLine`.\n Adds number of closest problems when `#errorLens.followCursor#` is `closestProblem` [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensfollowcursormore)","default":0},"errorLens.gutterIconsEnabled":{"type":"boolean","markdownDescription":"When enabled - shows gutter icons (In place of the debug breakpoint icon). [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensguttericonsenabled)","default":false},"errorLens.gutterIconsFollowCursorOverride":{"type":"boolean","markdownDescription":"When enabled and `#errorLens.followCursor#` setting is not `allLines`, then gutter icons would be rendered for all problems. But line decorations (background, message) only for active line. [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensguttericonsfollowcursoroverride)","default":true},"errorLens.gutterIconSize":{"type":"string","markdownDescription":"Change gutter icon size. Examples: `auto`, `contain`, `cover`, `50%`, `150%` ([CSS units](https://developer.mozilla.org/en-US/docs/Web/CSS/background-size)). [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensguttericonsize)","examples":["auto","contain","cover","50%","150%"],"default":"100%"},"errorLens.gutterIconSet":{"type":"string","markdownDescription":"Change gutter icon style. [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensguttericonset)","enum":["default","defaultOutline","borderless","circle","square","squareRounded","letter","emoji"],"enumDescriptions":["Similar to vscode icons in Problems Panel (old).","Similar to vscode icons in Problems Panel (new).","Similar to vscode icons in Problems Panel, only without a border.","Simple filled circle.","Simple filled square.","Simple filled square with rounded corners.","Simple one letter icon (E,W,I,H).","Emoji. (`errorLens.gutterEmoji` to control which emoji to show.)"],"default":"default"},"errorLens.gutterEmoji":{"type":"object","properties":{"error":{"type":"string","minLength":0,"default":"💀"},"warning":{"type":"string","minLength":0,"default":"😞"},"info":{"type":"string","minLength":0,"default":"🆗"},"hint":{"type":"string","minLength":0,"default":"🍏"}},"default":{"error":"💀","warning":"😞","info":"🆗","hint":"🍏"},"additionalProperties":false,"markdownDescription":"Pick emoji symbol for gutter icon when `#errorLens.gutterIconSet#` is `emoji`. [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensgutteremoji)"},"errorLens.errorGutterIconPath":{"type":"string","markdownDescription":"Absolute path to error gutter icon. [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlenserrorguttericonpath)","default":""},"errorLens.warningGutterIconPath":{"type":"string","markdownDescription":"Absolute path to warning gutter icon. [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlenserrorguttericonpath)","default":""},"errorLens.infoGutterIconPath":{"type":"string","markdownDescription":"Absolute path to info gutter icon. [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlenserrorguttericonpath)","default":""},"errorLens.hintGutterIconPath":{"type":"string","markdownDescription":"Absolute path to hint gutter icon. [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlenserrorguttericonpath)","default":""},"errorLens.errorGutterIconColor":{"type":"string","default":"#e45454","markdownDescription":"Error color of simple gutter icons (shapes and letters). [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlenserrorguttericoncolor)","format":"color"},"errorLens.warningGutterIconColor":{"type":"string","default":"#ff942f","markdownDescription":"Warning color of simple gutter icons (shapes and letters). [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlenserrorguttericoncolor)","format":"color"},"errorLens.infoGutterIconColor":{"type":"string","default":"#00b7e4","markdownDescription":"Info color of simple gutter icons (shapes and letters). [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlenserrorguttericoncolor)","format":"color"},"errorLens.hintGutterIconColor":{"type":"string","default":"#2faf64","markdownDescription":"Hint color of simple gutter icons (shapes and letters). [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlenserrorguttericoncolor)","format":"color"},"errorLens.removeLinebreaks":{"type":"boolean","default":true,"markdownDescription":"When enabled - replaces line breaks in inline diagnostic message with whitespaces."},"errorLens.replaceLinebreaksSymbol":{"type":"string","default":"⏎","markdownDescription":"Symbol to replace linebreaks. Requires enabling `#errorLens.removeLinebreaks#`."},"errorLens.scrollbarHackEnabled":{"type":"boolean","default":false,"markdownDescription":"When enabled - prevents showing horizontal scrollbar in editor (caused by inline decorations). Also prevents mouse hover at inline message. [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensscrollbarhackenabled)"},"errorLens.decorations":{"type":"object","markdownDescription":"Advanced decoration tweaking. Possible keys: `errorRange`, `warningRange`, `infoRange`, `hintRange`, `errorMessage, `warningMessage`, `infoMessage`, `hintMessage`.\n\n Possible properties: `backgroundColor`, `color`, `outline`, `border`, ... [api](https://code.visualstudio.com/api/references/vscode-api#ThemableDecorationAttachmentRenderOptions). [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensdecorations)","default":{"errorRange":{},"warningRange":{},"infoRange":{},"hintRange":{},"errorMessage":{},"warningMessage":{},"infoMessage":{},"hintMessage":{}},"patternProperties":{"^(errorRange|warningRange|infoRange|hintRange|errorMessage|warningMessage|infoMessage|hintMessage)$":{"type":"object","markdownDescription":"☑️ Key exists.","properties":{}}},"additionalProperties":false},"errorLens.ignoreUntitled":{"type":"boolean","default":false,"markdownDescription":"Controls whether to run on untitled (unsaved) files."},"errorLens.ignoreDirty":{"type":"boolean","default":false,"markdownDescription":"Controls whether to run on dirty (modified unsaved) files."},"errorLens.codeLensEnabled":{"type":"boolean","default":false,"markdownDescription":"Controls whether to show the Error Lens as a Code Lens above the code. [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlenscodelensenabled)"},"errorLens.codeLensLength":{"type":"object","properties":{"min":{"type":"integer","minimum":0,"default":0},"max":{"type":"integer","minimum":10,"default":200}},"additionalProperties":false,"default":{"min":0,"max":200},"markdownDescription":"Enforce minimum and maximum length of code lens messages."},"errorLens.codeLensTemplate":{"type":"string","default":"$severity $message","markdownDescription":"Template used for all messages appearing in the `#errorLens.codeLensEnabled#`. Whitespace between items is important.\n\nList of variables:\n\n- `$message` - diagnostic message text\n\n- `$count` - Number of diagnostics on the line\n\n- `$severity` - Severity prefix taken from `#errorLens.severityText#`\n\n- `$source` - Source of diagnostic e.g. \"eslint\"\n\n- `$code` - Code of the diagnostic"},"errorLens.codeLensOnClick":{"type":"string","enum":["none","showProblemsView","showQuickFix","searchForProblem"],"enumDescriptions":["Does nothing.","Shows problems view.","Shows quick fix menu.","Search for the problem."],"default":"showQuickFix","markdownDescription":"Controls what do on clicking the `#errorLens.codeLensEnabled#`."},"errorLens.experimental":{"type":"object","properties":{},"tags":["experimental"],"additionalProperties":false,"markdownDescription":"Experimental / temporary settings.","default":{}}}},"colors":[{"id":"errorLens.errorBackground","defaults":{"dark":"#e454541b","light":"#e4545420","highContrast":"#e454541b"},"description":"Background color of the entire line containing error."},{"id":"errorLens.errorMessageBackground","defaults":{"dark":"#e4545419","light":"#e4545419","highContrast":"#e4545419"},"description":"Background color of the error message."},{"id":"errorLens.errorRangeBackground","defaults":{"dark":"#e4545419","light":"#e4545419","highContrast":"#e4545419"},"description":"Background color of the error range (when errorLens.problemRangeDecorationEnabled setting enabled)."},{"id":"errorLens.errorBackgroundLight","defaults":{"dark":"#e4545420","light":"#e4545420","highContrast":"#e4545420"},"description":"Background color of the entire line containing error (Only in light themes)."},{"id":"errorLens.errorForeground","defaults":{"dark":"#ff6464","light":"#e45454","highContrast":"#ff6464"},"description":"Text color used to highlight lines containing errors."},{"id":"errorLens.errorForegroundLight","defaults":{"dark":"#e45454","light":"#e45454","highContrast":"#e45454"},"description":"Text color used to highlight lines containing errors (Only in light themes)."},{"id":"errorLens.warningBackground","defaults":{"dark":"#ff942f1b","light":"#ff942f20","highContrast":"#ff942f1b"},"description":"Background color used to highlight lines containing warnings."},{"id":"errorLens.warningMessageBackground","defaults":{"dark":"#ff942f19","light":"#ff942f19","highContrast":"#ff942f19"},"description":"Background color of the warning message."},{"id":"errorLens.warningRangeBackground","defaults":{"dark":"#ff942f19","light":"#ff942f19","highContrast":"#ff942f19"},"description":"Background color of the warning range (when errorLens.problemRangeDecorationEnabled setting enabled)."},{"id":"errorLens.warningBackgroundLight","defaults":{"dark":"#ff942f20","light":"#ff942f20","highContrast":"#ff942f20"},"description":"Background color used to highlight lines containing warnings (Only in light themes)."},{"id":"errorLens.warningForeground","defaults":{"dark":"#fa973a","light":"#ff942f","highContrast":"#fa973a"},"description":"Text color used to highlight lines containing warnings."},{"id":"errorLens.warningForegroundLight","defaults":{"dark":"#ff942f","light":"#ff942f","highContrast":"#ff942f"},"description":"Text color used to highlight lines containing warnings (Only in light themes)."},{"id":"errorLens.infoBackground","defaults":{"dark":"#00b7e420","light":"#00b7e420","highContrast":"#00b7e420"},"description":"Background color used to highlight lines containing info."},{"id":"errorLens.infoMessageBackground","defaults":{"dark":"#00b7e419","light":"#00b7e419","highContrast":"#00b7e419"},"description":"Background color of the info message."},{"id":"errorLens.infoRangeBackground","defaults":{"dark":"#00b7e419","light":"#00b7e419","highContrast":"#00b7e419"},"description":"Background color of the info range (when errorLens.problemRangeDecorationEnabled setting enabled)."},{"id":"errorLens.infoBackgroundLight","defaults":{"dark":"#00b7e420","light":"#00b7e420","highContrast":"#00b7e420"},"description":"Background color used to highlight lines containing info (Only in light themes)."},{"id":"errorLens.infoForeground","defaults":{"dark":"#00b7e4","light":"#00b7e4","highContrast":"#00b7e4"},"description":"Text color used to highlight lines containing info."},{"id":"errorLens.infoForegroundLight","defaults":{"dark":"#00b7e4","light":"#00b7e4","highContrast":"#00b7e4"},"description":"Text color used to highlight lines containing info (Only in light themes)."},{"id":"errorLens.hintBackground","defaults":{"dark":"#17a2a220","light":"#17a2a220","highContrast":"#17a2a220"},"description":"Background color used to highlight lines containing hints."},{"id":"errorLens.hintMessageBackground","defaults":{"dark":"#17a2a219","light":"#17a2a219","highContrast":"#17a2a219"},"description":"Background color of the hint message."},{"id":"errorLens.hintRangeBackground","defaults":{"dark":"#17a2a219","light":"#17a2a219","highContrast":"#17a2a219"},"description":"Background color of the hint range (when errorLens.problemRangeDecorationEnabled setting enabled)."},{"id":"errorLens.hintBackgroundLight","defaults":{"dark":"#17a2a220","light":"#17a2a220","highContrast":"#17a2a220"},"description":"Background color used to highlight lines containing hints (Only in light themes)."},{"id":"errorLens.hintForeground","defaults":{"dark":"#2faf64","light":"#2faf64","highContrast":"#2faf64"},"description":"Text color used to highlight lines containing hints."},{"id":"errorLens.hintForegroundLight","defaults":{"dark":"#2faf64","light":"#2faf64","highContrast":"#2faf64"},"description":"Text color used to highlight lines containing hints (Only in light themes)."},{"id":"errorLens.statusBarIconErrorForeground","defaults":{"dark":"#ff6464","light":"#e45454","highContrast":"#ff6464"},"description":"Status bar icon item error color. Foreground is used when the `errorLens.statusBarIconsUseBackground` setting is disabled."},{"id":"errorLens.statusBarIconWarningForeground","defaults":{"dark":"#fa973a","light":"#ff942f","highContrast":"#fa973a"},"description":"Status bar icon item error color. Foreground is used when the `errorLens.statusBarIconsUseBackground` setting is disabled."},{"id":"errorLens.statusBarErrorForeground","defaults":{"dark":"#ff6464","light":"#e45454","highContrast":"#ff6464"},"description":"Status bar item error color."},{"id":"errorLens.statusBarWarningForeground","defaults":{"dark":"#fa973a","light":"#ff942f","highContrast":"#fa973a"},"description":"Status bar item warning color."},{"id":"errorLens.statusBarInfoForeground","defaults":{"dark":"#00b7e4","light":"#00b7e4","highContrast":"#00b7e4"},"description":"Status bar item info color."},{"id":"errorLens.statusBarHintForeground","defaults":{"dark":"#2faf64","light":"#2faf64","highContrast":"#2faf64"},"description":"Status bar item hint color."}]},"scripts":{"vscode:prepublish":"webpack --mode production --color --devtool hidden-source-map","watch":"webpack --mode development --watch --stats minimal"},"devDependencies":{"@soda/friendly-errors-webpack-plugin":"^1.8.1","@types/lodash":"^4.17.16","@types/node":"^18.19.80","@types/vscode":"^1.95.0","@typescript-eslint/eslint-plugin":"^5.62.0","@typescript-eslint/parser":"^5.62.0","eslint":"^8.57.1","ts-loader":"^9.5.2","typescript":"^5.8.2","webpack":"^5.98.0","webpack-cli":"^6.0.1"},"dependencies":{"lodash":"^4.17.21"}},"location":{"$mid":1,"path":"/home/dan/.vscode-oss/extensions/usernamehw.errorlens-3.26.0-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"usernamehw","metadata":{"installedTimestamp":1748768400479,"pinned":false,"source":"gallery","id":"9d8c32ab-354c-4daf-a9bf-20b633734435","publisherId":"151820df-5dc5-4c97-8751-eb84643203fa","publisherDisplayName":"usernamehw","targetPlatform":"universal","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":184116},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"dbaeumer.vscode-eslint","uuid":"583b2b34-2c1e-4634-8c0b-0b82e283ea3a"},"manifest":{"name":"vscode-eslint","displayName":"ESLint","description":"Integrates ESLint JavaScript into VS Code.","version":"3.0.10","author":"Microsoft Corporation","license":"MIT","repository":{"type":"git","url":"https://github.com/Microsoft/vscode-eslint.git"},"bugs":{"url":"https://github.com/Microsoft/vscode-eslint/issues"},"publisher":"dbaeumer","icon":"eslint_icon.png","categories":["Programming Languages","Linters"],"keywords":["multi-root ready"],"engines":{"vscode":"^1.90.0"},"activationEvents":["onStartupFinished"],"extensionKind":["workspace"],"enabledApiProposals":[],"main":"./client/out/extension","capabilities":{"virtualWorkspaces":{"supported":false,"description":"Using ESLint is not possible in virtual workspaces."},"untrustedWorkspaces":{"supported":false,"description":"The extension requires workspace trust because it loads configuration files and code from the workspace and executes it."}},"contributes":{"configuration":{"type":"object","title":"ESLint","properties":{"eslint.enable":{"scope":"resource","type":"boolean","default":true,"description":"Controls whether eslint is enabled or not."},"eslint.packageManager":{"scope":"resource","type":"string","enum":["npm","yarn","pnpm"],"default":"npm","description":"The package manager you use to install node modules.","deprecationMessage":"The setting is deprecated. The Package Manager is automatically detected now."},"eslint.problems.shortenToSingleLine":{"type":"boolean","default":false,"description":"Shortens the text spans of underlined problems to their first related line.","scope":"resource"},"eslint.nodeEnv":{"scope":"resource","type":["string","null"],"default":null,"markdownDescription":"The value of `NODE_ENV` to use when running eslint tasks."},"eslint.nodePath":{"scope":"machine-overridable","type":["string","null"],"default":null,"markdownDescription":"A path added to `NODE_PATH` when resolving the eslint module."},"eslint.options":{"scope":"resource","type":"object","default":{},"markdownDescription":"The eslint options object to provide args normally passed to eslint when executed from a command line (see https://eslint.org/docs/developer-guide/nodejs-api#eslint-class)."},"eslint.trace.server":{"scope":"window","anyOf":[{"type":"string","enum":["off","messages","verbose"],"default":"off"},{"type":"object","properties":{"verbosity":{"type":"string","enum":["off","messages","verbose"],"default":"off"},"format":{"type":"string","enum":["text","json"],"default":"text"}}}],"default":"off","description":"Traces the communication between VSCode and the eslint linter service."},"eslint.run":{"scope":"resource","type":"string","enum":["onSave","onType"],"default":"onType","description":"Run the linter on save (onSave) or on type (onType)"},"eslint.autoFixOnSave":{"scope":"resource","type":"boolean","default":false,"description":"Turns auto fix on save on or off.","deprecationMessage":"The setting is deprecated. Use editor.codeActionsOnSave instead with a source.fixAll.eslint member."},"eslint.quiet":{"scope":"resource","type":"boolean","default":false,"description":"Turns on quiet mode, which ignores warnings."},"eslint.onIgnoredFiles":{"scope":"resource","type":"string","enum":["warn","off"],"default":"off","description":"Whether ESLint should issue a warning on ignored files."},"eslint.migration.2_x":{"scope":"application","type":"string","enum":["off","on"],"default":"on","description":"Whether ESlint should migrate auto fix on save settings."},"eslint.useESLintClass":{"scope":"resource","type":"boolean","default":false,"description":"Since version 7 ESLint offers a new API call ESLint. Use it even if the old CLIEngine is available. From version 8 on forward on ESLint class is available."},"eslint.useFlatConfig":{"scope":"resource","type":"boolean","default":null,"markdownDescription":"Controls whether flat config should be used or not. This setting requires ESLint version 8.57 or later and is interpreted according to the [ESLint Flat Config rollout plan](https://eslint.org/blog/2023/10/flat-config-rollout-plans/)."},"eslint.experimental.useFlatConfig":{"scope":"resource","type":"boolean","default":false,"deprecationMessage":"Use ESLint version 8.57 or later and `eslint.useFlatConfig` instead.","description":"Enables support of experimental Flat Config (aka eslint.config.js). Requires ESLint version >= 8.21 < 8.57.0)."},"eslint.workingDirectories":{"scope":"resource","type":"array","items":{"anyOf":[{"type":"string"},{"type":"object","properties":{"mode":{"type":"string","enum":["auto","location"],"default":"location"}},"required":["mode"]},{"type":"object","properties":{"directory":{"type":"string","description":"The working directory to use if a file's path starts with this directory."},"changeProcessCWD":{"type":"boolean","description":"Whether the process's cwd should be changed as well."}},"deprecationMessage":"Use the new !cwd form.","required":["directory"]},{"type":"object","properties":{"directory":{"type":"string","description":"The working directory to use if a file's path starts with this directory."},"!cwd":{"type":"boolean","description":"Set to true if ESLint shouldn't change the working directory."}},"required":["directory"]},{"type":"object","properties":{"pattern":{"type":"string","description":"A glob pattern to match a working directory."},"!cwd":{"type":"boolean","description":"Set to true if ESLint shouldn't change the working directory."}},"required":["pattern"]}]},"markdownDescription":"Specifies how the working directories ESLint is using are computed. ESLint resolves configuration files (e.g. `eslintrc`, `.eslintignore`) relative to a working directory so it is important to configure this correctly."},"eslint.validate":{"scope":"resource","type":"array","items":{"anyOf":[{"type":"string"},{"type":"object","properties":{"language":{"type":"string","description":"The language id to be validated by ESLint."},"autoFix":{"type":"boolean","description":"Whether auto fixes are provided for the language."}},"deprecationMessage":"Auto Fix is enabled by default. Use the single string form."}]},"description":"An array of language ids which should be validated by ESLint. If not installed ESLint will show an error."},"eslint.ignoreUntitled":{"scope":"resource","type":"boolean","default":false,"description":"If true, untitled files won't be validated by ESLint."},"eslint.probe":{"scope":"resource","type":"array","items":{"type":"string"},"default":["astro","javascript","javascriptreact","typescript","typescriptreact","html","mdx","vue","markdown","json","jsonc"],"description":"An array of language ids for which the extension should probe if support is installed."},"eslint.provideLintTask":{"scope":"resource","type":"boolean","default":false,"deprecationMessage":"This option is deprecated. Use eslint.lintTask.enable instead.","description":"Controls whether a task for linting the whole workspace will be available."},"eslint.lintTask.enable":{"scope":"resource","type":"boolean","default":false,"description":"Controls whether a task for linting the whole workspace will be available."},"eslint.lintTask.options":{"scope":"resource","type":"string","default":".","markdownDescription":"Command line options applied when running the task for linting the whole workspace (see https://eslint.org/docs/user-guide/command-line-interface)."},"eslint.runtime":{"scope":"machine-overridable","type":["string","null"],"default":null,"markdownDescription":"The location of the node binary to run ESLint under."},"eslint.execArgv":{"scope":"machine-overridable","anyOf":[{"type":"array","items":{"type":"string"}},{"type":"null"}],"default":null,"markdownDescription":"Additional exec argv argument passed to the runtime. This can for example be used to control the maximum heap space using --max_old_space_size"},"eslint.debug":{"scope":"window","type":"boolean","default":false,"markdownDescription":"Enables ESLint debug mode (same as `--debug` on the command line)"},"eslint.codeAction.disableRuleComment":{"scope":"resource","type":"object","default":{"enable":true,"location":"separateLine","commentStyle":"line"},"properties":{"enable":{"type":"boolean","default":true,"description":"Show the disable code actions."},"location":{"type":"string","enum":["separateLine","sameLine"],"default":"separateLine","description":"Configure the disable rule code action to insert the comment on the same line or a new line."},"commentStyle":{"type":"string","enum":["line","block"],"default":"line","definition":"The comment style to use when disabling a rule on a specific line."}},"additionalProperties":false,"markdownDescription":"Show disable lint rule in the quick fix menu."},"eslint.codeAction.showDocumentation":{"scope":"resource","type":"object","default":{"enable":true},"properties":{"enable":{"type":"boolean","default":true,"description":"Show the documentation code actions."}},"additionalProperties":false,"markdownDescription":"Show open lint rule documentation web page in the quick fix menu."},"eslint.codeActionsOnSave.mode":{"scope":"resource","type":"string","enum":["all","problems"],"enumDescriptions":["Fixes all possible problems in the file. This option might take some time.","Fixes only reported problems that have non-overlapping textual edits. This option runs a lot faster."],"default":"all","markdownDescription":"Specifies the code action mode. Possible values are 'all' and 'problems'."},"eslint.codeActionsOnSave.rules":{"scope":"resource","anyOf":[{"type":"array","items":{"type":"string"}},{"type":"null"}],"default":null,"markdownDescription":"The rules that should be executed when computing the code actions on save or formatting a file. Defaults to the rules configured via the ESLint configuration"},"eslint.format.enable":{"scope":"resource","type":"boolean","default":false,"description":"Enables ESLint as a formatter."},"eslint.rules.customizations":{"items":{"properties":{"severity":{"enum":["downgrade","error","info","default","upgrade","warn","off"],"type":"string"},"rule":{"type":"string"}},"type":"object"},"scope":"resource","type":"array","description":"Override the severity of one or more rules reported by this extension, regardless of the project's ESLint config. Use globs to apply default severities for multiple rules."},"eslint.notebooks.rules.customizations":{"items":{"properties":{"severity":{"enum":["downgrade","error","info","default","upgrade","warn","off"],"type":"string"},"rule":{"type":"string"}},"type":"object"},"scope":"resource","type":"array","description":"A special rules customization section for text cells in notebook documents."},"eslint.timeBudget.onValidation":{"scope":"resource","type":"object","properties":{"warn":{"type":"number","default":4000,"minimum":0,"markdownDescription":"The time budget in milliseconds to spend on validation before showing a warning."},"error":{"type":"number","default":8000,"minimum":0,"markdownDescription":"The time budget in milliseconds to spend on validation before showing an error."}},"default":{"warn":4000,"error":8000},"markdownDescription":"The time budget in milliseconds to spend on validation before showing a warning or error."},"eslint.timeBudget.onFixes":{"scope":"resource","type":"object","properties":{"warn":{"type":"number","default":3000,"minimum":0,"markdownDescription":"The time budget in milliseconds to spend on computing fixes before showing a warning."},"error":{"type":"number","default":6000,"minimum":0,"markdownDescription":"The time budget in milliseconds to spend on computing fixes before showing an error."}},"default":{"warn":3000,"error":6000},"markdownDescription":"The time budget in milliseconds to spend on computing fixes before showing a warning or error."}}},"commands":[{"title":"Fix all auto-fixable Problems","category":"ESLint","command":"eslint.executeAutofix"},{"title":"Create ESLint configuration","category":"ESLint","command":"eslint.createConfig"},{"title":"Show Output Channel","category":"ESLint","command":"eslint.showOutputChannel"},{"title":"Migrate Settings","category":"ESLint","command":"eslint.migrateSettings"},{"title":"Restart ESLint Server","category":"ESLint","command":"eslint.restart"},{"title":"Revalidate all open files","category":"ESLint","command":"eslint.revalidate"}],"taskDefinitions":[{"type":"eslint"}],"jsonValidation":[{"fileMatch":".eslintrc","url":"https://json.schemastore.org/eslintrc"},{"fileMatch":".eslintrc.json","url":"https://json.schemastore.org/eslintrc"},{"fileMatch":"package.json","url":"./package-json-schema.json"}],"languages":[{"id":"ignore","extensions":[".eslintignore"]},{"id":"jsonc","filenames":[".eslintrc.json"]}]},"scripts":{"vscode:prepublish":"npm run webpack","webpack":"npm run clean && webpack --mode production --config ./client/webpack.config.js && webpack --mode production --config ./server/webpack.config.js","webpack:dev":"npm run clean && webpack --mode none --config ./client/webpack.config.js && webpack --mode none --config ./server/webpack.config.js","compile":"tsc -b","compile:client":"tsc -b ./client/tsconfig.json","compile:server":"tsc -b ./server/tsconfig.json","watch":"tsc -b -w","test":"cd client && npm test && cd ..","lint":"node ./build/bin/all.js run lint","clean":"rimraf client/out && rimraf server/out","postinstall":"node ./build/bin/all.js install","symlink:lsp":"node ./build/bin/symlink.js"},"devDependencies":{"@types/mocha":"^10.0.6","@types/node":"^18.14.6","@typescript-eslint/eslint-plugin":"^7.1.1","@typescript-eslint/parser":"^7.1.1","eslint":"^8.57.0","merge-options":"^3.0.4","mocha":"^10.3.0","rimraf":"^5.0.5","ts-loader":"^9.5.1","typescript":"^5.3.3","webpack":"^5.90.3","webpack-cli":"^5.1.4","shelljs":"^0.8.5"}},"location":{"$mid":1,"path":"/home/dan/.vscode-oss/extensions/dbaeumer.vscode-eslint-3.0.10-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"dbaeumer","metadata":{"installedTimestamp":1748768414320,"pinned":false,"source":"gallery","id":"583b2b34-2c1e-4634-8c0b-0b82e283ea3a","publisherId":"29859a75-d81b-4f0e-8578-2c80ecee6f99","publisherDisplayName":"dbaeumer","targetPlatform":"universal","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":802182},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"xabikos.javascriptsnippets","uuid":"a2cec723-5349-460d-9de9-0fd1f8d3456f"},"manifest":{"name":"JavaScriptSnippets","description":"Code snippets for JavaScript in ES6 syntax","version":"1.8.0","displayName":"JavaScript (ES6) code snippets","publisher":"xabikos","icon":"images/javascript.png","license":"SEE LICENSE IN LICENSE.md","repository":{"type":"git","url":"https://github.com/xabikos/vscode-javascript"},"engines":{"vscode":"0.10.x"},"categories":["Snippets"],"contributes":{"snippets":[{"language":"javascript","path":"./snippets/snippets.json"},{"language":"typescript","path":"./snippets/snippets.json"},{"language":"javascriptreact","path":"./snippets/snippets.json"},{"language":"typescriptreact","path":"./snippets/snippets.json"},{"language":"html","path":"./snippets/snippets.json"},{"language":"vue","path":"./snippets/snippets.json"}]}},"location":{"$mid":1,"path":"/home/dan/.vscode-oss/extensions/xabikos.javascriptsnippets-1.8.0-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"xabikos","metadata":{"installedTimestamp":1748768478011,"pinned":false,"source":"gallery","id":"a2cec723-5349-460d-9de9-0fd1f8d3456f","publisherId":"8961c3fe-3ec6-429d-886a-50b5af362a88","publisherDisplayName":"xabikos","targetPlatform":"universal","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":22283},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"yoavbls.pretty-ts-errors","uuid":"1e149c89-8f97-447e-863d-1146f0ad1b70"},"manifest":{"name":"pretty-ts-errors","displayName":"Pretty TypeScript Errors","publisher":"YoavBls","description":"Make TypeScript errors prettier and more human-readable in VSCode","version":"0.5.3","icon":"assets/icon.png","repository":{"type":"git","url":"https://github.com/yoavbls/pretty-ts-errors"},"homepage":"https://github.com/yoavbls/pretty-ts-errors","sponsor":{"url":"https://github.com/sponsors/yoavbls"},"engines":{"vscode":"^1.77.0"},"categories":["Programming Languages","Debuggers","Visualization","Other"],"galleryBanner":{"color":"#133b55","theme":"dark"},"activationEvents":["onLanguage:typescript","onLanguage:javascript","onLanguage:typescriptreact","onLanguage:javascriptreact","onLanguage:astro","onLanguage:svelte","onLanguage:vue","onLanguage:mdx","onLanguage:glimmer-js","onLanguage:glimmer-ts"],"main":"./dist/extension.js","browser":"./dist/extension.js","contributes":{"languages":[{"id":"type","extensions":[".type"]}],"grammars":[{"language":"type","scopeName":"source.type","path":"./syntaxes/type.tmGrammar.json"}]},"scripts":{"vscode:prepublish":"npm run package","compile":"node scripts/build","watch":"npm run compile -- --watch","build":"vsce package","package":"node scripts/build -- --production","compile-tests":"tsc -p . --outDir out","watch-tests":"tsc -p . -w --outDir out","pretest":"npm run compile-tests && npm run compile && npm run lint","lint":"eslint src --ext ts & tsc --noEmit","test":"node ./out/test/runTest.js"},"devDependencies":{"@types/glob":"^8.1.0","@types/lz-string":"^1.5.0","@types/mocha":"^10.0.1","@types/node":"16.x","@types/prettier":"^2.7.3","@types/vscode":"^1.70.0","@typescript-eslint/eslint-plugin":"^6.2.0","@typescript-eslint/parser":"^6.2.0","@vscode/test-electron":"^2.3.3","esbuild":"^0.18.17","eslint":"^8.46.0","glob":"^8.1.0","mocha":"^10.2.0","path-browserify":"^1.0.1","typescript":"^5.1.6"},"dependencies":{"lz-string":"^1.5.0","prettier":"^2.8.8","ts-dedent":"^2.2.0","vscode-languageclient":"^8.1.0","vscode-languageserver-types":"^3.17.3","vscode-uri":"^3.0.7"}},"location":{"$mid":1,"path":"/home/dan/.vscode-oss/extensions/yoavbls.pretty-ts-errors-0.5.3-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"YoavBls","metadata":{"installedTimestamp":1748768524000,"pinned":false,"source":"gallery","id":"1e149c89-8f97-447e-863d-1146f0ad1b70","publisherId":"0939a3c0-6896-4249-bfa3-4ff58ebaccd0","publisherDisplayName":"YoavBls","targetPlatform":"universal","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":2195810},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"dsznajder.es7-react-js-snippets","uuid":"19804510-b475-4dae-b0f7-6ca08fd1af0c"},"manifest":{"name":"es7-react-js-snippets","displayName":"ES7+ React/Redux/React-Native snippets","description":"Extensions for React, React-Native and Redux in JS/TS with ES7+ syntax. Customizable. Built-in integration with prettier.","version":"4.4.3","publisher":"dsznajder","icon":"images/logo.png","browser":"./lib/index.js","main":"./lib/index.js","keywords":["snippets","react","redux","react-native","customizable","javascript","typescript","prettier"],"license":"MIT","repository":{"type":"git","url":"https://github.com/dsznajder/vscode-es7-javascript-react-snippets"},"engines":{"vscode":"^1.60.0"},"categories":["Snippets"],"extensionKind":["ui","workspace"],"capabilities":{"virtualWorkspaces":true,"untrustedWorkspaces":{"supported":true}},"activationEvents":["onLanguage:typescript","onLanguage:typescriptReact","onLanguage:javascript","onLanguage:javascriptReact","onCommand:reactSnippets.search","onStartupFinished"],"contributes":{"commands":[{"command":"reactSnippets.search","title":"Snippet search"}],"keybindings":[{"command":"reactSnippets.search","key":"ctrl+alt+r","mac":"shift+cmd+r","when":"editorTextFocus"}],"configuration":{"title":"ES React/React-Native/Redux snippets","properties":{"reactSnippets.settings.prettierEnabled":{"type":"boolean","markdownDescription":"[EXPERIMENTAL: MIGHT NOT WORK]: Integrate prettier settings with code generated from snippets.","default":false},"reactSnippets.settings.importReactOnTop":{"type":"boolean","markdownDescription":"Controls if snippets should add `import React from 'react';` at the top of components.\nUse if you have React +17 and use jsx transform.","default":true},"reactSnippets.settings.typescript":{"type":"boolean","markdownDescription":"Controls if React components have typescript Props typing.","default":true},"reactSnippets.settings.languageScopes":{"type":"string","markdownDescription":"defines the language scopes for which the snippets will be available.\nUse comma separated values.\nFor example: `typescript,typescriptreact,javascript,javascriptreact`","default":"typescript,typescriptreact,javascript,javascriptreact"},"reactSnippets.settings.typescriptPropsStatePrefix":{"type":"string","markdownDescription":"Controls which prefix for typescript snippets should use for props/state.","default":"type","enum":["type","interface"]}}},"snippets":[{"language":"javascript","path":"./lib/snippets/generated.json"},{"language":"javascriptreact","path":"./lib/snippets/generated.json"},{"language":"typescript","path":"./lib/snippets/generated.json"},{"language":"typescriptreact","path":"./lib/snippets/generated.json"}]},"scripts":{"vscode:prepublish":"yarn compile","compile":"rm -rf lib; tsc -p ./ --noEmit false --module commonjs --outDir lib","compile:dev":"rm -rf lib; tsc -p ./ --noEmit false --module commonjs --outDir lib","lint":"eslint --ext .js,.ts,.tsx ./src/","watch":"tsc -watch -p ./","typescript":"tsc --noEmit"},"dependencies":{"prettier":"2.5.1"},"peerDependencies":{"prettier":"^2"},"devDependencies":{"@babel/cli":"7.17.0","@babel/eslint-parser":"7.17.0","@babel/preset-typescript":"7.16.7","@types/node":"17.0.16","@types/prettier":"2.4.3","@types/vscode":"^1.60.0","@typescript-eslint/eslint-plugin":"5.11.0","@typescript-eslint/parser":"5.11.0","eslint":"8.8.0","eslint-config-prettier":"8.3.0","eslint-plugin-babel":"5.3.1","eslint-plugin-eslint-comments":"3.2.0","eslint-plugin-import":"2.25.4","eslint-plugin-jest":"26.1.0","eslint-plugin-prettier":"4.0.0","eslint-plugin-simple-import-sort":"7.0.0","prettier":"2.5.1","typescript":"4.5.5"},"prettier":{"bracketSameLine":false,"bracketSpacing":true,"printWidth":80,"semi":true,"singleQuote":true,"tabWidth":2,"trailingComma":"all","useTabs":false,"endOfLine":"auto"}},"location":{"$mid":1,"path":"/home/dan/.vscode-oss/extensions/dsznajder.es7-react-js-snippets-4.4.3-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"dsznajder","metadata":{"installedTimestamp":1748768557373,"pinned":false,"source":"gallery","id":"19804510-b475-4dae-b0f7-6ca08fd1af0c","publisherId":"7ea644b4-2d93-4979-aac5-a12afebeb762","publisherDisplayName":"dsznajder","targetPlatform":"universal","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":21293367},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"mattpocock.ts-error-translator","uuid":"e78c7d39-3c30-4ef3-a3bd-b5b641cb91eb"},"manifest":{"name":"ts-error-translator","displayName":"Total TypeScript","description":"Learn TypeScript in VSCode with a TypeScript error translator and syntax guide.","license":"MIT","author":"Matt Pocock","version":"0.10.1","private":true,"engines":{"vscode":"^1.50.0"},"icon":"media/icon.png","repository":{"type":"git","url":"https://github.com/mattpocock/ts-error-translator"},"bugs":{"url":"https://github.com/mattpocock/ts-error-translator/issues"},"galleryBanner":{"color":"#fff"},"categories":["Education","Linters"],"activationEvents":["onLanguage:typescript","onLanguage:typescriptreact","onLanguage:javascript","onLanguage:javascriptreact","onLanguage:vue","onLanguage:svelte","onLanguage:astro"],"main":"./out/extension.js","browser":"./out/extension.js","keywords":["typescript"],"publisher":"mattpocock","contributes":{"configuration":{"title":"Total TypeScript","properties":{"totalTypeScript.hideAllTips":{"type":"boolean","default":null},"totalTypeScript.hiddenTips":{"type":"array","default":[]},"totalTypeScript.hideBasicTips":{"type":"boolean","default":null}}}},"scripts":{"vscode:build":"esbuild --bundle --platform=\"node\" src/extension.ts --outfile=out/extension.js --external:vscode --format=cjs","vscode:package":"npx @vscode/vsce package --no-dependencies","bundle-errors":"node -r esbuild-register src/bundleErrors.ts","lint":"tsc","test:e2e":"node ./out/test/runTest.js","publish:vsce":"npx @vscode/vsce publish --no-dependencies -i $(find . -iname *.vsix)","publish:ovsx":"npx ovsx publish --no-dependencies $(find . -iname *.vsix)"},"dependencies":{"front-matter":"^4.0.2"},"devDependencies":{"@total-typescript/error-translation-engine":"workspace:*","@types/glob":"^7.2.0","@types/mocha":"^9.1.0","@types/node":"14.x","@types/vscode":"^1.50.0","@typescript-eslint/eslint-plugin":"^6.2.1","@typescript-eslint/parser":"^6.2.1","@vscode/test-electron":"^2.1.3","esbuild":"^0.18.17","esbuild-register":"^3.4.2","eslint":"^8.46.0","glob":"^7.2.0","mocha":"^9.2.2","typescript":"^5.1.6","@total-typescript/tips-parser":"workspace:*"}},"location":{"$mid":1,"path":"/home/dan/.vscode-oss/extensions/mattpocock.ts-error-translator-0.10.1-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"mattpocock","metadata":{"installedTimestamp":1748768630668,"pinned":false,"source":"gallery","id":"e78c7d39-3c30-4ef3-a3bd-b5b641cb91eb","publisherId":"266d893c-7843-4152-a6c6-c6ca378d5832","publisherDisplayName":"mattpocock","targetPlatform":"universal","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":2168432},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"ecmel.vscode-html-css","uuid":"aaee577c-f062-495a-9816-0cbd442f1d25"},"manifest":{"name":"vscode-html-css","displayName":"HTML CSS Support","description":"CSS Intellisense for HTML","version":"2.0.13","license":"MIT","publisher":"ecmel","author":{"name":"Ecmel Ercan","url":"https://ecmel.dev/"},"sponsor":{"url":"https://github.com/sponsors/ecmel"},"repository":{"type":"git","url":"https://github.com/ecmel/vscode-html-css.git"},"bugs":"https://github.com/ecmel/vscode-html-css/issues","homepage":"https://github.com/ecmel/vscode-html-css","categories":["Programming Languages"],"keywords":["css","html","twig","blade","django","nunjucks","mustache","angular","react","vue","ejs","lit","lit-html","bootstrap","template","javascript","typescript","maud","rust","multi-root ready"],"activationEvents":["onStartupFinished"],"contributes":{"configuration":{"title":"CSS Settings","properties":{"css.enabledLanguages":{"type":"array","scope":"application","description":"List of languages which suggestions are desired.","default":["html"]},"css.styleSheets":{"type":"array","scope":"resource","description":"List of local or remote style sheets for suggestions.","default":[]},"css.autoValidation":{"type":"string","scope":"resource","description":"When to validate class selectors.","default":"Never","enum":["Never","Save","Always"]}}},"commands":[{"command":"vscode-html-css.validate","title":"CSS: Validate class selectors"},{"command":"vscode-html-css.clear","title":"CSS: Clear style sheets cache"}]},"capabilities":{"untrustedWorkspaces":{"supported":false},"virtualWorkspaces":true},"main":"./dist/extension.js","icon":"icon.png","scripts":{"clean":"git clean -Xdf","prereset":"npm run clean","reset":"npm install","format":"prettier --ignore-path .gitignore -w --list-different .","debug":"rollup -c --configPlugin typescript -w","build":"rollup -c --configPlugin typescript --forceExit","compile":"tsc -p ./ --outDir out --sourceMap true --module commonjs --moduleResolution node","pretest":"npm run build && npm run compile","test":"node ./out/test/runTest.js","coverage":"c8 -n out/src npm run test","update":"npx npm-check-updates -u -x prettier -x @types/vscode","vscode:prepublish":"npm run build","package":"vsce package","publish":"vsce publish"},"engines":{"vscode":"^1.86.0"},"devDependencies":{"@rollup/plugin-commonjs":"^25.0.7","@rollup/plugin-node-resolve":"^15.2.3","@rollup/plugin-terser":"^0.4.4","@rollup/plugin-typescript":"^11.1.6","@types/line-column":"^1.0.2","@types/mocha":"^10.0.6","@types/node":"^20.11.17","@types/sinon":"^17.0.3","@types/vscode":"^1.86.0","@vscode/test-electron":"^2.4.1","@vscode/vsce":"^2.32.0","c8":"^9.1.0","fast-glob":"^3.3.2","line-column":"^1.0.2","mocha":"^10.3.0","prettier":"^2.8.8","rollup":"^4.22.4","rollup-plugin-cleandir":"^2.0.0","sinon":"^17.0.1","tslib":"^2.6.2","typescript":"^5.3.3"}},"location":{"$mid":1,"path":"/home/dan/.vscode-oss/extensions/ecmel.vscode-html-css-2.0.13-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"ecmel","metadata":{"installedTimestamp":1748768812158,"pinned":false,"source":"gallery","id":"aaee577c-f062-495a-9816-0cbd442f1d25","publisherId":"7aa35068-d7c4-4220-b9c1-10360795fd5f","publisherDisplayName":"ecmel","targetPlatform":"universal","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":26527},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"esbenp.prettier-vscode","uuid":"96fa4707-6983-4489-b7c5-d5ffdfdcce90"},"manifest":{"name":"prettier-vscode","displayName":"Prettier - Code formatter","description":"Code formatter using prettier","version":"11.0.0","publisher":"esbenp","author":"Prettier <@prettiercode>","galleryBanner":{"color":"#ffe04b","theme":"light"},"sponsor":{"url":"https://opencollective.com/prettier"},"homepage":"https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode","repository":{"type":"git","url":"https://github.com/prettier/prettier-vscode.git"},"license":"MIT","bugs":{"url":"https://github.com/prettier/prettier-vscode/issues"},"engines":{"vscode":"^1.80.0"},"keywords":["multi-root ready","prettier","formatter","javascript","handlebars","js","jsx","flow","typescript","ts","json","css","less","scss","styled-components","styled-jsx","markdown","md","commonmark","mdx","php","pug","ruby","swift","html","vue","ember","glimmer","angular","graphql","yaml","yml"],"categories":["Formatters"],"activationEvents":["onStartupFinished"],"icon":"icon.png","main":"./dist/extension","browser":"./dist/web-extension","scripts":{"clean":"node ./scripts/clean.js","lint":"eslint -c .eslintrc.js --ext .ts .","pretest":"yarn test-compile && cd test-fixtures/plugins && yarn install && cd ../plugins-pnpm && pnpm i && cd ../outdated && yarn install && cd ../module && yarn install && cd ../specific-version && yarn install && cd ../explicit-dep && yarn install && cd implicit-dep && yarn install && cd ../../v3 && yarn install && cd ../plugin-tailwindcss && npm i && cd ../v3-plugins && npm i && cd ../v3-plugin-override && yarn install","prettier":"prettier --write '**/*.{ts,json,md,hbs,yml,js}'","test-compile":"yarn clean && tsc -p ./ && yarn webpack && cp -r ./src/worker ./out","test":"node ./out/test/runTests.js","version":"node ./scripts/version.js && git add CHANGELOG.md","vscode:prepublish":"webpack --mode production","watch":"tsc --watch -p ./","webpack-dev":"webpack --mode development --watch","webpack":"webpack --mode development","chrome":"yarn webpack && vscode-test-web --browserType=chromium --extensionDevelopmentPath=. .","prepare":"husky"},"lint-staged":{"**/*.{ts,json,md,yml,hbs,js}":["prettier --write"],"src/**/*.ts":["eslint -c .eslintrc.js --ext .ts ."]},"devDependencies":{"@types/fs-extra":"^11.0.4","@types/glob":"^7.2.0","@types/mocha":"^10.0.7","@types/node":"20.11.30","@types/prettier":"^2.7.2","@types/resolve":"^1.20.3","@types/semver":"^7.5.8","@types/sinon":"^17.0.3","@types/tmp":"^0.2.6","@types/vscode":"^1.80.0","@typescript-eslint/eslint-plugin":"^5.45.0","@typescript-eslint/parser":"^5.45.0","@vscode/test-electron":"^2.4.1","@vscode/test-web":"^0.0.56","copy-webpack-plugin":"^12.0.2","eslint":"^8.31.0","eslint-config-prettier":"^9.1.0","fs-extra":"^11.2.0","glob":"^7.2.0","husky":"^9.1.4","lint-staged":"^15.2.9","mocha":"^10.7.3","path-browserify":"^1.0.1","process":"^0.11.10","sinon":"^17.0.1","tmp":"^0.2.3","ts-loader":"^9.5.1","typescript":"^4.6.3","util":"^0.12.4","vsce":"^2.15.0","vscode-nls-dev":"^4.0.4","webpack":"^5.93.0","webpack-cli":"^5.0.1"},"dependencies":{"find-up":"5.0.0","prettier":"^2.8.8","resolve":"^1.22.8","semver":"^7.6.3","vscode-nls":"^5.2.0"},"capabilities":{"virtualWorkspaces":true,"untrustedWorkspaces":{"supported":"limited","description":"Only the built-in version of Prettier will be used when running in untrusted mode.","restrictedConfigurations":["prettier.documentSelectors","prettier.resolveGlobalModules","prettier.ignorePath","prettier.prettierPath","prettier.configPath","prettier.useEditorConfig","prettier.resolveGlobalModules","prettier.withNodeModules"]}},"contributes":{"configuration":{"type":"object","title":"Prettier","properties":{"prettier.disableLanguages":{"type":"array","items":{"type":"string"},"deprecationMessage":"This feature is no longer supported. Instead, configure VS Code [default formatters](https://github.com/prettier/prettier-vscode#default-formatter) or use .prettierignore.","markdownDescription":"A list of languages IDs to disable this extension on.","scope":"window"},"prettier.documentSelectors":{"type":"array","items":{"type":"string"},"markdownDescription":"A list of [glob patterns](https://code.visualstudio.com/api/references/vscode-api#GlobPattern) to register Prettier formatter.","scope":"window"},"prettier.enable":{"type":"boolean","default":true,"markdownDescription":"Controls whether Prettier is enabled or not. Reload required.","scope":"resource"},"prettier.requireConfig":{"type":"boolean","default":false,"markdownDescription":"Require a prettier configuration file to format. See [documentation for valid configuration files](https://prettier.io/docs/en/configuration.html).\n\n> _Note, untitled files will still be formatted using the VS Code prettier settings even when this setting is set._","scope":"resource"},"prettier.resolveGlobalModules":{"type":"boolean","default":false,"markdownDescription":"When enabled, this extension will attempt to use global npm or yarn modules if local modules cannot be resolved.\n> _This setting can have a negative performance impact, particularly on Windows when you have attached network drives. Only enable this if you must use global modules._","scope":"resource"},"prettier.withNodeModules":{"type":"boolean","default":false,"markdownDescription":"This extension will process files in `node_modules`.","scope":"resource"},"prettier.packageManager":{"scope":"resource","type":"string","enum":["npm","yarn","pnpm"],"default":"npm","deprecationMessage":"Package manager is now automatically detected by VS Code. This setting is no longer used.","markdownDescription":"The package manager you use to install node modules."},"prettier.useEditorConfig":{"type":"boolean","default":true,"markdownDescription":"Whether or not to take `.editorconfig` into account when parsing configuration. See the [`prettier.resolveConfig`](https://prettier.io/docs/en/api.html) docs for details.","scope":"resource"},"prettier.ignorePath":{"type":"string","default":".prettierignore","markdownDescription":"Path to a `.prettierignore` file.","scope":"resource"},"prettier.prettierPath":{"type":"string","markdownDescription":"Path to the `prettier` module, eg: `./node_modules/prettier`.","scope":"resource"},"prettier.configPath":{"type":"string","markdownDescription":"Path to the prettier configuration file.","scope":"resource"},"prettier.enableDebugLogs":{"type":"boolean","default":false,"markdownDescription":"Enable debug logs for troubleshooting.","scope":"resource"},"prettier.printWidth":{"type":"integer","default":80,"markdownDescription":"Fit code within this line limit.","scope":"language-overridable"},"prettier.tabWidth":{"type":"integer","default":2,"markdownDescription":"Number of spaces it should use per tab.","scope":"language-overridable"},"prettier.singleQuote":{"type":"boolean","default":false,"markdownDescription":"Use single instead of double quotes.","scope":"language-overridable"},"prettier.trailingComma":{"type":"string","enum":["none","es5","all"],"default":"es5","markdownDescription":"Controls the printing of trailing commas wherever possible. \nValid options:\n- `none` - No trailing commas\n- `es5` - Trailing commas where valid in ES5 (objects, arrays, etc)\n- `all` - Trailing commas wherever possible (function arguments)","scope":"language-overridable"},"prettier.bracketSpacing":{"type":"boolean","default":true,"markdownDescription":"Controls the printing of spaces inside object literals.","scope":"language-overridable"},"prettier.singleAttributePerLine":{"type":"boolean","default":false,"markdownDescription":"Enforces single attribute per line in HTML, JSX, Vue and Angular.","scope":"language-overridable"},"prettier.bracketSameLine":{"type":"boolean","default":false,"markdownDescription":"Puts the `>` of a multi-line HTML (HTML, JSX, Vue, Angular) element at the end of the last line instead of being alone on the next line (does not apply to self closing elements).","scope":"language-overridable"},"prettier.jsxBracketSameLine":{"type":"boolean","default":false,"markdownDescription":"Puts the `>` of a multi-line jsx element at the end of the last line instead of being alone on the next line (does not apply to self closing elements).","deprecationMessage":"This option has been deprecated in v2.4.0, use `bracketSameLine` instead.","scope":"language-overridable"},"prettier.semi":{"type":"boolean","default":true,"markdownDescription":"Whether to add a semicolon at the end of every line.","scope":"language-overridable"},"prettier.requirePragma":{"type":"boolean","default":false,"markdownDescription":"Prettier can restrict itself to only format files that contain a special comment, called a pragma, at the top of the file. This is very useful when gradually transitioning large, unformatted codebases to prettier.","scope":"language-overridable"},"prettier.insertPragma":{"type":"boolean","default":false,"markdownDescription":"Prettier can insert a special `@format` marker at the top of files specifying that the file has been formatted with prettier. This works well when used in tandem with the `--require-pragma` option. If there is already a docblock at the top of the file then this option will add a newline to it with the `@format` marker.","scope":"language-overridable"},"prettier.useTabs":{"type":"boolean","default":false,"markdownDescription":"Indent lines with tabs.","scope":"language-overridable"},"prettier.proseWrap":{"type":"string","enum":["preserve","always","never"],"default":"preserve","markdownDescription":"(Markdown) wrap prose over multiple lines.","scope":"language-overridable"},"prettier.arrowParens":{"type":"string","enum":["avoid","always"],"default":"always","markdownDescription":"Include parentheses around a sole arrow function parameter.","scope":"language-overridable"},"prettier.jsxSingleQuote":{"type":"boolean","default":false,"markdownDescription":"Use single quotes instead of double quotes in JSX.","scope":"language-overridable"},"prettier.htmlWhitespaceSensitivity":{"type":"string","enum":["css","strict","ignore"],"default":"css","markdownDescription":"Specify the global [whitespace sensitivity](https://prettier.io/blog/2018/11/07/1.15.0.html#whitespace-sensitive-formatting) for HTML files.\nValid options:\n- `css` - Respect the default value of CSS `display` property.\n- `strict` - Whitespaces are considered sensitive.\n- `ignore` - Whitespaces are considered insensitive.","scope":"language-overridable"},"prettier.vueIndentScriptAndStyle":{"type":"boolean","default":false,"markdownDescription":"Whether or not to indent the code inside `<script>` and `<style>` tags in Vue SFC files.","scope":"language-overridable"},"prettier.endOfLine":{"type":"string","enum":["auto","lf","crlf","cr"],"default":"lf","markdownDescription":"Specify the end of line used by prettier.","scope":"language-overridable"},"prettier.quoteProps":{"type":"string","enum":["as-needed","consistent","preserve"],"default":"as-needed","markdownDescription":"Change when properties in objects are quoted.\nValid options:\n- `\"as-needed\"` - Only add quotes around object properties where required.\n- `\"consistent\"` - If at least one property in an object requires quotes, quote all properties.\n- `\"preserve\"` - Respect the input use of quotes in object properties.","scope":"language-overridable"},"prettier.embeddedLanguageFormatting":{"type":"string","enum":["auto","off"],"default":"auto","markdownDescription":"Control whether Prettier formats quoted code embedded in the file.","scope":"language-overridable"},"prettier.experimentalTernaries":{"type":"boolean","default":false,"markdownDescription":"Try prettier's [new ternary formatting](https://github.com/prettier/prettier/pull/13183) before it becomes the default behavior.","scope":"language-overridable"}}},"jsonValidation":[{"fileMatch":".prettierrc","url":"https://json.schemastore.org/prettierrc"},{"fileMatch":".prettierrc.json","url":"https://json.schemastore.org/prettierrc"},{"fileMatch":"package.json","url":"./package-json-schema.json"}],"languages":[{"id":"json","filenames":[".prettierrc"]},{"id":"ignore","filenames":[".prettierignore"]},{"id":"graphql","extensions":[".graphql"]},{"id":"vue","extensions":[".vue"]},{"id":"handlebars","extensions":[".hbs",".handlebars"]}],"commands":[{"command":"prettier.createConfigFile","title":"Prettier: Create Configuration File"},{"command":"prettier.forceFormatDocument","title":"Format Document (Forced)","when":"editorFocus"}]}},"location":{"$mid":1,"path":"/home/dan/.vscode-oss/extensions/esbenp.prettier-vscode-11.0.0-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"esbenp","metadata":{"installedTimestamp":1748768922798,"pinned":false,"source":"gallery","id":"96fa4707-6983-4489-b7c5-d5ffdfdcce90","publisherId":"d16f4e39-2ffb-44e3-9c0d-79d873570e3a","publisherDisplayName":"esbenp","targetPlatform":"universal","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":10015788},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"streetsidesoftware.code-spell-checker","uuid":"f6dbd813-b0a0-42c1-90ea-10dde9d925a7"},"manifest":{"name":"code-spell-checker","description":"Spelling checker for source code","displayName":"Code Spell Checker","icon":"images/SpellCheck.png","author":"Jason Dent","license":"GPL-3.0-or-later","version":"4.0.47","publisher":"streetsidesoftware","private":true,"type":"module","main":"./packages/client/dist/extension.cjs","repository":{"type":"git","url":"https://github.com/streetsidesoftware/vscode-spell-checker"},"bugs":{"url":"https://github.com/streetsidesoftware/vscode-spell-checker/issues"},"homepage":"https://streetsidesoftware.github.io/vscode-spell-checker","packageManager":"npm@10.8.2","engineStrict":true,"engines":{"node":">=20.18.1","pnpm":"0","yarn":"0","vscode":"^1.90.0"},"sponsor":{"url":"https://github.com/sponsors/streetsidesoftware"},"extensionKind":["workspace"],"categories":["Linters","Other"],"keywords":["spell","checker","spelling","spellchecker"],"qna":"marketplace","activationEvents":["onStartupFinished"],"capabilities":{"virtualWorkspaces":{"supported":"limited","description":"In virtual workspaces, it is not possible to load the CSpell configuration from a JavaScript file. The configuration must be in a JSON, JSONC, or YAML file. Any configuration that relies upon `node_modules` will not be loaded."},"untrustedWorkspaces":{"supported":"limited","description":"JavaScript configuration files will NOT be loaded.","restrictedConfigurations":["cSpell.trustedWorkspace"]}},"contributes":{"menus":{"editor/context":[{"command":"cSpell.suggestSpellingCorrections","when":"!editorReadonly && editorTextFocus && config.cSpell.showSuggestionsLinkInEditorContextMenu && cSpell.editorMenuContext.showSuggestions && cSpell.context.showDecorations","group":"A_cspell@000"},{"submenu":"cSpell.spelling","group":"A_cspell@001","when":"!editorReadonly && editorTextFocus && config.cSpell.showCommandsInEditorContextMenu"},{"command":"cSpell.show","when":"editorTextFocus && config.cSpell.showCommandsInEditorContextMenu && cSpell.editorMenuContext.hasIssues && !cSpell.context.showDecorations","group":"A_cspell@002"},{"command":"cSpell.hide","when":"editorTextFocus && config.cSpell.showCommandsInEditorContextMenu && cSpell.editorMenuContext.hasIssues && cSpell.context.showDecorations","group":"A_cspell@002"}],"cSpell.spelling":[{"command":"cSpell.suggestSpellingCorrections","when":"editorTextFocus && !config.cSpell.showSuggestionsLinkInEditorContextMenu && cSpell.editorMenuContext.showSuggestions","group":"A_cspell@001"},{"command":"cSpell.addWordToDictionary","when":"editorTextFocus && cSpell.editorMenuContext.addWordToDictionary","group":"A_cspell@010"},{"command":"cSpell.addWordToFolderDictionary","when":"editorTextFocus && cSpell.editorMenuContext.addWordToFolderDictionary","group":"A_cspell@020"},{"command":"cSpell.addWordToWorkspaceDictionary","when":"editorTextFocus && cSpell.editorMenuContext.addWordToWorkspaceDictionary","group":"A_cspell@030"},{"command":"cSpell.addWordToCSpellConfig","when":"editorTextFocus && cSpell.editorMenuContext.addWordToCSpellConfig","group":"A_cspell@050"},{"command":"cSpell.addWordToFolderSettings","when":"editorTextFocus && cSpell.editorMenuContext.addWordToFolderSettings","group":"A_cspell@051"},{"command":"cSpell.addWordToWorkspaceSettings","when":"editorTextFocus && cSpell.editorMenuContext.addWordToWorkspaceSettings","group":"A_cspell@052"},{"command":"cSpell.addWordToUserDictionary","when":"editorTextFocus && cSpell.editorMenuContext.addWordToUserDictionary","group":"A_cspell@055"},{"command":"cSpell.addWordToUserSettings","when":"editorTextFocus && cSpell.editorMenuContext.addWordToUserSettings","group":"A_cspell@056"},{"command":"cSpell.addIssuesToDictionary","when":"editorTextFocus && cSpell.editorMenuContext.addIssuesToDictionary","group":"A_cspell@060"},{"command":"cSpell.addIgnoreWord","when":"editorTextFocus && cSpell.editorMenuContext.addIgnoreWord","group":"A_cspell@090"},{"command":"cSpell.createCSpellConfig","when":"editorTextFocus && cSpell.editorMenuContext.createCSpellConfig","group":"B_cspell@010"},{"command":"cSpell.createCustomDictionary","when":"editorTextFocus && cSpell.editorMenuContext.createCustomDictionary","group":"B_cspell@020"}],"cSpell.configMenu":[{"command":"cSpell.createCSpellConfig","when":"editorTextFocus && cSpell.editorMenuContext.createCSpellConfig","group":"A_cspell@010"},{"command":"cSpell.createCustomDictionary","when":"editorTextFocus && cSpell.editorMenuContext.createCustomDictionary","group":"A_cspell@070"}],"commandPalette":[{"command":"cSpellRegExpTester.testRegExp","when":"config.cSpell.experimental.enableRegexpView"},{"command":"cSpellRegExpTester.editRegExp","when":"view == cSpellRegExpView"}],"view/title":[{"command":"cSpell.show","when":"!cSpell.context.showDecorations && view == cSpellIssuesViewByFile","group":"navigation"},{"command":"cSpell.hide","when":"cSpell.context.showDecorations && view == cSpellIssuesViewByFile","group":"navigation"}],"view/item/context":[{"command":"cSpellRegExpTester.editRegExp","when":"view == cSpellRegExpView && viewItem == regexp","group":"inline"},{"command":"cSpell.issueViewer.item.autoFixSpellingIssues","when":"view == cSpellIssuesViewByIssue && viewItem == issue.hasPreferred","group":"inline"},{"command":"cSpell.issueViewer.item.addWordToDictionary","when":"view == cSpellIssuesViewByIssue && viewItem == issue","group":"inline"},{"command":"cSpell.issuesViewByFile.item.autoFixSpellingIssues","when":"view == cSpellIssuesViewByFile && viewItem == issue.FileWithIssuesTreeItem.hasPreferred","group":"inline"},{"command":"cSpell.issuesViewByFile.item.addWordToDictionary","when":"view == cSpellIssuesViewByFile && viewItem == issue.FileIssueTreeItem","group":"inline"}]},"submenus":[{"id":"cSpell.spelling","label":"Spelling"},{"id":"cSpell.configMenu","label":"Spell Checker Configuration"}],"viewsContainers":{"activitybar":[{"id":"cspell-info-explorer","title":"Spell Checker Info","icon":"resources/dark/check_circle.svg"},{"id":"cspell-regexp-explorer","title":"Regular Expressions","contextualTitle":"Spell Checker","icon":"resources/dark/check_circle.svg"}],"panel":[{"id":"cspellPanel","title":"Spell Checker","icon":"resources/dark/check_circle.svg"}]},"icons":{"cspell-issues":{"description":"cspell-issues lightbulb icon","default":"lightbulb"}},"views":{"cspell-info-explorer":[{"type":"webview","id":"cSpellInfoView","when":"cSpell.context.displayCSpellInfo","icon":"$(lightbulb)","name":"Spell Checker"}],"cspell-regexp-explorer":[{"id":"cSpellRegExpView","name":"Regular Expressions","icon":"$(code)","when":"config.cSpell.experimental.enableRegexpView"}],"cspellPanel":[{"type":"tree","id":"cSpellIssuesViewByFile","name":"File Issues","contextualTitle":"Spell Checker issues by file","icon":"$(lightbulb)","initialSize":4,"visibility":"visible"},{"type":"tree","id":"cSpellIssuesViewByIssue","name":"Issues","contextualTitle":"Spell Checker Issues","icon":"$(lightbulb)","initialSize":1,"visibility":"visible"}]},"viewsWelcome":[],"commands":[{"command":"cSpell.addWordToWorkspaceDictionary","category":"Spell","title":"Add Words to Workspace Dictionary"},{"command":"cSpell.addWordToFolderDictionary","category":"Spell","title":"Add Words to Folder Dictionary"},{"command":"cSpell.addWordToUserDictionary","category":"Spell","title":"Add Words to User Dictionary"},{"command":"cSpell.addWordToWorkspaceSettings","category":"Spell","title":"Add Words to Workspace Settings"},{"command":"cSpell.addWordToFolderSettings","category":"Spell","title":"Add Words to Folder Settings"},{"command":"cSpell.addWordToUserSettings","category":"Spell","title":"Add Words to User Settings"},{"command":"cSpell.enableForWorkspace","category":"Spell","title":"Enable Spell Checking For Workspace"},{"command":"cSpell.disableForWorkspace","category":"Spell","title":"Disable Spell Checking For Workspace"},{"command":"cSpell.enableForGlobal","category":"Spell","title":"Enable Spell Checking by Default"},{"command":"cSpell.disableForGlobal","category":"Spell","title":"Disable Spell Checking by Default"},{"command":"cSpell.enableCurrentLanguage","category":"Spell","title":"Enable Spell Checking Document Type","when":"cSpell.showLegacyCommands.enableCurrentLanguage"},{"command":"cSpell.disableCurrentLanguage","category":"Spell","title":"Disable Spell Checking Document Type","when":"cSpell.showLegacyCommands.disableCurrentLanguage"},{"command":"cSpell.enableCurrentFileType","category":"Spell","title":"Enable Spell Checking File Type","shortTitle":"Enable File Type"},{"command":"cSpell.disableCurrentFileType","category":"Spell","title":"Disable Spell Checking File Type","shortTitle":"Disable File Type"},{"command":"cSpell.displayCSpellInfo","category":"Spell","title":"Show Spell Checker Configuration Info"},{"command":"cSpell.hideCSpellInfo","category":"Spell","title":"Hide Spell Checker Configuration Info"},{"command":"cSpell.toggleEnableForGlobal","category":"Spell","title":"Toggle Spell Checking in User Settings"},{"command":"cSpell.toggleEnableForWorkspace","category":"Spell","title":"Toggle Spell Checking for Workspace"},{"command":"cSpell.toggleEnableSpellChecker","category":"Spell","title":"Toggle Spell Checking"},{"command":"cSpell.removeWordFromFolderDictionary","category":"Spell","title":"Remove Words from the Folder Dictionary"},{"command":"cSpell.removeWordFromWorkspaceDictionary","category":"Spell","title":"Remove Words from the Workspace Dictionaries"},{"command":"cSpell.removeWordFromUserDictionary","category":"Spell","title":"Remove Words from the Global Dictionary"},{"command":"cSpell.logPerfTimeline","category":"Spell","title":"Log CSpell performance times to console"},{"command":"cSpell.addIgnoreWord","category":"Spell","title":"Ignore Words"},{"command":"cSpell.addIgnoreWordsToFolder","category":"Spell","title":"Ignore Word in Folder Settings"},{"command":"cSpell.addIgnoreWordsToWorkspace","category":"Spell","title":"Ignore Words in Workspace Settings"},{"command":"cSpell.addIgnoreWordsToUser","category":"Spell","title":"Ignore Words in User Settings"},{"command":"cSpell.addWordToDictionary","category":"Spell","title":"Add Words to Dictionary","icon":"$(book)"},{"command":"cSpell.addWordToCSpellConfig","category":"Spell","title":"Add Words to CSpell Configuration"},{"command":"cSpell.addIssuesToDictionary","category":"Spell","title":"Add All Spelling Issues to Dictionary"},{"command":"cSpell.createCustomDictionary","category":"Spell","title":"Create a Custom Dictionary File."},{"command":"cSpell.createCSpellConfig","category":"Spell","title":"Create a CSpell Configuration File."},{"command":"cSpell.suggestSpellingCorrections","enablement":"editorTextFocus && cSpell.editorMenuContext.showSuggestions","category":"Spell","title":"Spelling Suggestions..."},{"command":"cSpell.goToNextSpellingIssue","category":"Spell","title":"Go to Next Spelling Issue"},{"command":"cSpell.goToPreviousSpellingIssue","category":"Spell","title":"Go to Previous Spelling Issue"},{"command":"cSpell.goToNextSpellingIssueAndSuggest","category":"Spell","title":"Go to Next Spelling Issue and Suggest"},{"command":"cSpell.goToPreviousSpellingIssueAndSuggest","category":"Spell","title":"Go to Previous Spelling Issue and Suggest"},{"command":"cSpellRegExpTester.testRegExp","title":"Test a Regular Expression on the current document.","enablement":"config.cSpell.experimental.enableRegexpView"},{"command":"cSpellRegExpTester.editRegExp","title":"Edit","icon":"$(edit)","enablement":"config.cSpell.experimental.enableRegexpView"},{"command":"cSpell.experimental.executeDocumentSymbolProvider","title":"Execute Document Symbol Provider on the current document.","icon":"$(code)","enablement":"config.cSpell.experimental.symbols"},{"command":"cSpell.autoFixSpellingIssues","title":"Fix all issues with a preferred suggestion in the current document.","icon":"$(lightbulb-autofix)"},{"command":"cSpell.issueViewer.item.openSuggestionsForIssue","title":"Show Suggestions","icon":"$(list-unordered)","enablement":"view == cSpellIssuesViewByIssue"},{"command":"cSpell.issueViewer.item.autoFixSpellingIssues","title":"Fix issue with preferred suggestion in the current document.","icon":"$(lightbulb-autofix)","enablement":"view == cSpellIssuesViewByIssue"},{"command":"cSpell.issueViewer.item.addWordToDictionary","category":"Spell","title":"Add Word to Dictionary","icon":"$(book)","enablement":"view == cSpellIssuesViewByIssue"},{"command":"cSpell.issuesViewByFile.item.autoFixSpellingIssues","title":"Fix issue with preferred suggestion in the current document.","icon":"$(lightbulb-autofix)","enablement":"view == cSpellIssuesViewByFile"},{"command":"cSpell.issuesViewByFile.item.addWordToDictionary","category":"Spell","title":"Add Word to Dictionary","icon":"$(book)","enablement":"view == cSpellIssuesViewByFile"},{"command":"cSpell.insertDisableNextLineDirective","category":"Spell","title":"Insert Disable Next Line Directive","icon":"$(comment-discussion)"},{"command":"cSpell.insertDisableLineDirective","category":"Spell","title":"Insert Disable Current Line Directive","icon":"$(comment-discussion)"},{"command":"cSpell.insertIgnoreWordsDirective","category":"Spell","title":"Insert Ignore Words Directive","icon":"$(comment-discussion)"},{"command":"cSpell.insertWordsDirective","category":"Spell","title":"Insert Words Directive","icon":"$(comment-discussion)"},{"command":"cSpell.toggleVisible","category":"Spell","title":"Toggle Show Spelling Issues","shortTitle":"Toggle Spelling Issues","icon":"$(eye)"},{"command":"cSpell.show","category":"Spell","title":"Show Spelling Issues","shortTitle":"Show","when":"!cSpell.context.showDecorations","icon":"$(eye)"},{"command":"cSpell.hide","category":"Spell","title":"Hide Spelling Issues","shortTitle":"Hide","when":"cSpell.context.showDecorations","icon":"$(eye-closed)"},{"command":"cSpell.toggleTraceMode","category":"Spell","title":"Toggle Trace Mode","icon":"$(search)"},{"command":"cSpell.createCSpellTerminal","category":"Spell","title":"Open a new CSpell REPL Terminal","icon":"$(terminal)"},{"command":"cSpell.openIssuesPanel","category":"Spell","title":"Open Spell Checker Issues Panel","shortTitle":"Open Spelling Issues","icon":"$(eye)"},{"command":"cSpell.openFileInfoView","category":"Spell","title":"Open Spell Checker File Information View","shortTitle":"Open File Info","icon":"$(eye)"},{"command":"cSpell.reload","category":"Spell","title":"Reload Spell Checker Configuration and Dictionaries","shortTitle":"Reload Config & Dictionaries","icon":"$(sync)"},{"command":"cSpell.restart","category":"Spell","title":"Restart Spell Checker Server","shortTitle":"Restart Spell Checker","icon":"$(sync)"},{"command":"cspell.showActionsMenu","category":"Spell","title":"Show Spell Checker Actions Menu","shortTitle":"Spell Checker Actions","icon":"$(list-unordered)"},{"command":"cSpell.supportRequest","enablement":"config.cSpell.command.enableSupportRequest","category":"Spell","title":"Request Support with the Spell Checker","icon":"$(github)"},{"command":"cSpell.reportIssue","enablement":"config.cSpell.command.reportIssue","category":"Spell","title":"Report an Issue with the Spell Checker","icon":"$(github)"},{"command":"cSpell.about","enablement":"config.cSpell.command.about","category":"Spell","title":"About the Spell Checker","icon":"$(home)"},{"command":"cSpell.releaseNotes","enablement":"config.cSpell.command.releaseNotes","category":"Spell","title":"Show Spell Checker Release Notes","icon":"$(heart)"},{"command":"cSpell.sponsor","enablement":"config.cSpell.command.sponsor","category":"Spell","title":"Sponsor the Spell Checker","icon":"$(heart)"},{"command":"cSpell.rateTheSpellChecker","category":"Spell","title":"Rate the Spell Checker","icon":"$(star)"},{"command":"cSpell.openSettings","category":"Spell","title":"Open Spell Checker Settings","icon":"$(gear)"}],"languages":[{"id":"jsonc","extensions":["cspell-ext.json","cspell-default.json","cspell.json","cspell.config.json","cSpell.json"]}],"jsonValidation":[{"fileMatch":[".cspell.config.json",".cspell.config.jsonc",".cspell.json",".cspell.jsonc","cspell-default.json","cspell-ext.json","cspell-import.json","cspell-imports.json","cspell-include.json","cspell-includes.json","cspell.config.json","cspell.config.jsonc","cspell.json","cspell.jsonc","cSpell.json"],"url":"./node_modules/@cspell/cspell-types/cspell.schema.json"}],"configurationDefaults":{"[markdown]":{"cSpell.fixSpellingWithRenameProvider":true,"cSpell.advanced.feature.useReferenceProviderWithRename":true,"cSpell.advanced.feature.useReferenceProviderRemove":"/^#+\\s/"},"[scss]":{"cSpell.fixSpellingWithRenameProvider":false},"[css]":{"cSpell.fixSpellingWithRenameProvider":false},"[scminput]":{"cSpell.fixSpellingWithRenameProvider":false}},"configuration":[{"additionalProperties":false,"markdownDescription":"Settings that control the behavior of the spell checker.","order":0,"properties":{"cSpell.enabled":{"default":true,"markdownDescription":"Enable / Disable the spell checker.","scope":"resource","type":"boolean"}},"title":"Code Spell Checker","type":"object"},{"additionalProperties":false,"markdownDescription":"Advanced settings that are not commonly used.","order":18,"properties":{"cSpell.advanced.feature.useReferenceProviderRemove":{"markdownDescription":"Used to work around bugs in Reference Providers and Rename Providers.\nAnything matching the provided Regular Expression will be removed from the text\nbefore sending it to the Rename Provider.\n\nSee: [Markdown: Fixing spelling issues in Header sections changes the entire line · Issue #1987](https://github.com/streetsidesoftware/vscode-spell-checker/issues/1987)\n\nIt is unlikely that you would need to edit this setting. If you need to, please open an issue at\n[Spell Checker Issues](https://github.com/streetsidesoftware/vscode-spell-checker/issues)\n\nThis feature is used in connection with `#cSpell.advanced.feature.useReferenceProviderWithRename#`","scope":"language-overridable","title":"Remove Matching Characters Before Rename","type":"string"},"cSpell.advanced.feature.useReferenceProviderWithRename":{"default":false,"markdownDescription":"Use the Reference Provider when fixing spelling issues with the Rename Provider.\nThis feature is used in connection with `#cSpell.fixSpellingWithRenameProvider#`","scope":"language-overridable","title":"Use Reference Provider During Rename","type":"boolean"},"cSpell.fixSpellingWithRenameProvider":{"default":true,"markdownDescription":"Use Rename Provider when fixing spelling issues.","scope":"language-overridable","type":"boolean"},"cSpell.logFile":{"markdownDescription":"Have the logs written to a file instead of to VS Code.","scope":"window","title":"Write Logs to a File","type":"string"},"cSpell.logLevel":{"default":"Error","enum":["None","Error","Warning","Information","Debug"],"enumDescriptions":["Do not log","Log only errors","Log errors and warnings","Log errors, warnings, and info","Log everything (noisy)"],"markdownDescription":"Set the Debug Level for logging messages.","scope":"window","title":"Set Logging Level","type":"string"},"cSpell.trustedWorkspace":{"default":true,"markdownDescription":"Enable loading JavaScript CSpell configuration files.\n\nThis setting is automatically set to `true` in a trusted workspace. It is possible to override the setting to `false` in a trusted workspace,\nbut a setting of `true` in an untrusted workspace will be ignored.\n\nSee:\n- [Visual Studio Code Workspace Trust security](https://code.visualstudio.com/docs/editor/workspace-trust)\n- [Workspace Trust Extension Guide -- Visual Studio Code Extension API](https://code.visualstudio.com/api/extension-guides/workspace-trust)","scope":"window","since":"4.0.0","type":"boolean"}},"title":"Advanced","type":"object"},{"additionalProperties":false,"markdownDescription":"Settings related to CSpell Command Line Tool.","order":5,"properties":{"cSpell.ignoreRandomStrings":{"default":true,"markdownDescription":"Ignore sequences of characters that look like random strings.","type":"boolean"},"cSpell.ignoreRegExpList":{"items":{"type":"string"},"markdownDescription":"List of regular expressions or Pattern names (defined in `#cSpell.patterns#`) to exclude from spell checking.\n\n- When using the VS Code Preferences UI, it is not necessary to escape the `\\`, VS Code takes care of that.\n- When editing the VS Code `settings.json` file,\n  it is necessary to escape `\\`.\n  Each `\\` becomes `\\\\`.\n\nThe default regular expression flags are `gi`. Add `u` (`gui`), to enable Unicode.\n\n| VS Code UI          | settings.json         | Description                                  |\n| :------------------ | :-------------------- | :------------------------------------------- |\n| `/\\\\[a-z]+/gi`      | `/\\\\\\\\[a-z]+/gi`      | Exclude LaTeX command like `\\mapsto`         |\n| `/\\b[A-Z]{3,5}\\b/g` | `/\\\\b[A-Z]{3,5}\\\\b/g` | Exclude full-caps acronyms of 3-5 length.    |\n| `CStyleComment`     | `CStyleComment`       | A built in pattern                           |","scope":"resource","type":"array"},"cSpell.includeRegExpList":{"items":{"type":"string"},"markdownDescription":"List of regular expression patterns or defined pattern names to match for spell checking.\n\nIf this property is defined, only text matching the included patterns will be checked.","scope":"resource","type":"array"},"cSpell.minRandomLength":{"default":40,"markdownDescription":"The minimum length of a random string to be ignored.","type":"number"},"cSpell.overrides":{"items":{"additionalProperties":false,"properties":{"allowCompoundWords":{"default":false,"markdownDescription":"True to enable compound word checking.","type":"boolean"},"caseSensitive":{"default":false,"markdownDescription":"Determines if words must match case and accent rules.\n\nSee [Case Sensitivity](https://cspell.org/docs/case-sensitive/) for more details.\n\n- `false` - Case is ignored and accents can be missing on the entire word.\n  Incorrect accents or partially missing accents will be marked as incorrect.\n- `true` - Case and accents are enforced.","type":"boolean"},"description":{"markdownDescription":"Optional description of configuration.","type":"string"},"diagnosticLevel":{"default":"Information","enum":["Error","Warning","Information","Hint"],"enumDescriptions":["Report Spelling Issues as Errors","Report Spelling Issues as Warnings","Report Spelling Issues as Information","Report Spelling Issues as Hints, will not show up in Problems"],"markdownDescription":"The Diagnostic Severity Level determines how issues are shown in the Problems Pane and within the document.\nSet the level to `Hint` to hide the issues from the Problems Pane.\n\nNote: `#cSpell.useCustomDecorations#` must be `false` to use VS Code Diagnostic Severity Levels.\n\nSee: [VS Code Diagnostic Severity Level](https://code.visualstudio.com/api/references/vscode-api#DiagnosticSeverity)","scope":"resource","title":"Set Diagnostic Reporting Level","type":"string"},"diagnosticLevelFlaggedWords":{"enum":["Error","Warning","Information","Hint"],"enumDescriptions":["Report Spelling Issues as Errors","Report Spelling Issues as Warnings","Report Spelling Issues as Information","Report Spelling Issues as Hints, will not show up in Problems"],"markdownDescription":"Flagged word issues found by the spell checker are marked with a Diagnostic Severity Level. This affects the color of the squiggle.\nBy default, flagged words will use the same diagnostic level as general issues. Use this setting to customize them.\n\nSee: [VS Code Diagnostic Severity Level](https://code.visualstudio.com/api/references/vscode-api#DiagnosticSeverity)","scope":"resource","since":"4.0.0","title":"Set Diagnostic Reporting Level for Flagged Words","type":"string"},"dictionaries":{"items":{"anyOf":[{"markdownDescription":"This a reference to a named dictionary.\nIt is expected to match the name of a dictionary.","pattern":"^(?=[^!*,;{}[\\]~\\n]+$)(?=(.*\\w)).+$","type":"string"},{"markdownDescription":"This a negative reference to a named dictionary.\n\nIt is used to exclude or include a dictionary by name.\n\nThe reference starts with 1 or more `!`.\n- `!<dictionary_name>` - Used to exclude the dictionary matching `<dictionary_name>`.\n- `!!<dictionary_name>` - Used to re-include a dictionary matching `<dictionary_name>`.\n   Overrides `!<dictionary_name>`.\n- `!!!<dictionary_name>` - Used to exclude a dictionary matching `<dictionary_name>`.\n   Overrides `!!<dictionary_name>`.","pattern":"^(?=!+[^!*,;{}[\\]~\\n]+$)(?=(.*\\w)).+$","type":"string"}],"markdownDescription":"Reference to a dictionary by name.\nOne of:\n-  {@link  DictionaryRef } \n-  {@link  DictionaryNegRef }"},"markdownDescription":"Optional list of dictionaries to use. Each entry should match the name of the dictionary.\n\nTo remove a dictionary from the list, add `!` before the name.\n\nFor example, `!typescript` will turn off the dictionary with the name `typescript`.\n\nSee the [Dictionaries](https://cspell.org/docs/dictionaries/)\nand [Custom Dictionaries](https://cspell.org/docs/dictionaries-custom/) for more details.","type":"array"},"dictionaryDefinitions":{"items":{"anyOf":[{"additionalProperties":false,"properties":{"addWords":{"default":true,"markdownDescription":"Indicate if this custom dictionary should be used to store added words.","title":"Add Words to Dictionary","type":"boolean"},"description":{"markdownDescription":"Optional: A human readable description.","title":"Description of the Dictionary","type":"string"},"ignoreForbiddenWords":{"markdownDescription":"Some dictionaries may contain forbidden words to prevent compounding from generating\nwords that are not valid in the language. These are often\nwords that are used in other languages or might be generated through compounding.\nThis setting allows flagged words to be ignored when checking the dictionary.\nThe effect is similar to the word not being in the dictionary.","type":"boolean"},"name":{"markdownDescription":"The reference name of the dictionary.\n\n\nExample: `My Words` or `custom`\n\n\nIf the name matches a pre-defined dictionary, it will override the pre-defined dictionary.\nIf you use: `typescript` it will replace the built-in TypeScript dictionary.","pattern":"^(?=[^!*,;{}[\\]~\\n]+$)(?=(.*\\w)).+$","title":"Name of Dictionary","type":"string"},"noSuggest":{"markdownDescription":"Indicate that suggestions should not come from this dictionary.\nWords in this dictionary are considered correct, but will not be\nused when making spell correction suggestions.\n\nNote: if a word is suggested by another dictionary, but found in\nthis dictionary, it will be removed from the set of\npossible suggestions.","type":"boolean"},"path":{"markdownDescription":"Define the path to the dictionary text file.\n\n**Note:** if path is `undefined` the `name`d dictionary is expected to be found\nin the `dictionaryDefinitions`.\n\nFile Format: Each line in the file is considered a dictionary entry.\n\nCase is preserved while leading and trailing space is removed.\n\nThe path should be absolute, or relative to the workspace.\n\n**Example:** relative to User's folder\n\n```json\n\"path\": \"~/dictionaries/custom_dictionary.txt\"\n```\n\n**Example:** relative to the `client` folder in a multi-root workspace\n\n```json\n\"path\": \"${workspaceFolder:client}/build/custom_dictionary.txt\"\n```\n\n**Example:** relative to the current workspace folder in a single-root workspace\n\n**Note:** this might not work as expected in a multi-root workspace since it is based upon the relative\nworkspace for the currently open file.\n\n```json\n\"path\": \"${workspaceFolder}/build/custom_dictionary.txt\"\n```\n\n**Example:** relative to the workspace folder in a single-root workspace or the first folder in\na multi-root workspace\n\n```json\n\"path\": \"./build/custom_dictionary.txt\"\n```","type":"string"},"scope":{"anyOf":[{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},{"items":{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},"type":"array"}],"markdownDescription":"Options are\n- `user` - words that apply to all projects and workspaces\n- `workspace` - words that apply to the entire workspace\n- `folder` - words that apply to only a workspace folder","title":"Scope of dictionary"}},"required":["name","path"],"type":"object"},{"additionalProperties":false,"properties":{"description":{"markdownDescription":"Optional description of the contents / purpose of the dictionary.","type":"string"},"ignoreForbiddenWords":{"markdownDescription":"Some dictionaries may contain forbidden words to prevent compounding from generating\nwords that are not valid in the language. These are often\nwords that are used in other languages or might be generated through compounding.\nThis setting allows flagged words to be ignored when checking the dictionary.\nThe effect is similar to the word not being in the dictionary.","type":"boolean"},"name":{"markdownDescription":"This is the name of a dictionary.\n\nName Format:\n- Must contain at least 1 number or letter.\n- Spaces are allowed.\n- Leading and trailing space will be removed.\n- Names ARE case-sensitive.\n- Must not contain `*`, `!`, `;`, `,`, `{`, `}`, `[`, `]`, `~`.","type":"string"},"noSuggest":{"markdownDescription":"Indicate that suggestions should not come from this dictionary.\nWords in this dictionary are considered correct, but will not be\nused when making spell correction suggestions.\n\nNote: if a word is suggested by another dictionary, but found in\nthis dictionary, it will be removed from the set of\npossible suggestions.","type":"boolean"},"path":{"markdownDescription":"Path to the file.","type":"string"}},"required":["path","name"],"type":"object"},{"additionalProperties":false,"properties":{"addWords":{"markdownDescription":"When `true`, let's the spell checker know that words can be added to this dictionary.","type":"boolean"},"description":{"markdownDescription":"Optional description of the contents / purpose of the dictionary.","type":"string"},"ignoreForbiddenWords":{"markdownDescription":"Some dictionaries may contain forbidden words to prevent compounding from generating\nwords that are not valid in the language. These are often\nwords that are used in other languages or might be generated through compounding.\nThis setting allows flagged words to be ignored when checking the dictionary.\nThe effect is similar to the word not being in the dictionary.","type":"boolean"},"name":{"markdownDescription":"This is the name of a dictionary.\n\nName Format:\n- Must contain at least 1 number or letter.\n- Spaces are allowed.\n- Leading and trailing space will be removed.\n- Names ARE case-sensitive.\n- Must not contain `*`, `!`, `;`, `,`, `{`, `}`, `[`, `]`, `~`.","type":"string"},"noSuggest":{"markdownDescription":"Indicate that suggestions should not come from this dictionary.\nWords in this dictionary are considered correct, but will not be\nused when making spell correction suggestions.\n\nNote: if a word is suggested by another dictionary, but found in\nthis dictionary, it will be removed from the set of\npossible suggestions.","type":"boolean"},"path":{"markdownDescription":"Path to custom dictionary text file.","type":"string"},"scope":{"anyOf":[{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},{"items":{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},"type":"array"}],"markdownDescription":"Defines the scope for when words will be added to the dictionary.\n\nScope values: `user`, `workspace`, `folder`."}},"required":["path","addWords","name"],"type":"object"}]},"markdownDescription":"Define custom dictionaries.\nIf `addWords` is `true` words will be added to this dictionary.\n\nThis setting is subject to User/Workspace settings precedence rules: [Visual Studio Code User and Workspace Settings](https://code.visualstudio.com/docs/getstarted/settings#_settings-precedence).\n\nIt is better to use `#cSpell.customDictionaries#`\n\n**Example:**\n\n```js\n\"cSpell.dictionaryDefinitions\": [\n  {\n    \"name\": \"project-words\",\n    \"path\": \"${workspaceRoot}/project-words.txt\",\n    \"description\": \"Words used in this project\",\n    \"addWords\": true\n  }\n]\n```","scope":"resource","title":"Dictionary Definitions","type":"array"},"enableFiletypes":{"items":{"markdownDescription":"A file type:\n- `*` - will match ALL file types.\n- `typescript`, `cpp`, `json`, etc.","pattern":"^(!?[-\\w_\\s]+)|(\\*)$","type":"string"},"markdownDescription":"Enable / Disable checking file types (languageIds).\n\nThese are in additional to the file types specified by  {@link  Settings.enabledLanguageIds } .\nTo disable a language, prefix with `!` as in `!json`,\n\n\n**Example: individual file types**\n\n```\njsonc       // enable checking for jsonc\n!json       // disable checking for json\nkotlin      // enable checking for kotlin\n```\n\n**Example: enable all file types**\n\n```\n*           // enable checking for all file types\n!json       // except for json\n```","scope":"resource","title":"Enable File Types","type":"array","uniqueItems":true},"enabled":{"default":true,"markdownDescription":"Is the spell checker enabled.","type":"boolean"},"enabledFileTypes":{"additionalProperties":{"type":"boolean"},"markdownDescription":"Enable / Disable checking file types (languageIds).\n\nThis setting replaces:  {@link  Settings.enabledLanguageIds }  and  {@link  Settings.enableFiletypes } .\n\nA Value of:\n- `true` - enable checking for the file type\n- `false` - disable checking for the file type\n\nA file type of `*` is a wildcard that enables all file types.\n\n**Example: enable all file types**\n\n| File Type | Enabled | Comment |\n| --------- | ------- | ------- |\n| `*`       | `true`  | Enable all file types. |\n| `json`    | `false` | Disable checking for json files. |","since":"8.8.1","title":"Enabled File Types to Check","type":"object"},"enabledLanguageIds":{"items":{"markdownDescription":"A file type:\n- `*` - will match ALL file types.\n- `typescript`, `cpp`, `json`, etc.","pattern":"^(!?[-\\w_\\s]+)|(\\*)$","type":"string"},"markdownDescription":"Specify a list of file types to spell check. It is better to use  {@link  Settings.enabledFileTypes }  to Enable / Disable checking files types.","title":"Enabled Language Ids","type":"array","uniqueItems":true},"filename":{"anyOf":[{"markdownDescription":"These are glob expressions.","type":"string"},{"items":{"markdownDescription":"These are glob expressions.","type":"string"},"type":"array"}],"markdownDescription":"Glob pattern or patterns to match against."},"flagWords":{"items":{"type":"string"},"markdownDescription":"List of words to always be considered incorrect. Words found in `flagWords` override `words`.\n\nFormat of `flagWords`\n- single word entry - `word`\n- with suggestions - `word:suggestion` or `word->suggestion, suggestions`\n\nExample:\n```ts\n\"flagWords\": [\n  \"color: colour\",\n  \"incase: in case, encase\",\n  \"canot->cannot\",\n  \"cancelled->canceled\"\n]\n```","type":"array"},"id":{"markdownDescription":"Optional identifier.","type":"string"},"ignoreRandomStrings":{"default":true,"markdownDescription":"Ignore sequences of characters that look like random strings.","type":"boolean"},"ignoreRegExpList":{"items":{"anyOf":[{"type":"string"},{"markdownDescription":"This matches the name in a pattern definition.","type":"string"},{"enum":["Base64","Base64MultiLine","Base64SingleLine","CStyleComment","CStyleHexValue","CSSHexValue","CommitHash","CommitHashLink","Email","EscapeCharacters","HexValues","href","PhpHereDoc","PublicKey","RsaCert","SshRsa","SHA","HashStrings","SpellCheckerDisable","SpellCheckerDisableBlock","SpellCheckerDisableLine","SpellCheckerDisableNext","SpellCheckerIgnoreInDocSetting","string","UnicodeRef","Urls","UUID","Everything"],"type":"string"}],"markdownDescription":"A PatternRef is a Pattern or PatternId."},"markdownDescription":"List of regular expression patterns or pattern names to exclude from spell checking.\n\nExample: `[\"href\"]` - to exclude html href pattern.\n\nRegular expressions use JavaScript regular expression syntax.\n\nExample: to ignore ALL-CAPS words\n\nJSON\n```json\n\"ignoreRegExpList\": [\"/\\\\b[A-Z]+\\\\b/g\"]\n```\n\nYAML\n```yaml\nignoreRegExpList:\n  - >-\n   /\\b[A-Z]+\\b/g\n```\n\nBy default, several patterns are excluded. See\n[Configuration](https://cspell.org/configuration/patterns) for more details.\n\nWhile you can create your own patterns, you can also leverage several patterns that are\n[built-in to CSpell](https://cspell.org/types/cspell-types/types/PredefinedPatterns.html).","type":"array"},"ignoreWords":{"items":{"type":"string"},"markdownDescription":"List of words to be ignored. An ignored word will not show up as an error, even if it is\nalso in the `flagWords`.","type":"array"},"includeRegExpList":{"items":{"anyOf":[{"type":"string"},{"markdownDescription":"This matches the name in a pattern definition.","type":"string"},{"enum":["Base64","Base64MultiLine","Base64SingleLine","CStyleComment","CStyleHexValue","CSSHexValue","CommitHash","CommitHashLink","Email","EscapeCharacters","HexValues","href","PhpHereDoc","PublicKey","RsaCert","SshRsa","SHA","HashStrings","SpellCheckerDisable","SpellCheckerDisableBlock","SpellCheckerDisableLine","SpellCheckerDisableNext","SpellCheckerIgnoreInDocSetting","string","UnicodeRef","Urls","UUID","Everything"],"type":"string"}],"markdownDescription":"A PatternRef is a Pattern or PatternId."},"markdownDescription":"List of regular expression patterns or defined pattern names to match for spell checking.\n\nIf this property is defined, only text matching the included patterns will be checked.\n\nWhile you can create your own patterns, you can also leverage several patterns that are\n[built-in to CSpell](https://cspell.org/types/cspell-types/types/PredefinedPatterns.html).","type":"array"},"language":{"markdownDescription":"Sets the locale.","type":"string"},"languageId":{"anyOf":[{"markdownDescription":"A file type:\n- `*` - will match ALL file types.\n- `typescript`, `cpp`, `json`, etc.","pattern":"^(!?[-\\w_\\s]+)|(\\*)$","type":"string"},{"markdownDescription":"A single string with a comma separated list of file types:\n- `typescript,cpp`\n- `json,jsonc,yaml`\n- etc.","pattern":"^([-\\w_\\s]+)(,[-\\w_\\s]+)*$","type":"string"},{"markdownDescription":"A Negative File Type used to exclude files of that type.\n- `!typescript` - will exclude typescript files.\n- `!cpp,!json` - will exclude cpp and json files.\n- `!typescript,javascript` - will exclude typescript files and include javascript files.","pattern":"^(![-\\w_\\s]+)(,!?[-\\w_\\s]+)*$","type":"string"},{"items":{"anyOf":[{"markdownDescription":"A file type:\n- `*` - will match ALL file types.\n- `typescript`, `cpp`, `json`, etc.","pattern":"^(!?[-\\w_\\s]+)|(\\*)$","type":"string"},{"markdownDescription":"A single string with a comma separated list of file types:\n- `typescript,cpp`\n- `json,jsonc,yaml`\n- etc.","pattern":"^([-\\w_\\s]+)(,[-\\w_\\s]+)*$","type":"string"},{"markdownDescription":"A Negative File Type used to exclude files of that type.\n- `!typescript` - will exclude typescript files.\n- `!cpp,!json` - will exclude cpp and json files.\n- `!typescript,javascript` - will exclude typescript files and include javascript files.","pattern":"^(![-\\w_\\s]+)(,!?[-\\w_\\s]+)*$","type":"string"}]},"type":"array"}],"markdownDescription":"Sets the programming language id to match file type."},"languageSettings":{"items":{"additionalProperties":false,"properties":{"allowCompoundWords":{"default":false,"markdownDescription":"True to enable compound word checking.","type":"boolean"},"caseSensitive":{"default":false,"markdownDescription":"Determines if words must match case and accent rules.\n\nSee [Case Sensitivity](https://cspell.org/docs/case-sensitive/) for more details.\n\n- `false` - Case is ignored and accents can be missing on the entire word.\n  Incorrect accents or partially missing accents will be marked as incorrect.\n- `true` - Case and accents are enforced.","type":"boolean"},"description":{"markdownDescription":"Optional description of configuration.","type":"string"},"dictionaries":{"items":{"anyOf":[{"markdownDescription":"This a reference to a named dictionary.\nIt is expected to match the name of a dictionary.","pattern":"^(?=[^!*,;{}[\\]~\\n]+$)(?=(.*\\w)).+$","type":"string"},{"markdownDescription":"This a negative reference to a named dictionary.\n\nIt is used to exclude or include a dictionary by name.\n\nThe reference starts with 1 or more `!`.\n- `!<dictionary_name>` - Used to exclude the dictionary matching `<dictionary_name>`.\n- `!!<dictionary_name>` - Used to re-include a dictionary matching `<dictionary_name>`.\n   Overrides `!<dictionary_name>`.\n- `!!!<dictionary_name>` - Used to exclude a dictionary matching `<dictionary_name>`.\n   Overrides `!!<dictionary_name>`.","pattern":"^(?=!+[^!*,;{}[\\]~\\n]+$)(?=(.*\\w)).+$","type":"string"}],"markdownDescription":"Reference to a dictionary by name.\nOne of:\n-  {@link  DictionaryRef } \n-  {@link  DictionaryNegRef }"},"markdownDescription":"Optional list of dictionaries to use. Each entry should match the name of the dictionary.\n\nTo remove a dictionary from the list, add `!` before the name.\n\nFor example, `!typescript` will turn off the dictionary with the name `typescript`.\n\nSee the [Dictionaries](https://cspell.org/docs/dictionaries/)\nand [Custom Dictionaries](https://cspell.org/docs/dictionaries-custom/) for more details.","type":"array"},"dictionaryDefinitions":{"items":{"anyOf":[{"additionalProperties":false,"properties":{"addWords":{"default":true,"markdownDescription":"Indicate if this custom dictionary should be used to store added words.","title":"Add Words to Dictionary","type":"boolean"},"description":{"markdownDescription":"Optional: A human readable description.","title":"Description of the Dictionary","type":"string"},"ignoreForbiddenWords":{"markdownDescription":"Some dictionaries may contain forbidden words to prevent compounding from generating\nwords that are not valid in the language. These are often\nwords that are used in other languages or might be generated through compounding.\nThis setting allows flagged words to be ignored when checking the dictionary.\nThe effect is similar to the word not being in the dictionary.","type":"boolean"},"name":{"markdownDescription":"The reference name of the dictionary.\n\n\nExample: `My Words` or `custom`\n\n\nIf the name matches a pre-defined dictionary, it will override the pre-defined dictionary.\nIf you use: `typescript` it will replace the built-in TypeScript dictionary.","pattern":"^(?=[^!*,;{}[\\]~\\n]+$)(?=(.*\\w)).+$","title":"Name of Dictionary","type":"string"},"noSuggest":{"markdownDescription":"Indicate that suggestions should not come from this dictionary.\nWords in this dictionary are considered correct, but will not be\nused when making spell correction suggestions.\n\nNote: if a word is suggested by another dictionary, but found in\nthis dictionary, it will be removed from the set of\npossible suggestions.","type":"boolean"},"path":{"markdownDescription":"Define the path to the dictionary text file.\n\n**Note:** if path is `undefined` the `name`d dictionary is expected to be found\nin the `dictionaryDefinitions`.\n\nFile Format: Each line in the file is considered a dictionary entry.\n\nCase is preserved while leading and trailing space is removed.\n\nThe path should be absolute, or relative to the workspace.\n\n**Example:** relative to User's folder\n\n```json\n\"path\": \"~/dictionaries/custom_dictionary.txt\"\n```\n\n**Example:** relative to the `client` folder in a multi-root workspace\n\n```json\n\"path\": \"${workspaceFolder:client}/build/custom_dictionary.txt\"\n```\n\n**Example:** relative to the current workspace folder in a single-root workspace\n\n**Note:** this might not work as expected in a multi-root workspace since it is based upon the relative\nworkspace for the currently open file.\n\n```json\n\"path\": \"${workspaceFolder}/build/custom_dictionary.txt\"\n```\n\n**Example:** relative to the workspace folder in a single-root workspace or the first folder in\na multi-root workspace\n\n```json\n\"path\": \"./build/custom_dictionary.txt\"\n```","type":"string"},"scope":{"anyOf":[{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},{"items":{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},"type":"array"}],"markdownDescription":"Options are\n- `user` - words that apply to all projects and workspaces\n- `workspace` - words that apply to the entire workspace\n- `folder` - words that apply to only a workspace folder","title":"Scope of dictionary"}},"required":["name","path"],"type":"object"},{"additionalProperties":false,"properties":{"description":{"markdownDescription":"Optional description of the contents / purpose of the dictionary.","type":"string"},"ignoreForbiddenWords":{"markdownDescription":"Some dictionaries may contain forbidden words to prevent compounding from generating\nwords that are not valid in the language. These are often\nwords that are used in other languages or might be generated through compounding.\nThis setting allows flagged words to be ignored when checking the dictionary.\nThe effect is similar to the word not being in the dictionary.","type":"boolean"},"name":{"markdownDescription":"This is the name of a dictionary.\n\nName Format:\n- Must contain at least 1 number or letter.\n- Spaces are allowed.\n- Leading and trailing space will be removed.\n- Names ARE case-sensitive.\n- Must not contain `*`, `!`, `;`, `,`, `{`, `}`, `[`, `]`, `~`.","type":"string"},"noSuggest":{"markdownDescription":"Indicate that suggestions should not come from this dictionary.\nWords in this dictionary are considered correct, but will not be\nused when making spell correction suggestions.\n\nNote: if a word is suggested by another dictionary, but found in\nthis dictionary, it will be removed from the set of\npossible suggestions.","type":"boolean"},"path":{"markdownDescription":"Path to the file.","type":"string"}},"required":["path","name"],"type":"object"},{"additionalProperties":false,"properties":{"addWords":{"markdownDescription":"When `true`, let's the spell checker know that words can be added to this dictionary.","type":"boolean"},"description":{"markdownDescription":"Optional description of the contents / purpose of the dictionary.","type":"string"},"ignoreForbiddenWords":{"markdownDescription":"Some dictionaries may contain forbidden words to prevent compounding from generating\nwords that are not valid in the language. These are often\nwords that are used in other languages or might be generated through compounding.\nThis setting allows flagged words to be ignored when checking the dictionary.\nThe effect is similar to the word not being in the dictionary.","type":"boolean"},"name":{"markdownDescription":"This is the name of a dictionary.\n\nName Format:\n- Must contain at least 1 number or letter.\n- Spaces are allowed.\n- Leading and trailing space will be removed.\n- Names ARE case-sensitive.\n- Must not contain `*`, `!`, `;`, `,`, `{`, `}`, `[`, `]`, `~`.","type":"string"},"noSuggest":{"markdownDescription":"Indicate that suggestions should not come from this dictionary.\nWords in this dictionary are considered correct, but will not be\nused when making spell correction suggestions.\n\nNote: if a word is suggested by another dictionary, but found in\nthis dictionary, it will be removed from the set of\npossible suggestions.","type":"boolean"},"path":{"markdownDescription":"Path to custom dictionary text file.","type":"string"},"scope":{"anyOf":[{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},{"items":{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},"type":"array"}],"markdownDescription":"Defines the scope for when words will be added to the dictionary.\n\nScope values: `user`, `workspace`, `folder`."}},"required":["path","addWords","name"],"type":"object"}]},"markdownDescription":"Define custom dictionaries.\nIf `addWords` is `true` words will be added to this dictionary.\n\nThis setting is subject to User/Workspace settings precedence rules: [Visual Studio Code User and Workspace Settings](https://code.visualstudio.com/docs/getstarted/settings#_settings-precedence).\n\nIt is better to use `#cSpell.customDictionaries#`\n\n**Example:**\n\n```js\n\"cSpell.dictionaryDefinitions\": [\n  {\n    \"name\": \"project-words\",\n    \"path\": \"${workspaceRoot}/project-words.txt\",\n    \"description\": \"Words used in this project\",\n    \"addWords\": true\n  }\n]\n```","scope":"resource","title":"Dictionary Definitions","type":"array"},"enabled":{"default":true,"markdownDescription":"Is the spell checker enabled.","type":"boolean"},"flagWords":{"items":{"type":"string"},"markdownDescription":"List of words to always be considered incorrect. Words found in `flagWords` override `words`.\n\nFormat of `flagWords`\n- single word entry - `word`\n- with suggestions - `word:suggestion` or `word->suggestion, suggestions`\n\nExample:\n```ts\n\"flagWords\": [\n  \"color: colour\",\n  \"incase: in case, encase\",\n  \"canot->cannot\",\n  \"cancelled->canceled\"\n]\n```","type":"array"},"id":{"markdownDescription":"Optional identifier.","type":"string"},"ignoreRegExpList":{"items":{"anyOf":[{"type":"string"},{"markdownDescription":"This matches the name in a pattern definition.","type":"string"},{"enum":["Base64","Base64MultiLine","Base64SingleLine","CStyleComment","CStyleHexValue","CSSHexValue","CommitHash","CommitHashLink","Email","EscapeCharacters","HexValues","href","PhpHereDoc","PublicKey","RsaCert","SshRsa","SHA","HashStrings","SpellCheckerDisable","SpellCheckerDisableBlock","SpellCheckerDisableLine","SpellCheckerDisableNext","SpellCheckerIgnoreInDocSetting","string","UnicodeRef","Urls","UUID","Everything"],"type":"string"}],"markdownDescription":"A PatternRef is a Pattern or PatternId."},"markdownDescription":"List of regular expression patterns or pattern names to exclude from spell checking.\n\nExample: `[\"href\"]` - to exclude html href pattern.\n\nRegular expressions use JavaScript regular expression syntax.\n\nExample: to ignore ALL-CAPS words\n\nJSON\n```json\n\"ignoreRegExpList\": [\"/\\\\b[A-Z]+\\\\b/g\"]\n```\n\nYAML\n```yaml\nignoreRegExpList:\n  - >-\n   /\\b[A-Z]+\\b/g\n```\n\nBy default, several patterns are excluded. See\n[Configuration](https://cspell.org/configuration/patterns) for more details.\n\nWhile you can create your own patterns, you can also leverage several patterns that are\n[built-in to CSpell](https://cspell.org/types/cspell-types/types/PredefinedPatterns.html).","type":"array"},"ignoreWords":{"items":{"type":"string"},"markdownDescription":"List of words to be ignored. An ignored word will not show up as an error, even if it is\nalso in the `flagWords`.","type":"array"},"includeRegExpList":{"items":{"anyOf":[{"type":"string"},{"markdownDescription":"This matches the name in a pattern definition.","type":"string"},{"enum":["Base64","Base64MultiLine","Base64SingleLine","CStyleComment","CStyleHexValue","CSSHexValue","CommitHash","CommitHashLink","Email","EscapeCharacters","HexValues","href","PhpHereDoc","PublicKey","RsaCert","SshRsa","SHA","HashStrings","SpellCheckerDisable","SpellCheckerDisableBlock","SpellCheckerDisableLine","SpellCheckerDisableNext","SpellCheckerIgnoreInDocSetting","string","UnicodeRef","Urls","UUID","Everything"],"type":"string"}],"markdownDescription":"A PatternRef is a Pattern or PatternId."},"markdownDescription":"List of regular expression patterns or defined pattern names to match for spell checking.\n\nIf this property is defined, only text matching the included patterns will be checked.\n\nWhile you can create your own patterns, you can also leverage several patterns that are\n[built-in to CSpell](https://cspell.org/types/cspell-types/types/PredefinedPatterns.html).","type":"array"},"languageId":{"anyOf":[{"markdownDescription":"A file type:\n- `*` - will match ALL file types.\n- `typescript`, `cpp`, `json`, etc.","pattern":"^(!?[-\\w_\\s]+)|(\\*)$","type":"string"},{"markdownDescription":"A single string with a comma separated list of file types:\n- `typescript,cpp`\n- `json,jsonc,yaml`\n- etc.","pattern":"^([-\\w_\\s]+)(,[-\\w_\\s]+)*$","type":"string"},{"markdownDescription":"A Negative File Type used to exclude files of that type.\n- `!typescript` - will exclude typescript files.\n- `!cpp,!json` - will exclude cpp and json files.\n- `!typescript,javascript` - will exclude typescript files and include javascript files.","pattern":"^(![-\\w_\\s]+)(,!?[-\\w_\\s]+)*$","type":"string"},{"items":{"anyOf":[{"markdownDescription":"A file type:\n- `*` - will match ALL file types.\n- `typescript`, `cpp`, `json`, etc.","pattern":"^(!?[-\\w_\\s]+)|(\\*)$","type":"string"},{"markdownDescription":"A single string with a comma separated list of file types:\n- `typescript,cpp`\n- `json,jsonc,yaml`\n- etc.","pattern":"^([-\\w_\\s]+)(,[-\\w_\\s]+)*$","type":"string"},{"markdownDescription":"A Negative File Type used to exclude files of that type.\n- `!typescript` - will exclude typescript files.\n- `!cpp,!json` - will exclude cpp and json files.\n- `!typescript,javascript` - will exclude typescript files and include javascript files.","pattern":"^(![-\\w_\\s]+)(,!?[-\\w_\\s]+)*$","type":"string"}]},"type":"array"}],"markdownDescription":"The language id.  Ex: `typescript`, `html`, or `php`.  `*` -- will match all languages."},"locale":{"anyOf":[{"markdownDescription":"This is a written language locale like: `en`, `en-GB`, `fr`, `es`, `de` or `en,fr` for both English and French","type":"string"},{"items":{"markdownDescription":"This is a written language locale like: `en`, `en-GB`, `fr`, `es`, `de` or `en,fr` for both English and French","type":"string"},"type":"array"}],"markdownDescription":"The locale filter, matches against the language. This can be a comma separated list. `*` will match all locales."},"name":{"markdownDescription":"Optional name of configuration.","type":"string"},"noSuggestDictionaries":{"items":{"anyOf":[{"markdownDescription":"This a reference to a named dictionary.\nIt is expected to match the name of a dictionary.","pattern":"^(?=[^!*,;{}[\\]~\\n]+$)(?=(.*\\w)).+$","type":"string"},{"markdownDescription":"This a negative reference to a named dictionary.\n\nIt is used to exclude or include a dictionary by name.\n\nThe reference starts with 1 or more `!`.\n- `!<dictionary_name>` - Used to exclude the dictionary matching `<dictionary_name>`.\n- `!!<dictionary_name>` - Used to re-include a dictionary matching `<dictionary_name>`.\n   Overrides `!<dictionary_name>`.\n- `!!!<dictionary_name>` - Used to exclude a dictionary matching `<dictionary_name>`.\n   Overrides `!!<dictionary_name>`.","pattern":"^(?=!+[^!*,;{}[\\]~\\n]+$)(?=(.*\\w)).+$","type":"string"}],"markdownDescription":"Reference to a dictionary by name.\nOne of:\n-  {@link  DictionaryRef } \n-  {@link  DictionaryNegRef }"},"markdownDescription":"Optional list of dictionaries that will not be used for suggestions.\nWords in these dictionaries are considered correct, but will not be\nused when making spell correction suggestions.\n\nNote: if a word is suggested by another dictionary, but found in\none of these dictionaries, it will be removed from the set of\npossible suggestions.","type":"array"},"patterns":{"items":{"additionalProperties":false,"properties":{"description":{"markdownDescription":"Description of the pattern.","type":"string"},"name":{"markdownDescription":"Pattern name, used as an identifier in ignoreRegExpList and includeRegExpList.\nIt is possible to redefine one of the predefined patterns to override its value.","type":"string"},"pattern":{"anyOf":[{"type":"string"},{"items":{"type":"string"},"type":"array"}],"markdownDescription":"RegExp pattern or array of RegExp patterns."}},"required":["name","pattern"],"type":"object"},"markdownDescription":"Defines a list of patterns that can be used with the  {@link  ignoreRegExpList }  and\n {@link  includeRegExpList }  options.\n\nFor example:\n\n```javascript\n\"ignoreRegExpList\": [\"comments\"],\n\"patterns\": [\n  {\n    \"name\": \"comment-single-line\",\n    \"pattern\": \"/#.*/g\"\n  },\n  {\n    \"name\": \"comment-multi-line\",\n    \"pattern\": \"/(?:\\\\/\\\\*[\\\\s\\\\S]*?\\\\*\\\\/)/g\"\n  },\n  // You can also combine multiple named patterns into one single named pattern\n  {\n    \"name\": \"comments\",\n    \"pattern\": [\"comment-single-line\", \"comment-multi-line\"]\n  }\n]\n```","type":"array"},"suggestWords":{"items":{"type":"string"},"markdownDescription":"A list of suggested replacements for words.\nSuggested words provide a way to make preferred suggestions on word replacements.\nTo hint at a preferred change, but not to require it.\n\nFormat of `suggestWords`\n- Single suggestion (possible auto fix)\n    - `word: suggestion`\n    - `word->suggestion`\n- Multiple suggestions (not auto fixable)\n   - `word: first, second, third`\n   - `word->first, second, third`","type":"array"},"words":{"items":{"type":"string"},"markdownDescription":"List of words to be considered correct.","type":"array"}},"required":["languageId"],"type":"object"},"markdownDescription":"Additional settings for individual programming languages and locales.","scope":"resource","type":"array"},"loadDefaultConfiguration":{"default":true,"markdownDescription":"By default, the bundled dictionary configurations are loaded. Explicitly setting this to `false`\nwill prevent ALL default configuration from being loaded.","type":"boolean"},"maxDuplicateProblems":{"default":5,"markdownDescription":"The maximum number of times the same word can be flagged as an error in a file.","type":"number"},"maxNumberOfProblems":{"default":10000,"markdownDescription":"The maximum number of problems to report in a file.","type":"number"},"minRandomLength":{"default":40,"markdownDescription":"The minimum length of a random string to be ignored.","type":"number"},"minWordLength":{"default":4,"markdownDescription":"The minimum length of a word before checking it against a dictionary.","type":"number"},"name":{"markdownDescription":"Optional name of configuration.","type":"string"},"noSuggestDictionaries":{"items":{"anyOf":[{"markdownDescription":"This a reference to a named dictionary.\nIt is expected to match the name of a dictionary.","pattern":"^(?=[^!*,;{}[\\]~\\n]+$)(?=(.*\\w)).+$","type":"string"},{"markdownDescription":"This a negative reference to a named dictionary.\n\nIt is used to exclude or include a dictionary by name.\n\nThe reference starts with 1 or more `!`.\n- `!<dictionary_name>` - Used to exclude the dictionary matching `<dictionary_name>`.\n- `!!<dictionary_name>` - Used to re-include a dictionary matching `<dictionary_name>`.\n   Overrides `!<dictionary_name>`.\n- `!!!<dictionary_name>` - Used to exclude a dictionary matching `<dictionary_name>`.\n   Overrides `!!<dictionary_name>`.","pattern":"^(?=!+[^!*,;{}[\\]~\\n]+$)(?=(.*\\w)).+$","type":"string"}],"markdownDescription":"Reference to a dictionary by name.\nOne of:\n-  {@link  DictionaryRef } \n-  {@link  DictionaryNegRef }"},"markdownDescription":"Optional list of dictionaries that will not be used for suggestions.\nWords in these dictionaries are considered correct, but will not be\nused when making spell correction suggestions.\n\nNote: if a word is suggested by another dictionary, but found in\none of these dictionaries, it will be removed from the set of\npossible suggestions.","type":"array"},"numSuggestions":{"default":10,"markdownDescription":"Number of suggestions to make.","type":"number"},"patterns":{"items":{"additionalProperties":false,"properties":{"description":{"markdownDescription":"Description of the pattern.","type":"string"},"name":{"markdownDescription":"Pattern name, used as an identifier in ignoreRegExpList and includeRegExpList.\nIt is possible to redefine one of the predefined patterns to override its value.","type":"string"},"pattern":{"anyOf":[{"type":"string"},{"items":{"type":"string"},"type":"array"}],"markdownDescription":"RegExp pattern or array of RegExp patterns."}},"required":["name","pattern"],"type":"object"},"markdownDescription":"Defines a list of patterns that can be used with the  {@link  ignoreRegExpList }  and\n {@link  includeRegExpList }  options.\n\nFor example:\n\n```javascript\n\"ignoreRegExpList\": [\"comments\"],\n\"patterns\": [\n  {\n    \"name\": \"comment-single-line\",\n    \"pattern\": \"/#.*/g\"\n  },\n  {\n    \"name\": \"comment-multi-line\",\n    \"pattern\": \"/(?:\\\\/\\\\*[\\\\s\\\\S]*?\\\\*\\\\/)/g\"\n  },\n  // You can also combine multiple named patterns into one single named pattern\n  {\n    \"name\": \"comments\",\n    \"pattern\": [\"comment-single-line\", \"comment-multi-line\"]\n  }\n]\n```","type":"array"},"pnpFiles":{"default":[".pnp.js",".pnp.cjs"],"items":{"type":"string"},"markdownDescription":"The PnP files to search for. Note: `.mjs` files are not currently supported.","type":"array"},"suggestWords":{"items":{"type":"string"},"markdownDescription":"A list of suggested replacements for words.\nSuggested words provide a way to make preferred suggestions on word replacements.\nTo hint at a preferred change, but not to require it.\n\nFormat of `suggestWords`\n- Single suggestion (possible auto fix)\n    - `word: suggestion`\n    - `word->suggestion`\n- Multiple suggestions (not auto fixable)\n   - `word: first, second, third`\n   - `word->first, second, third`","type":"array"},"suggestionNumChanges":{"default":3,"markdownDescription":"The maximum number of changes allowed on a word to be considered a suggestions.\n\nFor example, appending an `s` onto `example` -> `examples` is considered 1 change.\n\nRange: between 1 and 5.","type":"number"},"suggestionsTimeout":{"default":500,"markdownDescription":"The maximum amount of time in milliseconds to generate suggestions for a word.","type":"number"},"usePnP":{"default":false,"markdownDescription":"Packages managers like Yarn 2 use a `.pnp.cjs` file to assist in loading\npackages stored in the repository.\n\nWhen true, the spell checker will search up the directory structure for the existence\nof a PnP file and load it.","type":"boolean"},"words":{"items":{"type":"string"},"markdownDescription":"List of words to be considered correct.","type":"array"}},"required":["filename"],"type":"object"},"markdownDescription":"Overrides are used to apply settings for specific files in your project.\n\n**Example:**\n\n```jsonc\n\"cSpell.overrides\": [\n  // Force `*.hrr` and `*.crr` files to be treated as `cpp` files:\n  {\n    \"filename\": \"**/{*.hrr,*.crr}\",\n    \"languageId\": \"cpp\"\n  },\n  // Force `dutch/**/*.txt` to be treated as Dutch (dictionary needs to be installed separately):\n  {\n    \"filename\": \"**/dutch/**/*.txt\",\n    \"language\": \"nl\"\n  }\n]\n```","scope":"resource","type":"array"},"cSpell.patterns":{"items":{"additionalProperties":false,"properties":{"description":{"markdownDescription":"Description of the pattern.","type":"string"},"name":{"markdownDescription":"Pattern name, used as an identifier in ignoreRegExpList and includeRegExpList.\nIt is possible to redefine one of the predefined patterns to override its value.","type":"string"},"pattern":{"anyOf":[{"type":"string"},{"items":{"type":"string"},"type":"array"}],"markdownDescription":"RegExp pattern or array of RegExp patterns."}},"required":["name","pattern"],"type":"object"},"markdownDescription":"Defines a list of patterns that can be used with the `#cSpell.ignoreRegExpList#` and\n`#cSpell.includeRegExpList#` options.\n\n**Example:**\n\n```jsonc\n\"cSpell.patterns\": [\n  {\n    \"name\": \"comment-single-line\",\n    \"pattern\": \"/#.*/g\"\n  },\n  {\n    \"name\": \"comment-multi-line\",\n    \"pattern\": \"/(?:\\\\/\\\\*[\\\\s\\\\S]*?\\\\*\\\\/)/g\"\n  }\n]\n```","scope":"resource","type":"array"}},"title":"CSpell","type":"object"},{"additionalProperties":false,"markdownDescription":"Experimental settings that may change or be removed in the future.","order":19,"properties":{"cSpell.experimental.enableRegexpView":{"default":false,"markdownDescription":"Show Regular Expression Explorer","scope":"application","type":"boolean"},"cSpell.experimental.symbols":{"default":false,"markdownDescription":"Experiment with executeDocumentSymbolProvider.\nThis feature is experimental and will be removed in the future.","scope":"application","title":"Experiment with `executeDocumentSymbolProvider`","type":"boolean"},"cSpell.reportUnknownWords":{"default":true,"markdownDescription":"By default, the spell checker reports all unknown words as misspelled. This setting allows for a more relaxed spell checking, by only\nreporting unknown words as suggestions. Common spelling errors are still flagged as misspelled.\n\n- `true` - report unknown words as misspelled\n- `false` - report unknown words as suggestions","scope":"language-overridable","since":"4.0.2","title":"Strict Spell Checking","type":"boolean"}},"title":"Experimental","type":"object"},{"additionalProperties":false,"markdownDescription":"Settings that control which files and folders are spell checked.","order":3,"properties":{"cSpell.allowedSchemas":{"deprecated":true,"deprecationMessage":"- Use `#cSpell.enabledSchemes#` instead.","items":{"type":"string"},"markdownDescription":"Control which file schemes will be checked for spelling (VS Code must be restarted for this setting to take effect).\n\n\nSome schemes have special meaning like:\n- `untitled` - Used for new documents that have not yet been saved\n- `vscode-notebook-cell` - Used for validating segments of a Notebook.\n- `vscode-userdata` - Needed to spell check `.code-snippets`\n- `vscode-scm` - Needed to spell check Source Control commit messages.\n- `comment` - Used for new comment editors.","scope":"window","title":"Define Allowed Schemes","type":"array"},"cSpell.checkOnlyEnabledFileTypes":{"default":true,"markdownDescription":"By default, the spell checker checks only enabled file types. Use `#cSpell.enableFiletypes#`\nto turn on / off various file types.\n\nWhen this setting is `false`, all file types are checked except for the ones disabled by `#cSpell.enabledFileTypes#`.\nSee `#cSpell.enableFiletypes#` on how to disable a file type.","scope":"resource","title":"Check Only Enabled File Types","type":"boolean"},"cSpell.checkVSCodeSystemFiles":{"default":false,"markdownDescription":"Spell check VS Code system files.\nThese include:\n- `vscode-userdata:/**/settings.json`\n- `vscode-userdata:/**/keybindings.json`","scope":"application","type":"boolean"},"cSpell.enableFiletypes":{"deprecated":true,"deprecationMessage":"- Use `#cSpell.enabledFileTypes#` instead.","items":{"markdownDescription":"Enable / Disable checking file types (languageIds).\nTo disable a language, prefix with `!` as in `!json`,\n\n\nExample:\n```\njsonc       // enable checking for jsonc\n!json       // disable checking for json\nkotlin      // enable checking for kotlin\n```","pattern":"(^!*(?!\\s)[\\s\\w_.\\-]+$)|(^!*[*]$)","patternErrorMessage":"Allowed characters are `a-zA-Z`, `.`, `-`, `_` and space.","type":"string"},"markdownDescription":"Enable / Disable checking file types (languageIds).\n\nThese are in additional to the file types specified by `#cSpell.enabledLanguageIds#`.\nTo disable a language, prefix with `!` as in `!json`,\n\n\n**Example: individual file types**\n\n```\njsonc       // enable checking for jsonc\n!json       // disable checking for json\nkotlin      // enable checking for kotlin\n```\n\n**Example: enable all file types**\n\n```\n*           // enable checking for all file types\n!json       // except for json\n```","scope":"resource","title":"Enable File Types","type":"array","uniqueItems":true},"cSpell.enabledFileTypes":{"additionalProperties":{"type":"boolean"},"default":{"*":true,"markdown":true},"markdownDescription":"Enable / Disable checking file types (languageIds).\n\nThis setting replaces: `#cSpell.enabledLanguageIds#` and `#cSpell.enableFiletypes#`.\n\nA Value of:\n- `true` - enable checking for the file type\n- `false` - disable checking for the file type\n\nA file type of `*` is a wildcard that enables all file types.\n\n**Example: enable all file types**\n\n| File Type | Enabled | Comment |\n| --------- | ------- | ------- |\n| `*`       | `true`  | Enable all file types. |\n| `json`    | `false` | Disable checking for json files. |","scope":"resource","title":"Enabled File Types to Check","type":"object"},"cSpell.enabledSchemes":{"additionalProperties":{"type":"boolean"},"default":{"comment":true,"file":true,"gist":true,"repo":true,"sftp":true,"untitled":true,"vscode-notebook-cell":true,"vscode-scm":true,"vscode-userdata":true,"vscode-vfs":true,"vsls":true},"markdownDescription":"Control which file schemes will be checked for spelling (VS Code must be restarted for this setting to take effect).\n\n\nSome schemes have special meaning like:\n- `untitled` - Used for new documents that have not yet been saved\n- `vscode-notebook-cell` - Used for validating segments of a Notebook.\n- `vscode-userdata` - Needed to spell check `.code-snippets`\n- `vscode-scm` - Needed to spell check Source Control commit messages.\n- `comment` - Used for new comment editors.","scope":"window","title":"Specify Allowed Schemes","type":"object"},"cSpell.files":{"items":{"markdownDescription":"These are glob expressions.","type":"string"},"markdownDescription":"Glob patterns of files to be checked.\nGlob patterns are relative to the `#cSpell.globRoot#` of the configuration file that defines them.","scope":"resource","title":"Glob patterns of files to be checked","type":"array"},"cSpell.globRoot":{"markdownDescription":"The root to use for glob patterns found in this configuration.\nDefault: The current workspace folder.\nUse `globRoot` to define a different location. `globRoot` can be relative to the location of this configuration file.\nDefining globRoot, does not impact imported configurations.\n\nSpecial Values:\n\n- `${workspaceFolder}` - Default - globs will be relative to the current workspace folder\n- `${workspaceFolder:<name>}` - Where `<name>` is the name of the workspace folder.","scope":"resource","type":"string"},"cSpell.ignorePaths":{"default":["package-lock.json","node_modules","vscode-extension",".git/{info,lfs,logs,refs,objects}/**",".git/{index,*refs,*HEAD}",".vscode",".vscode-insiders"],"items":{"markdownDescription":"Simple Glob string, the root will be globRoot.","type":"string"},"markdownDescription":"Glob patterns of files to be ignored. The patterns are relative to the `#cSpell.globRoot#` of the configuration file that defines them.","scope":"resource","title":"Glob patterns of files to be ignored","type":"array"},"cSpell.import":{"items":{"markdownDescription":"A File System Path. Relative paths are relative to the configuration file.","type":"string"},"markdownDescription":"Allows this configuration to inherit configuration for one or more other files.\n\nSee [Importing / Extending Configuration](https://cspell.org/configuration/imports/) for more details.","scope":"resource","type":"array"},"cSpell.mergeCSpellSettings":{"default":true,"markdownDescription":"Specify if fields from `.vscode/settings.json` are passed to the spell checker.\nThis only applies when there is a CSpell configuration file in the workspace.\n\nThe purpose of this setting to help provide a consistent result compared to the\nCSpell spell checker command line tool.\n\nValues:\n- `true` - all settings will be merged based upon `#cSpell.mergeCSpellSettingsFields#`.\n- `false` - only use `.vscode/settings.json` if a CSpell configuration is not found.\n\nNote: this setting is used in conjunction with `#cSpell.mergeCSpellSettingsFields#`.","scope":"resource","since":"4.0.0","type":"boolean"},"cSpell.mergeCSpellSettingsFields":{"additionalProperties":false,"default":{"allowCompoundWords":true,"caseSensitive":true,"dictionaries":true,"dictionaryDefinitions":true,"enableGlobDot":true,"features":true,"files":true,"flagWords":true,"gitignoreRoot":true,"globRoot":true,"ignorePaths":true,"ignoreRegExpList":true,"ignoreWords":true,"import":true,"includeRegExpList":true,"language":true,"languageId":true,"languageSettings":true,"loadDefaultConfiguration":true,"minWordLength":true,"noConfigSearch":true,"noSuggestDictionaries":true,"numSuggestions":true,"overrides":true,"patterns":true,"pnpFiles":true,"reporters":true,"suggestWords":true,"useGitignore":true,"usePnP":true,"userWords":true,"validateDirectives":true,"words":true},"markdownDescription":"Specify which fields from `.vscode/settings.json` are passed to the spell checker.\nThis only applies when there is a CSpell configuration file in the workspace and\n`#cSpell.mergeCSpellSettings#` is `true`.\n\nValues:\n- `{ flagWords: true, userWords: false }` - Always allow `flagWords`, but never allow `userWords`.\n\nExample:\n```jsonc\n\"cSpell.mergeCSpellSettingsFields\": { \"userWords\": false }\n```","properties":{"allowCompoundWords":{"type":"boolean"},"caseSensitive":{"type":"boolean"},"dictionaries":{"type":"boolean"},"dictionaryDefinitions":{"type":"boolean"},"enableGlobDot":{"type":"boolean"},"features":{"type":"boolean"},"files":{"type":"boolean"},"flagWords":{"type":"boolean"},"gitignoreRoot":{"type":"boolean"},"globRoot":{"type":"boolean"},"ignorePaths":{"type":"boolean"},"ignoreRegExpList":{"type":"boolean"},"ignoreWords":{"type":"boolean"},"import":{"type":"boolean"},"includeRegExpList":{"type":"boolean"},"language":{"type":"boolean"},"languageId":{"type":"boolean"},"languageSettings":{"type":"boolean"},"loadDefaultConfiguration":{"type":"boolean"},"minWordLength":{"type":"boolean"},"noConfigSearch":{"type":"boolean"},"noSuggestDictionaries":{"type":"boolean"},"numSuggestions":{"type":"boolean"},"overrides":{"type":"boolean"},"patterns":{"type":"boolean"},"pnpFiles":{"type":"boolean"},"reporters":{"type":"boolean"},"suggestWords":{"type":"boolean"},"useGitignore":{"type":"boolean"},"usePnP":{"type":"boolean"},"userWords":{"type":"boolean"},"validateDirectives":{"type":"boolean"},"words":{"type":"boolean"}},"scope":"resource","since":"4.0.0","type":"object"},"cSpell.noConfigSearch":{"markdownDescription":"Prevents searching for local configuration when checking individual documents.","scope":"resource","type":"boolean"},"cSpell.spellCheckOnlyWorkspaceFiles":{"default":false,"markdownDescription":"Only spell check files that are in the currently open workspace.\nThis same effect can be achieved using the `#cSpell.files#` setting.\n\n\n```js\n\"cSpell.files\": [\"/**\"]\n```","scope":"window","title":"Spell Check Only Workspace Files","type":"boolean"},"cSpell.useGitignore":{"default":true,"markdownDescription":"Tells the spell checker to load `.gitignore` files and skip files that match the globs in the `.gitignore` files found.","scope":"resource","type":"boolean"},"cSpell.usePnP":{"markdownDescription":"Packages managers like Yarn 2 use a `.pnp.cjs` file to assist in loading\npackages stored in the repository.\n\nWhen true, the spell checker will search up the directory structure for the existence\nof a PnP file and load it.","scope":"resource","type":"boolean"},"cSpell.workspaceRootPath":{"markdownDescription":"Define the path to the workspace root folder in a multi-root workspace.\nBy default it is the first folder.\n\nThis is used to find the `cspell.json` file for the workspace.\n\n\n**Example: use the `client` folder**\n```\n${workspaceFolder:client}\n```","scope":"resource","title":"Workspace Root Folder Path","type":"string"}},"title":"Files, Folders, and Workspaces","type":"object"},{"additionalProperties":false,"markdownDescription":"Settings that control dictionaries and language preferences.","order":1,"properties":{"cSpell.caseSensitive":{"markdownDescription":"Determines if words must match case and accent rules.\n\n- `false` - Case is ignored and accents can be missing on the entire word.\n  Incorrect accents or partially missing accents will be marked as incorrect.\n  Note: Some languages like Portuguese have case sensitivity turned on by default.\n  You must use `#cSpell.languageSettings#` to turn it off.\n- `true` - Case and accents are enforced by default.","scope":"resource","type":"boolean"},"cSpell.customDictionaries":{"additionalProperties":{"anyOf":[{"title":"Named dictionary to be enabled / disabled\n- `true` - turn on the named dictionary\n- `false` - turn off the named dictionary","type":"boolean"},{"additionalProperties":false,"markdownDescription":"Define a custom dictionary to be included.","properties":{"addWords":{"default":true,"markdownDescription":"Indicate if this custom dictionary should be used to store added words.","title":"Add Words to Dictionary","type":"boolean"},"description":{"markdownDescription":"Optional: A human readable description.","title":"Description of the Dictionary","type":"string"},"ignoreForbiddenWords":{"markdownDescription":"Some dictionaries may contain forbidden words to prevent compounding from generating\nwords that are not valid in the language. These are often\nwords that are used in other languages or might be generated through compounding.\nThis setting allows flagged words to be ignored when checking the dictionary.\nThe effect is similar to the word not being in the dictionary.","type":"boolean"},"name":{"markdownDescription":"The reference name of the dictionary.\n\n\nExample: `My Words` or `custom`\n\n\nIf the name matches a pre-defined dictionary, it will override the pre-defined dictionary.\nIf you use: `typescript` it will replace the built-in TypeScript dictionary.","title":"Name of Dictionary","type":"string"},"noSuggest":{"markdownDescription":"Indicate that suggestions should not come from this dictionary.\nWords in this dictionary are considered correct, but will not be\nused when making spell correction suggestions.\n\nNote: if a word is suggested by another dictionary, but found in\nthis dictionary, it will be removed from the set of\npossible suggestions.","type":"boolean"},"path":{"anyOf":[{"markdownDescription":"Define the path to the dictionary text file.\n\n**Note:** if path is `undefined` the `name`d dictionary is expected to be found\nin the `dictionaryDefinitions`.\n\nFile Format: Each line in the file is considered a dictionary entry.\n\nCase is preserved while leading and trailing space is removed.\n\nThe path should be absolute, or relative to the workspace.\n\n**Example:** relative to User's folder\n\n```json\n\"path\": \"~/dictionaries/custom_dictionary.txt\"\n```\n\n**Example:** relative to the `client` folder in a multi-root workspace\n\n```json\n\"path\": \"${workspaceFolder:client}/build/custom_dictionary.txt\"\n```\n\n**Example:** relative to the current workspace folder in a single-root workspace\n\n**Note:** this might not work as expected in a multi-root workspace since it is based upon the relative\nworkspace for the currently open file.\n\n```json\n\"path\": \"${workspaceFolder}/build/custom_dictionary.txt\"\n```\n\n**Example:** relative to the workspace folder in a single-root workspace or the first folder in\na multi-root workspace\n\n```json\n\"path\": \"./build/custom_dictionary.txt\"\n```","title":"Path to Dictionary Text File","type":"string"},{"markdownDescription":"Define the path to the dictionary text file.\n\n**Note:** if path is `undefined` the `name`d dictionary is expected to be found\nin the `dictionaryDefinitions`.\n\nFile Format: Each line in the file is considered a dictionary entry.\n\nCase is preserved while leading and trailing space is removed.\n\nThe path should be absolute, or relative to the workspace.\n\n**Example:** relative to User's folder\n\n```json\n\"path\": \"~/dictionaries/custom_dictionary.txt\"\n```\n\n**Example:** relative to the `client` folder in a multi-root workspace\n\n```json\n\"path\": \"${workspaceFolder:client}/build/custom_dictionary.txt\"\n```\n\n**Example:** relative to the current workspace folder in a single-root workspace\n\n**Note:** this might not work as expected in a multi-root workspace since it is based upon the relative\nworkspace for the currently open file.\n\n```json\n\"path\": \"${workspaceFolder}/build/custom_dictionary.txt\"\n```\n\n**Example:** relative to the workspace folder in a single-root workspace or the first folder in\na multi-root workspace\n\n```json\n\"path\": \"./build/custom_dictionary.txt\"\n```","type":"string"}],"markdownDescription":"Define the path to the dictionary text file.\n\n**Note:** if path is `undefined` the `name`d dictionary is expected to be found\nin the `dictionaryDefinitions`.\n\nFile Format: Each line in the file is considered a dictionary entry.\n\nCase is preserved while leading and trailing space is removed.\n\nThe path should be absolute, or relative to the workspace.\n\n**Example:** relative to User's folder\n\n```json\n\"path\": \"~/dictionaries/custom_dictionary.txt\"\n```\n\n**Example:** relative to the `client` folder in a multi-root workspace\n\n```json\n\"path\": \"${workspaceFolder:client}/build/custom_dictionary.txt\"\n```\n\n**Example:** relative to the current workspace folder in a single-root workspace\n\n**Note:** this might not work as expected in a multi-root workspace since it is based upon the relative\nworkspace for the currently open file.\n\n```json\n\"path\": \"${workspaceFolder}/build/custom_dictionary.txt\"\n```\n\n**Example:** relative to the workspace folder in a single-root workspace or the first folder in\na multi-root workspace\n\n```json\n\"path\": \"./build/custom_dictionary.txt\"\n```","title":"Path to Dictionary Text File"},"scope":{"anyOf":[{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},{"items":{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},"type":"array"}],"markdownDescription":"Options are\n- `user` - words that apply to all projects and workspaces\n- `workspace` - words that apply to the entire workspace\n- `folder` - words that apply to only a workspace folder","title":"Scope of dictionary"}},"title":"Custom Dictionary Entry","type":"object"}]},"markdownDescription":"Define custom dictionaries to be included by default.\nIf `addWords` is `true` words will be added to this dictionary.\n\n\n**Example:**\n\n```js\n\"cSpell.customDictionaries\": {\n  \"project-words\": {\n    \"name\": \"project-words\",\n    \"path\": \"${workspaceRoot}/project-words.txt\",\n    \"description\": \"Words used in this project\",\n    \"addWords\": true\n  },\n  \"custom\": true, // Enable the `custom` dictionary\n  \"internal-terms\": false // Disable the `internal-terms` dictionary\n}\n```","scope":"resource","title":"Custom Dictionaries","type":"object"},"cSpell.dictionaries":{"items":{"type":"string"},"markdownDescription":"Optional list of dictionaries to use.\n\nEach entry should match the name of the dictionary.\n\nTo remove a dictionary from the list add `!` before the name.\ni.e. `!typescript` will turn off the dictionary with the name `typescript`.\n\n\nExample:\n\n```jsonc\n// Enable `lorem-ipsum` and disable `typescript`\n\"cSpell.dictionaries\": [\"lorem-ipsum\", \"!typescript\"]\n```","scope":"resource","type":"array"},"cSpell.dictionaryDefinitions":{"items":{"anyOf":[{"additionalProperties":false,"properties":{"addWords":{"default":true,"markdownDescription":"Indicate if this custom dictionary should be used to store added words.","title":"Add Words to Dictionary","type":"boolean"},"description":{"markdownDescription":"Optional: A human readable description.","title":"Description of the Dictionary","type":"string"},"ignoreForbiddenWords":{"markdownDescription":"Some dictionaries may contain forbidden words to prevent compounding from generating\nwords that are not valid in the language. These are often\nwords that are used in other languages or might be generated through compounding.\nThis setting allows flagged words to be ignored when checking the dictionary.\nThe effect is similar to the word not being in the dictionary.","type":"boolean"},"name":{"markdownDescription":"The reference name of the dictionary.\n\n\nExample: `My Words` or `custom`\n\n\nIf the name matches a pre-defined dictionary, it will override the pre-defined dictionary.\nIf you use: `typescript` it will replace the built-in TypeScript dictionary.","pattern":"^(?=[^!*,;{}[\\]~\\n]+$)(?=(.*\\w)).+$","title":"Name of Dictionary","type":"string"},"noSuggest":{"markdownDescription":"Indicate that suggestions should not come from this dictionary.\nWords in this dictionary are considered correct, but will not be\nused when making spell correction suggestions.\n\nNote: if a word is suggested by another dictionary, but found in\nthis dictionary, it will be removed from the set of\npossible suggestions.","type":"boolean"},"path":{"markdownDescription":"Define the path to the dictionary text file.\n\n**Note:** if path is `undefined` the `name`d dictionary is expected to be found\nin the `dictionaryDefinitions`.\n\nFile Format: Each line in the file is considered a dictionary entry.\n\nCase is preserved while leading and trailing space is removed.\n\nThe path should be absolute, or relative to the workspace.\n\n**Example:** relative to User's folder\n\n```json\n\"path\": \"~/dictionaries/custom_dictionary.txt\"\n```\n\n**Example:** relative to the `client` folder in a multi-root workspace\n\n```json\n\"path\": \"${workspaceFolder:client}/build/custom_dictionary.txt\"\n```\n\n**Example:** relative to the current workspace folder in a single-root workspace\n\n**Note:** this might not work as expected in a multi-root workspace since it is based upon the relative\nworkspace for the currently open file.\n\n```json\n\"path\": \"${workspaceFolder}/build/custom_dictionary.txt\"\n```\n\n**Example:** relative to the workspace folder in a single-root workspace or the first folder in\na multi-root workspace\n\n```json\n\"path\": \"./build/custom_dictionary.txt\"\n```","type":"string"},"scope":{"anyOf":[{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},{"items":{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},"type":"array"}],"markdownDescription":"Options are\n- `user` - words that apply to all projects and workspaces\n- `workspace` - words that apply to the entire workspace\n- `folder` - words that apply to only a workspace folder","title":"Scope of dictionary"}},"required":["name","path"],"type":"object"},{"additionalProperties":false,"properties":{"description":{"markdownDescription":"Optional description of the contents / purpose of the dictionary.","type":"string"},"ignoreForbiddenWords":{"markdownDescription":"Some dictionaries may contain forbidden words to prevent compounding from generating\nwords that are not valid in the language. These are often\nwords that are used in other languages or might be generated through compounding.\nThis setting allows flagged words to be ignored when checking the dictionary.\nThe effect is similar to the word not being in the dictionary.","type":"boolean"},"name":{"markdownDescription":"This is the name of a dictionary.\n\nName Format:\n- Must contain at least 1 number or letter.\n- Spaces are allowed.\n- Leading and trailing space will be removed.\n- Names ARE case-sensitive.\n- Must not contain `*`, `!`, `;`, `,`, `{`, `}`, `[`, `]`, `~`.","type":"string"},"noSuggest":{"markdownDescription":"Indicate that suggestions should not come from this dictionary.\nWords in this dictionary are considered correct, but will not be\nused when making spell correction suggestions.\n\nNote: if a word is suggested by another dictionary, but found in\nthis dictionary, it will be removed from the set of\npossible suggestions.","type":"boolean"},"path":{"markdownDescription":"Path to the file.","type":"string"}},"required":["path","name"],"type":"object"},{"additionalProperties":false,"properties":{"addWords":{"markdownDescription":"When `true`, let's the spell checker know that words can be added to this dictionary.","type":"boolean"},"description":{"markdownDescription":"Optional description of the contents / purpose of the dictionary.","type":"string"},"ignoreForbiddenWords":{"markdownDescription":"Some dictionaries may contain forbidden words to prevent compounding from generating\nwords that are not valid in the language. These are often\nwords that are used in other languages or might be generated through compounding.\nThis setting allows flagged words to be ignored when checking the dictionary.\nThe effect is similar to the word not being in the dictionary.","type":"boolean"},"name":{"markdownDescription":"This is the name of a dictionary.\n\nName Format:\n- Must contain at least 1 number or letter.\n- Spaces are allowed.\n- Leading and trailing space will be removed.\n- Names ARE case-sensitive.\n- Must not contain `*`, `!`, `;`, `,`, `{`, `}`, `[`, `]`, `~`.","type":"string"},"noSuggest":{"markdownDescription":"Indicate that suggestions should not come from this dictionary.\nWords in this dictionary are considered correct, but will not be\nused when making spell correction suggestions.\n\nNote: if a word is suggested by another dictionary, but found in\nthis dictionary, it will be removed from the set of\npossible suggestions.","type":"boolean"},"path":{"markdownDescription":"Path to custom dictionary text file.","type":"string"},"scope":{"anyOf":[{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},{"items":{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},"type":"array"}],"markdownDescription":"Defines the scope for when words will be added to the dictionary.\n\nScope values: `user`, `workspace`, `folder`."}},"required":["path","addWords","name"],"type":"object"}]},"markdownDescription":"Define custom dictionaries.\nIf `addWords` is `true` words will be added to this dictionary.\n\nThis setting is subject to User/Workspace settings precedence rules: [Visual Studio Code User and Workspace Settings](https://code.visualstudio.com/docs/getstarted/settings#_settings-precedence).\n\nIt is better to use `#cSpell.customDictionaries#`\n\n**Example:**\n\n```js\n\"cSpell.dictionaryDefinitions\": [\n  {\n    \"name\": \"project-words\",\n    \"path\": \"${workspaceRoot}/project-words.txt\",\n    \"description\": \"Words used in this project\",\n    \"addWords\": true\n  }\n]\n```","scope":"resource","title":"Dictionary Definitions","type":"array"},"cSpell.flagWords":{"items":{"type":"string"},"markdownDescription":"List of words to always be considered incorrect. Words found in `flagWords` override `words`.\n\nFormat of `flagWords`\n- single word entry - `word`\n- with suggestions - `word:suggestion` or `word->suggestion, suggestions`\n\nExample:\n```ts\n\"flagWords\": [\n  \"color: colour\",\n  \"incase: in case, encase\",\n  \"canot->cannot\",\n  \"cancelled->canceled\"\n]\n```","scope":"resource","type":"array"},"cSpell.ignoreWords":{"items":{"type":"string"},"markdownDescription":"A list of words to be ignored by the spell checker.","scope":"resource","type":"array"},"cSpell.language":{"default":"en","markdownDescription":"Current active spelling language.\n\nExample: `en-GB` for British English\n\nExample: `en,nl` to enable both English and Dutch","scope":"resource","type":"string"},"cSpell.languageSettings":{"items":{"additionalProperties":false,"properties":{"allowCompoundWords":{"default":false,"markdownDescription":"True to enable compound word checking.","type":"boolean"},"caseSensitive":{"default":false,"markdownDescription":"Determines if words must match case and accent rules.\n\nSee [Case Sensitivity](https://cspell.org/docs/case-sensitive/) for more details.\n\n- `false` - Case is ignored and accents can be missing on the entire word.\n  Incorrect accents or partially missing accents will be marked as incorrect.\n- `true` - Case and accents are enforced.","type":"boolean"},"description":{"markdownDescription":"Optional description of configuration.","type":"string"},"dictionaries":{"items":{"anyOf":[{"markdownDescription":"This a reference to a named dictionary.\nIt is expected to match the name of a dictionary.","pattern":"^(?=[^!*,;{}[\\]~\\n]+$)(?=(.*\\w)).+$","type":"string"},{"markdownDescription":"This a negative reference to a named dictionary.\n\nIt is used to exclude or include a dictionary by name.\n\nThe reference starts with 1 or more `!`.\n- `!<dictionary_name>` - Used to exclude the dictionary matching `<dictionary_name>`.\n- `!!<dictionary_name>` - Used to re-include a dictionary matching `<dictionary_name>`.\n   Overrides `!<dictionary_name>`.\n- `!!!<dictionary_name>` - Used to exclude a dictionary matching `<dictionary_name>`.\n   Overrides `!!<dictionary_name>`.","pattern":"^(?=!+[^!*,;{}[\\]~\\n]+$)(?=(.*\\w)).+$","type":"string"}],"markdownDescription":"Reference to a dictionary by name.\nOne of:\n-  {@link  DictionaryRef } \n-  {@link  DictionaryNegRef }"},"markdownDescription":"Optional list of dictionaries to use. Each entry should match the name of the dictionary.\n\nTo remove a dictionary from the list, add `!` before the name.\n\nFor example, `!typescript` will turn off the dictionary with the name `typescript`.\n\nSee the [Dictionaries](https://cspell.org/docs/dictionaries/)\nand [Custom Dictionaries](https://cspell.org/docs/dictionaries-custom/) for more details.","type":"array"},"dictionaryDefinitions":{"items":{"anyOf":[{"additionalProperties":false,"properties":{"addWords":{"default":true,"markdownDescription":"Indicate if this custom dictionary should be used to store added words.","title":"Add Words to Dictionary","type":"boolean"},"description":{"markdownDescription":"Optional: A human readable description.","title":"Description of the Dictionary","type":"string"},"ignoreForbiddenWords":{"markdownDescription":"Some dictionaries may contain forbidden words to prevent compounding from generating\nwords that are not valid in the language. These are often\nwords that are used in other languages or might be generated through compounding.\nThis setting allows flagged words to be ignored when checking the dictionary.\nThe effect is similar to the word not being in the dictionary.","type":"boolean"},"name":{"markdownDescription":"The reference name of the dictionary.\n\n\nExample: `My Words` or `custom`\n\n\nIf the name matches a pre-defined dictionary, it will override the pre-defined dictionary.\nIf you use: `typescript` it will replace the built-in TypeScript dictionary.","pattern":"^(?=[^!*,;{}[\\]~\\n]+$)(?=(.*\\w)).+$","title":"Name of Dictionary","type":"string"},"noSuggest":{"markdownDescription":"Indicate that suggestions should not come from this dictionary.\nWords in this dictionary are considered correct, but will not be\nused when making spell correction suggestions.\n\nNote: if a word is suggested by another dictionary, but found in\nthis dictionary, it will be removed from the set of\npossible suggestions.","type":"boolean"},"path":{"markdownDescription":"Define the path to the dictionary text file.\n\n**Note:** if path is `undefined` the `name`d dictionary is expected to be found\nin the `dictionaryDefinitions`.\n\nFile Format: Each line in the file is considered a dictionary entry.\n\nCase is preserved while leading and trailing space is removed.\n\nThe path should be absolute, or relative to the workspace.\n\n**Example:** relative to User's folder\n\n```json\n\"path\": \"~/dictionaries/custom_dictionary.txt\"\n```\n\n**Example:** relative to the `client` folder in a multi-root workspace\n\n```json\n\"path\": \"${workspaceFolder:client}/build/custom_dictionary.txt\"\n```\n\n**Example:** relative to the current workspace folder in a single-root workspace\n\n**Note:** this might not work as expected in a multi-root workspace since it is based upon the relative\nworkspace for the currently open file.\n\n```json\n\"path\": \"${workspaceFolder}/build/custom_dictionary.txt\"\n```\n\n**Example:** relative to the workspace folder in a single-root workspace or the first folder in\na multi-root workspace\n\n```json\n\"path\": \"./build/custom_dictionary.txt\"\n```","type":"string"},"scope":{"anyOf":[{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},{"items":{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},"type":"array"}],"markdownDescription":"Options are\n- `user` - words that apply to all projects and workspaces\n- `workspace` - words that apply to the entire workspace\n- `folder` - words that apply to only a workspace folder","title":"Scope of dictionary"}},"required":["name","path"],"type":"object"},{"additionalProperties":false,"properties":{"description":{"markdownDescription":"Optional description of the contents / purpose of the dictionary.","type":"string"},"ignoreForbiddenWords":{"markdownDescription":"Some dictionaries may contain forbidden words to prevent compounding from generating\nwords that are not valid in the language. These are often\nwords that are used in other languages or might be generated through compounding.\nThis setting allows flagged words to be ignored when checking the dictionary.\nThe effect is similar to the word not being in the dictionary.","type":"boolean"},"name":{"markdownDescription":"This is the name of a dictionary.\n\nName Format:\n- Must contain at least 1 number or letter.\n- Spaces are allowed.\n- Leading and trailing space will be removed.\n- Names ARE case-sensitive.\n- Must not contain `*`, `!`, `;`, `,`, `{`, `}`, `[`, `]`, `~`.","type":"string"},"noSuggest":{"markdownDescription":"Indicate that suggestions should not come from this dictionary.\nWords in this dictionary are considered correct, but will not be\nused when making spell correction suggestions.\n\nNote: if a word is suggested by another dictionary, but found in\nthis dictionary, it will be removed from the set of\npossible suggestions.","type":"boolean"},"path":{"markdownDescription":"Path to the file.","type":"string"}},"required":["path","name"],"type":"object"},{"additionalProperties":false,"properties":{"addWords":{"markdownDescription":"When `true`, let's the spell checker know that words can be added to this dictionary.","type":"boolean"},"description":{"markdownDescription":"Optional description of the contents / purpose of the dictionary.","type":"string"},"ignoreForbiddenWords":{"markdownDescription":"Some dictionaries may contain forbidden words to prevent compounding from generating\nwords that are not valid in the language. These are often\nwords that are used in other languages or might be generated through compounding.\nThis setting allows flagged words to be ignored when checking the dictionary.\nThe effect is similar to the word not being in the dictionary.","type":"boolean"},"name":{"markdownDescription":"This is the name of a dictionary.\n\nName Format:\n- Must contain at least 1 number or letter.\n- Spaces are allowed.\n- Leading and trailing space will be removed.\n- Names ARE case-sensitive.\n- Must not contain `*`, `!`, `;`, `,`, `{`, `}`, `[`, `]`, `~`.","type":"string"},"noSuggest":{"markdownDescription":"Indicate that suggestions should not come from this dictionary.\nWords in this dictionary are considered correct, but will not be\nused when making spell correction suggestions.\n\nNote: if a word is suggested by another dictionary, but found in\nthis dictionary, it will be removed from the set of\npossible suggestions.","type":"boolean"},"path":{"markdownDescription":"Path to custom dictionary text file.","type":"string"},"scope":{"anyOf":[{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},{"items":{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},"type":"array"}],"markdownDescription":"Defines the scope for when words will be added to the dictionary.\n\nScope values: `user`, `workspace`, `folder`."}},"required":["path","addWords","name"],"type":"object"}]},"markdownDescription":"Define custom dictionaries.\nIf `addWords` is `true` words will be added to this dictionary.\n\nThis setting is subject to User/Workspace settings precedence rules: [Visual Studio Code User and Workspace Settings](https://code.visualstudio.com/docs/getstarted/settings#_settings-precedence).\n\nIt is better to use `#cSpell.customDictionaries#`\n\n**Example:**\n\n```js\n\"cSpell.dictionaryDefinitions\": [\n  {\n    \"name\": \"project-words\",\n    \"path\": \"${workspaceRoot}/project-words.txt\",\n    \"description\": \"Words used in this project\",\n    \"addWords\": true\n  }\n]\n```","scope":"resource","title":"Dictionary Definitions","type":"array"},"enabled":{"default":true,"markdownDescription":"Is the spell checker enabled.","type":"boolean"},"flagWords":{"items":{"type":"string"},"markdownDescription":"List of words to always be considered incorrect. Words found in `flagWords` override `words`.\n\nFormat of `flagWords`\n- single word entry - `word`\n- with suggestions - `word:suggestion` or `word->suggestion, suggestions`\n\nExample:\n```ts\n\"flagWords\": [\n  \"color: colour\",\n  \"incase: in case, encase\",\n  \"canot->cannot\",\n  \"cancelled->canceled\"\n]\n```","type":"array"},"id":{"markdownDescription":"Optional identifier.","type":"string"},"ignoreRegExpList":{"items":{"anyOf":[{"type":"string"},{"markdownDescription":"This matches the name in a pattern definition.","type":"string"},{"enum":["Base64","Base64MultiLine","Base64SingleLine","CStyleComment","CStyleHexValue","CSSHexValue","CommitHash","CommitHashLink","Email","EscapeCharacters","HexValues","href","PhpHereDoc","PublicKey","RsaCert","SshRsa","SHA","HashStrings","SpellCheckerDisable","SpellCheckerDisableBlock","SpellCheckerDisableLine","SpellCheckerDisableNext","SpellCheckerIgnoreInDocSetting","string","UnicodeRef","Urls","UUID","Everything"],"type":"string"}],"markdownDescription":"A PatternRef is a Pattern or PatternId."},"markdownDescription":"List of regular expression patterns or pattern names to exclude from spell checking.\n\nExample: `[\"href\"]` - to exclude html href pattern.\n\nRegular expressions use JavaScript regular expression syntax.\n\nExample: to ignore ALL-CAPS words\n\nJSON\n```json\n\"ignoreRegExpList\": [\"/\\\\b[A-Z]+\\\\b/g\"]\n```\n\nYAML\n```yaml\nignoreRegExpList:\n  - >-\n   /\\b[A-Z]+\\b/g\n```\n\nBy default, several patterns are excluded. See\n[Configuration](https://cspell.org/configuration/patterns) for more details.\n\nWhile you can create your own patterns, you can also leverage several patterns that are\n[built-in to CSpell](https://cspell.org/types/cspell-types/types/PredefinedPatterns.html).","type":"array"},"ignoreWords":{"items":{"type":"string"},"markdownDescription":"List of words to be ignored. An ignored word will not show up as an error, even if it is\nalso in the `flagWords`.","type":"array"},"includeRegExpList":{"items":{"anyOf":[{"type":"string"},{"markdownDescription":"This matches the name in a pattern definition.","type":"string"},{"enum":["Base64","Base64MultiLine","Base64SingleLine","CStyleComment","CStyleHexValue","CSSHexValue","CommitHash","CommitHashLink","Email","EscapeCharacters","HexValues","href","PhpHereDoc","PublicKey","RsaCert","SshRsa","SHA","HashStrings","SpellCheckerDisable","SpellCheckerDisableBlock","SpellCheckerDisableLine","SpellCheckerDisableNext","SpellCheckerIgnoreInDocSetting","string","UnicodeRef","Urls","UUID","Everything"],"type":"string"}],"markdownDescription":"A PatternRef is a Pattern or PatternId."},"markdownDescription":"List of regular expression patterns or defined pattern names to match for spell checking.\n\nIf this property is defined, only text matching the included patterns will be checked.\n\nWhile you can create your own patterns, you can also leverage several patterns that are\n[built-in to CSpell](https://cspell.org/types/cspell-types/types/PredefinedPatterns.html).","type":"array"},"languageId":{"anyOf":[{"markdownDescription":"A file type:\n- `*` - will match ALL file types.\n- `typescript`, `cpp`, `json`, etc.","pattern":"^(!?[-\\w_\\s]+)|(\\*)$","type":"string"},{"markdownDescription":"A single string with a comma separated list of file types:\n- `typescript,cpp`\n- `json,jsonc,yaml`\n- etc.","pattern":"^([-\\w_\\s]+)(,[-\\w_\\s]+)*$","type":"string"},{"markdownDescription":"A Negative File Type used to exclude files of that type.\n- `!typescript` - will exclude typescript files.\n- `!cpp,!json` - will exclude cpp and json files.\n- `!typescript,javascript` - will exclude typescript files and include javascript files.","pattern":"^(![-\\w_\\s]+)(,!?[-\\w_\\s]+)*$","type":"string"},{"items":{"anyOf":[{"markdownDescription":"A file type:\n- `*` - will match ALL file types.\n- `typescript`, `cpp`, `json`, etc.","pattern":"^(!?[-\\w_\\s]+)|(\\*)$","type":"string"},{"markdownDescription":"A single string with a comma separated list of file types:\n- `typescript,cpp`\n- `json,jsonc,yaml`\n- etc.","pattern":"^([-\\w_\\s]+)(,[-\\w_\\s]+)*$","type":"string"},{"markdownDescription":"A Negative File Type used to exclude files of that type.\n- `!typescript` - will exclude typescript files.\n- `!cpp,!json` - will exclude cpp and json files.\n- `!typescript,javascript` - will exclude typescript files and include javascript files.","pattern":"^(![-\\w_\\s]+)(,!?[-\\w_\\s]+)*$","type":"string"}]},"type":"array"}],"markdownDescription":"The language id.  Ex: `typescript`, `html`, or `php`.  `*` -- will match all languages."},"locale":{"anyOf":[{"markdownDescription":"This is a written language locale like: `en`, `en-GB`, `fr`, `es`, `de` or `en,fr` for both English and French","type":"string"},{"items":{"markdownDescription":"This is a written language locale like: `en`, `en-GB`, `fr`, `es`, `de` or `en,fr` for both English and French","type":"string"},"type":"array"}],"markdownDescription":"The locale filter, matches against the language. This can be a comma separated list. `*` will match all locales."},"name":{"markdownDescription":"Optional name of configuration.","type":"string"},"noSuggestDictionaries":{"items":{"anyOf":[{"markdownDescription":"This a reference to a named dictionary.\nIt is expected to match the name of a dictionary.","pattern":"^(?=[^!*,;{}[\\]~\\n]+$)(?=(.*\\w)).+$","type":"string"},{"markdownDescription":"This a negative reference to a named dictionary.\n\nIt is used to exclude or include a dictionary by name.\n\nThe reference starts with 1 or more `!`.\n- `!<dictionary_name>` - Used to exclude the dictionary matching `<dictionary_name>`.\n- `!!<dictionary_name>` - Used to re-include a dictionary matching `<dictionary_name>`.\n   Overrides `!<dictionary_name>`.\n- `!!!<dictionary_name>` - Used to exclude a dictionary matching `<dictionary_name>`.\n   Overrides `!!<dictionary_name>`.","pattern":"^(?=!+[^!*,;{}[\\]~\\n]+$)(?=(.*\\w)).+$","type":"string"}],"markdownDescription":"Reference to a dictionary by name.\nOne of:\n-  {@link  DictionaryRef } \n-  {@link  DictionaryNegRef }"},"markdownDescription":"Optional list of dictionaries that will not be used for suggestions.\nWords in these dictionaries are considered correct, but will not be\nused when making spell correction suggestions.\n\nNote: if a word is suggested by another dictionary, but found in\none of these dictionaries, it will be removed from the set of\npossible suggestions.","type":"array"},"patterns":{"items":{"additionalProperties":false,"properties":{"description":{"markdownDescription":"Description of the pattern.","type":"string"},"name":{"markdownDescription":"Pattern name, used as an identifier in ignoreRegExpList and includeRegExpList.\nIt is possible to redefine one of the predefined patterns to override its value.","type":"string"},"pattern":{"anyOf":[{"type":"string"},{"items":{"type":"string"},"type":"array"}],"markdownDescription":"RegExp pattern or array of RegExp patterns."}},"required":["name","pattern"],"type":"object"},"markdownDescription":"Defines a list of patterns that can be used with the  {@link  ignoreRegExpList }  and\n {@link  includeRegExpList }  options.\n\nFor example:\n\n```javascript\n\"ignoreRegExpList\": [\"comments\"],\n\"patterns\": [\n  {\n    \"name\": \"comment-single-line\",\n    \"pattern\": \"/#.*/g\"\n  },\n  {\n    \"name\": \"comment-multi-line\",\n    \"pattern\": \"/(?:\\\\/\\\\*[\\\\s\\\\S]*?\\\\*\\\\/)/g\"\n  },\n  // You can also combine multiple named patterns into one single named pattern\n  {\n    \"name\": \"comments\",\n    \"pattern\": [\"comment-single-line\", \"comment-multi-line\"]\n  }\n]\n```","type":"array"},"suggestWords":{"items":{"type":"string"},"markdownDescription":"A list of suggested replacements for words.\nSuggested words provide a way to make preferred suggestions on word replacements.\nTo hint at a preferred change, but not to require it.\n\nFormat of `suggestWords`\n- Single suggestion (possible auto fix)\n    - `word: suggestion`\n    - `word->suggestion`\n- Multiple suggestions (not auto fixable)\n   - `word: first, second, third`\n   - `word->first, second, third`","type":"array"},"words":{"items":{"type":"string"},"markdownDescription":"List of words to be considered correct.","type":"array"}},"required":["languageId"],"type":"object"},"markdownDescription":"Additional settings for individual programming languages and locales.","scope":"resource","type":"array"},"cSpell.noSuggestDictionaries":{"items":{"type":"string"},"markdownDescription":"Optional list of dictionaries that will not be used for suggestions.\nWords in these dictionaries are considered correct, but will not be\nused when making spell correction suggestions.\n\nNote: if a word is suggested by another dictionary, but found in\none of these dictionaries, it will be removed from the set of\npossible suggestions.","scope":"resource","type":"array"},"cSpell.suggestWords":{"items":{"type":"string"},"markdownDescription":"A list of suggested replacements for words.\nSuggested words provide a way to make preferred suggestions on word replacements.\nTo hint at a preferred change, but not to require it.\n\nFormat of `suggestWords`\n- Single suggestion (possible auto fix)\n    - `word: suggestion`\n    - `word->suggestion`\n- Multiple suggestions (not auto fixable)\n   - `word: first, second, third`\n   - `word->first, second, third`","type":"array"},"cSpell.useLocallyInstalledCSpellDictionaries":{"default":true,"markdownDescription":"Search for `@cspell/cspell-bundled-dicts` in the workspace folder and use it if found.","scope":"resource","since":"4.0.0","type":"boolean"},"cSpell.userWords":{"items":{"type":"string"},"markdownDescription":"Words to add to global dictionary -- should only be in the user config file.","scope":"resource","type":"array"},"cSpell.words":{"items":{"type":"string"},"markdownDescription":"List of words to be considered correct.","scope":"resource","type":"array"}},"title":"Languages and Dictionaries","type":"object"},{"additionalProperties":false,"markdownDescription":"Settings that control the appearance of the spell checker.","order":6,"properties":{"cSpell.dark":{"additionalProperties":false,"markdownDescription":"Decoration for dark themes.\n\nSee:\n- `#cSpell.overviewRulerColor#`\n- `#cSpell.textDecoration#`","properties":{"overviewRulerColor":{"default":"#348feb80","markdownDescription":"The CSS color used to show issues in the ruler.\n\nDepends upon `#cSpell.useCustomDecorations#`.\n\nSee:\n- [`<color>` CSS: Cascading Style Sheets, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/color_value)\n- [CSS Colors, W3C Schools](https://www.w3schools.com/cssref/css_colors.php)\n- Hex colors\n- Use \"\" (empty string) to disable.\n\nExamples:\n- `green`\n- `DarkYellow`\n- `#ffff0080` - semi-transparent yellow.\n- `rgb(255 153 0 / 80%)`","scope":"application","since":"4.0.0","type":"string"},"textDecoration":{"markdownDescription":"The CSS Style used to decorate spelling issues. Depends upon `#cSpell.useCustomDecorations#`.\n\nThis setting is used to manually configure the text decoration. If it is not set, the following settings are used:\n- `#cSpell.textDecorationLine#` to pick the line type\n- `#cSpell.textDecorationStyle#` to pick the style\n- `#cSpell.textDecorationColor#` to set the color\n- `#cSpell.textDecorationThickness#` to set the thickness.\n\nSee: [text-decoration - CSS: Cascading Style Sheets, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration)\n\nFormat:  `<line> [style] <color> [thickness]`\n\n- line - `underline`, `overline`, see: [text-decoration-line, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-line)\n- style - `solid`, `wavy`, `dotted`, see: [text-decoration-style, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-style)\n- color - see: [text-decoration-color, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-color)\n- thickness - see: [text-decoration-thickness, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-thickness)\n\nExamples:\n- `underline green`\n- `underline dotted yellow 0.2rem`\n- `underline wavy #ff0c 1.5px` - Wavy underline with 1.5px thickness in semi-transparent yellow.\n\nTo change the ruler color, use `#cSpell.overviewRulerColor#`.","scope":"application","since":"4.0.0","type":"string"},"textDecorationColor":{"default":"#348feb","markdownDescription":"The decoration color for normal spelling issues.\n\nSee: [text-decoration - CSS: Cascading Style Sheets, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration)\n- color - see: [text-decoration-color, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-color)\n\nTo change the ruler color, use `#cSpell.overviewRulerColor#`.\n\nExamples:\n- `green`\n- `yellow`\n- `#ff0c`","scope":"application","since":"4.0.0","type":"string"},"textDecorationColorFlagged":{"default":"#f44","markdownDescription":"The decoration color for flagged issues.\n\nSee: [text-decoration - CSS: Cascading Style Sheets, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration)\n- color - see: [text-decoration-color, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-color)\n\nExamples:\n- `green`\n- `yellow`\n- `#ff0c`","scope":"application","since":"4.0.0","type":"string"},"textDecorationColorSuggestion":{"default":"#8884","markdownDescription":"The decoration color for spelling suggestions.\n\nSee: [text-decoration - CSS: Cascading Style Sheets, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration)\n- color - see: [text-decoration-color, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-color)\n\nCommon Format: `#RGBA` or `#RRGGBBAA` or `#RGB` or `#RRGGBB`\n\nExamples:\n- `green`\n- `yellow`\n- `#ff0c`","scope":"application","since":"4.0.2","type":"string"},"textDecorationLine":{"default":"underline","enum":["underline","overline","line-through"],"markdownDescription":"The CSS line type used to decorate issues.\n\nSee: [text-decoration - CSS: Cascading Style Sheets, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration)\n- line - `underline`, `overline`, see: [text-decoration-line, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-line)","scope":"application","since":"4.0.0","type":"string"},"textDecorationStyle":{"default":"dashed","enum":["solid","wavy","dotted","dashed","double"],"markdownDescription":"The CSS line style used to decorate issues.\n\nSee: [text-decoration - CSS: Cascading Style Sheets, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration)\n- style - `solid`, `wavy`, `dotted`, see: [text-decoration-style, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-style)","scope":"application","since":"4.0.0","type":"string"},"textDecorationThickness":{"default":"auto","markdownDescription":"The CSS line thickness used to decorate issues.\n\nSee: [text-decoration - CSS: Cascading Style Sheets, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration)\n- thickness - see: [text-decoration-thickness, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-thickness)\n\nExamples:\n- `auto`\n- `from-font`\n- `0.2rem`\n- `1.5px`\n- `10%`","scope":"application","since":"4.0.0","type":"string"}},"scope":"application","since":"4.0.0","type":"object"},"cSpell.doNotUseCustomDecorationForScheme":{"additionalProperties":{"type":"boolean"},"default":{"vscode-scm":true},"markdownDescription":"Use the VS Code Diagnostic Collection to render spelling issues.\n\nWith some edit boxes, like the source control message box, the custom decorations do not show up.\nThis setting allows the use of the VS Code Diagnostic Collection to render spelling issues.","scope":"application","since":"4.0.0","title":"Use VS Code to Render Spelling Issues","type":"object"},"cSpell.light":{"additionalProperties":false,"markdownDescription":"Decoration for light themes.\n\nSee:\n- `#cSpell.overviewRulerColor#`\n- `#cSpell.textDecoration#`","properties":{"overviewRulerColor":{"default":"#348feb80","markdownDescription":"The CSS color used to show issues in the ruler.\n\nDepends upon `#cSpell.useCustomDecorations#`.\n\nSee:\n- [`<color>` CSS: Cascading Style Sheets, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/color_value)\n- [CSS Colors, W3C Schools](https://www.w3schools.com/cssref/css_colors.php)\n- Hex colors\n- Use \"\" (empty string) to disable.\n\nExamples:\n- `green`\n- `DarkYellow`\n- `#ffff0080` - semi-transparent yellow.\n- `rgb(255 153 0 / 80%)`","scope":"application","since":"4.0.0","type":"string"},"textDecoration":{"markdownDescription":"The CSS Style used to decorate spelling issues. Depends upon `#cSpell.useCustomDecorations#`.\n\nThis setting is used to manually configure the text decoration. If it is not set, the following settings are used:\n- `#cSpell.textDecorationLine#` to pick the line type\n- `#cSpell.textDecorationStyle#` to pick the style\n- `#cSpell.textDecorationColor#` to set the color\n- `#cSpell.textDecorationThickness#` to set the thickness.\n\nSee: [text-decoration - CSS: Cascading Style Sheets, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration)\n\nFormat:  `<line> [style] <color> [thickness]`\n\n- line - `underline`, `overline`, see: [text-decoration-line, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-line)\n- style - `solid`, `wavy`, `dotted`, see: [text-decoration-style, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-style)\n- color - see: [text-decoration-color, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-color)\n- thickness - see: [text-decoration-thickness, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-thickness)\n\nExamples:\n- `underline green`\n- `underline dotted yellow 0.2rem`\n- `underline wavy #ff0c 1.5px` - Wavy underline with 1.5px thickness in semi-transparent yellow.\n\nTo change the ruler color, use `#cSpell.overviewRulerColor#`.","scope":"application","since":"4.0.0","type":"string"},"textDecorationColor":{"default":"#348feb","markdownDescription":"The decoration color for normal spelling issues.\n\nSee: [text-decoration - CSS: Cascading Style Sheets, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration)\n- color - see: [text-decoration-color, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-color)\n\nTo change the ruler color, use `#cSpell.overviewRulerColor#`.\n\nExamples:\n- `green`\n- `yellow`\n- `#ff0c`","scope":"application","since":"4.0.0","type":"string"},"textDecorationColorFlagged":{"default":"#f44","markdownDescription":"The decoration color for flagged issues.\n\nSee: [text-decoration - CSS: Cascading Style Sheets, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration)\n- color - see: [text-decoration-color, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-color)\n\nExamples:\n- `green`\n- `yellow`\n- `#ff0c`","scope":"application","since":"4.0.0","type":"string"},"textDecorationColorSuggestion":{"default":"#8884","markdownDescription":"The decoration color for spelling suggestions.\n\nSee: [text-decoration - CSS: Cascading Style Sheets, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration)\n- color - see: [text-decoration-color, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-color)\n\nCommon Format: `#RGBA` or `#RRGGBBAA` or `#RGB` or `#RRGGBB`\n\nExamples:\n- `green`\n- `yellow`\n- `#ff0c`","scope":"application","since":"4.0.2","type":"string"},"textDecorationLine":{"default":"underline","enum":["underline","overline","line-through"],"markdownDescription":"The CSS line type used to decorate issues.\n\nSee: [text-decoration - CSS: Cascading Style Sheets, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration)\n- line - `underline`, `overline`, see: [text-decoration-line, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-line)","scope":"application","since":"4.0.0","type":"string"},"textDecorationStyle":{"default":"dashed","enum":["solid","wavy","dotted","dashed","double"],"markdownDescription":"The CSS line style used to decorate issues.\n\nSee: [text-decoration - CSS: Cascading Style Sheets, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration)\n- style - `solid`, `wavy`, `dotted`, see: [text-decoration-style, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-style)","scope":"application","since":"4.0.0","type":"string"},"textDecorationThickness":{"default":"auto","markdownDescription":"The CSS line thickness used to decorate issues.\n\nSee: [text-decoration - CSS: Cascading Style Sheets, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration)\n- thickness - see: [text-decoration-thickness, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-thickness)\n\nExamples:\n- `auto`\n- `from-font`\n- `0.2rem`\n- `1.5px`\n- `10%`","scope":"application","since":"4.0.0","type":"string"}},"scope":"application","since":"4.0.0","type":"object"},"cSpell.overviewRulerColor":{"default":"#348feb80","markdownDescription":"The CSS color used to show issues in the ruler.\n\nDepends upon `#cSpell.useCustomDecorations#`.\n\nSee:\n- [`<color>` CSS: Cascading Style Sheets, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/color_value)\n- [CSS Colors, W3C Schools](https://www.w3schools.com/cssref/css_colors.php)\n- Hex colors\n- Use \"\" (empty string) to disable.\n\nExamples:\n- `green`\n- `DarkYellow`\n- `#ffff0080` - semi-transparent yellow.\n- `rgb(255 153 0 / 80%)`","scope":"application","since":"4.0.0","type":"string"},"cSpell.showInRuler":{"default":true,"markdownDescription":"Show spelling issues in the editor ruler.\n\nNote: This setting is only used when `#cSpell.useCustomDecorations#` is `true`.","scope":"application","since":"4.0.35","type":"boolean"},"cSpell.textDecoration":{"markdownDescription":"The CSS Style used to decorate spelling issues. Depends upon `#cSpell.useCustomDecorations#`.\n\nThis setting is used to manually configure the text decoration. If it is not set, the following settings are used:\n- `#cSpell.textDecorationLine#` to pick the line type\n- `#cSpell.textDecorationStyle#` to pick the style\n- `#cSpell.textDecorationColor#` to set the color\n- `#cSpell.textDecorationThickness#` to set the thickness.\n\nSee: [text-decoration - CSS: Cascading Style Sheets, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration)\n\nFormat:  `<line> [style] <color> [thickness]`\n\n- line - `underline`, `overline`, see: [text-decoration-line, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-line)\n- style - `solid`, `wavy`, `dotted`, see: [text-decoration-style, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-style)\n- color - see: [text-decoration-color, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-color)\n- thickness - see: [text-decoration-thickness, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-thickness)\n\nExamples:\n- `underline green`\n- `underline dotted yellow 0.2rem`\n- `underline wavy #ff0c 1.5px` - Wavy underline with 1.5px thickness in semi-transparent yellow.\n\nTo change the ruler color, use `#cSpell.overviewRulerColor#`.","scope":"application","since":"4.0.0","type":"string"},"cSpell.textDecorationColor":{"default":"#348feb","markdownDescription":"The decoration color for normal spelling issues.\n\nSee: [text-decoration - CSS: Cascading Style Sheets, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration)\n- color - see: [text-decoration-color, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-color)\n\nTo change the ruler color, use `#cSpell.overviewRulerColor#`.\n\nExamples:\n- `green`\n- `yellow`\n- `#ff0c`","scope":"application","since":"4.0.0","type":"string"},"cSpell.textDecorationColorFlagged":{"default":"#f44","markdownDescription":"The decoration color for flagged issues.\n\nSee: [text-decoration - CSS: Cascading Style Sheets, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration)\n- color - see: [text-decoration-color, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-color)\n\nExamples:\n- `green`\n- `yellow`\n- `#ff0c`","scope":"application","since":"4.0.0","type":"string"},"cSpell.textDecorationColorSuggestion":{"default":"#8884","markdownDescription":"The decoration color for spelling suggestions.\n\nSee: [text-decoration - CSS: Cascading Style Sheets, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration)\n- color - see: [text-decoration-color, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-color)\n\nCommon Format: `#RGBA` or `#RRGGBBAA` or `#RGB` or `#RRGGBB`\n\nExamples:\n- `green`\n- `yellow`\n- `#ff0c`","scope":"application","since":"4.0.2","type":"string"},"cSpell.textDecorationLine":{"default":"underline","enum":["underline","overline","line-through"],"markdownDescription":"The CSS line type used to decorate issues.\n\nSee: [text-decoration - CSS: Cascading Style Sheets, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration)\n- line - `underline`, `overline`, see: [text-decoration-line, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-line)","scope":"application","since":"4.0.0","type":"string"},"cSpell.textDecorationStyle":{"default":"dashed","enum":["solid","wavy","dotted","dashed","double"],"markdownDescription":"The CSS line style used to decorate issues.\n\nSee: [text-decoration - CSS: Cascading Style Sheets, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration)\n- style - `solid`, `wavy`, `dotted`, see: [text-decoration-style, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-style)","scope":"application","since":"4.0.0","type":"string"},"cSpell.textDecorationThickness":{"default":"auto","markdownDescription":"The CSS line thickness used to decorate issues.\n\nSee: [text-decoration - CSS: Cascading Style Sheets, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration)\n- thickness - see: [text-decoration-thickness, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-thickness)\n\nExamples:\n- `auto`\n- `from-font`\n- `0.2rem`\n- `1.5px`\n- `10%`","scope":"application","since":"4.0.0","type":"string"},"cSpell.useCustomDecorations":{"default":false,"markdownDescription":"Draw custom decorations on Spelling Issues.\n- `true` - Use custom decorations. - VS Code Diagnostic Severity Levels are not used.\n- `false` - Use the VS Code Diagnostic Collection to render spelling issues.\n\nNote: This setting overrides the VS Code Diagnostics setting: `#cSpell.diagnosticLevel#`.","scope":"application","since":"4.0.0","type":"boolean"}},"title":"Appearance","type":"object"},{"additionalProperties":false,"markdownDescription":"Legacy settings that have been deprecated or are not commonly used.","order":20,"properties":{"cSpell.allowCompoundWords":{"default":false,"markdownDescription":"Enable / Disable allowing word compounds.\n- `true` means `arraylength` would be ok\n- `false` means it would not pass.\n\nNote: this can also cause many misspelled words to seem correct.","scope":"resource","type":"boolean"},"cSpell.customFolderDictionaries":{"deprecated":true,"deprecationMessage":"- Use `#cSpell.customDictionaries#` instead.","items":{"anyOf":[{"additionalProperties":false,"properties":{"addWords":{"default":true,"markdownDescription":"Indicate if this custom dictionary should be used to store added words.","title":"Add Words to Dictionary","type":"boolean"},"description":{"markdownDescription":"Optional: A human readable description.","title":"Description of the Dictionary","type":"string"},"name":{"markdownDescription":"The reference name of the dictionary.\n\n\nExample: `My Words` or `custom`\n\n\nIf the name matches a pre-defined dictionary, it will override the pre-defined dictionary.\nIf you use: `typescript` it will replace the built-in TypeScript dictionary.","pattern":"^(?=[^!*,;{}[\\]~\\n]+$)(?=(.*\\w)).+$","title":"Name of Dictionary","type":"string"},"noSuggest":{"markdownDescription":"Indicate that suggestions should not come from this dictionary.\nWords in this dictionary are considered correct, but will not be\nused when making spell correction suggestions.\n\nNote: if a word is suggested by another dictionary, but found in\nthis dictionary, it will be removed from the set of\npossible suggestions.","type":"boolean"},"path":{"markdownDescription":"Define the path to the dictionary text file.\n\n**Note:** if path is `undefined` the `name`d dictionary is expected to be found\nin the `dictionaryDefinitions`.\n\nFile Format: Each line in the file is considered a dictionary entry.\n\nCase is preserved while leading and trailing space is removed.\n\nThe path should be absolute, or relative to the workspace.\n\n**Example:** relative to User's folder\n\n```json\n\"path\": \"~/dictionaries/custom_dictionary.txt\"\n```\n\n**Example:** relative to the `client` folder in a multi-root workspace\n\n```json\n\"path\": \"${workspaceFolder:client}/build/custom_dictionary.txt\"\n```\n\n**Example:** relative to the current workspace folder in a single-root workspace\n\n**Note:** this might not work as expected in a multi-root workspace since it is based upon the relative\nworkspace for the currently open file.\n\n```json\n\"path\": \"${workspaceFolder}/build/custom_dictionary.txt\"\n```\n\n**Example:** relative to the workspace folder in a single-root workspace or the first folder in\na multi-root workspace\n\n```json\n\"path\": \"./build/custom_dictionary.txt\"\n```","title":"Path to Dictionary Text File","type":"string"},"scope":{"anyOf":[{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},{"items":{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},"type":"array"}],"markdownDescription":"Options are\n- `user` - words that apply to all projects and workspaces\n- `workspace` - words that apply to the entire workspace\n- `folder` - words that apply to only a workspace folder","title":"Scope of dictionary"}},"required":["name"],"type":"object"},{"additionalProperties":false,"properties":{"addWords":{"default":true,"markdownDescription":"Indicate if this custom dictionary should be used to store added words.","title":"Add Words to Dictionary","type":"boolean"},"description":{"markdownDescription":"Optional: A human readable description.","title":"Description of the Dictionary","type":"string"},"ignoreForbiddenWords":{"markdownDescription":"Some dictionaries may contain forbidden words to prevent compounding from generating\nwords that are not valid in the language. These are often\nwords that are used in other languages or might be generated through compounding.\nThis setting allows flagged words to be ignored when checking the dictionary.\nThe effect is similar to the word not being in the dictionary.","type":"boolean"},"name":{"markdownDescription":"The reference name of the dictionary.\n\n\nExample: `My Words` or `custom`\n\n\nIf the name matches a pre-defined dictionary, it will override the pre-defined dictionary.\nIf you use: `typescript` it will replace the built-in TypeScript dictionary.","pattern":"^(?=[^!*,;{}[\\]~\\n]+$)(?=(.*\\w)).+$","title":"Name of Dictionary","type":"string"},"noSuggest":{"markdownDescription":"Indicate that suggestions should not come from this dictionary.\nWords in this dictionary are considered correct, but will not be\nused when making spell correction suggestions.\n\nNote: if a word is suggested by another dictionary, but found in\nthis dictionary, it will be removed from the set of\npossible suggestions.","type":"boolean"},"path":{"markdownDescription":"Define the path to the dictionary text file.\n\n**Note:** if path is `undefined` the `name`d dictionary is expected to be found\nin the `dictionaryDefinitions`.\n\nFile Format: Each line in the file is considered a dictionary entry.\n\nCase is preserved while leading and trailing space is removed.\n\nThe path should be absolute, or relative to the workspace.\n\n**Example:** relative to User's folder\n\n```json\n\"path\": \"~/dictionaries/custom_dictionary.txt\"\n```\n\n**Example:** relative to the `client` folder in a multi-root workspace\n\n```json\n\"path\": \"${workspaceFolder:client}/build/custom_dictionary.txt\"\n```\n\n**Example:** relative to the current workspace folder in a single-root workspace\n\n**Note:** this might not work as expected in a multi-root workspace since it is based upon the relative\nworkspace for the currently open file.\n\n```json\n\"path\": \"${workspaceFolder}/build/custom_dictionary.txt\"\n```\n\n**Example:** relative to the workspace folder in a single-root workspace or the first folder in\na multi-root workspace\n\n```json\n\"path\": \"./build/custom_dictionary.txt\"\n```","type":"string"},"scope":{"anyOf":[{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},{"items":{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},"type":"array"}],"markdownDescription":"Options are\n- `user` - words that apply to all projects and workspaces\n- `workspace` - words that apply to the entire workspace\n- `folder` - words that apply to only a workspace folder","title":"Scope of dictionary"}},"required":["name","path"],"type":"object"},{"markdownDescription":"This is the name of a dictionary.\n\nName Format:\n- Must contain at least 1 number or letter.\n- Spaces are allowed.\n- Leading and trailing space will be removed.\n- Names ARE case-sensitive.\n- Must not contain `*`, `!`, `;`, `,`, `{`, `}`, `[`, `]`, `~`.","pattern":"^(?=[^!*,;{}[\\]~\\n]+$)(?=(.*\\w)).+$","type":"string"}]},"markdownDescription":"Define custom dictionaries to be included by default for the folder.\nIf `addWords` is `true` words will be added to this dictionary.","scope":"resource","title":"Custom Folder Dictionaries","type":"array"},"cSpell.customUserDictionaries":{"deprecated":true,"deprecationMessage":"- Use `#cSpell.customDictionaries#` instead.","items":{"anyOf":[{"additionalProperties":false,"properties":{"addWords":{"default":true,"markdownDescription":"Indicate if this custom dictionary should be used to store added words.","title":"Add Words to Dictionary","type":"boolean"},"description":{"markdownDescription":"Optional: A human readable description.","title":"Description of the Dictionary","type":"string"},"name":{"markdownDescription":"The reference name of the dictionary.\n\n\nExample: `My Words` or `custom`\n\n\nIf the name matches a pre-defined dictionary, it will override the pre-defined dictionary.\nIf you use: `typescript` it will replace the built-in TypeScript dictionary.","pattern":"^(?=[^!*,;{}[\\]~\\n]+$)(?=(.*\\w)).+$","title":"Name of Dictionary","type":"string"},"noSuggest":{"markdownDescription":"Indicate that suggestions should not come from this dictionary.\nWords in this dictionary are considered correct, but will not be\nused when making spell correction suggestions.\n\nNote: if a word is suggested by another dictionary, but found in\nthis dictionary, it will be removed from the set of\npossible suggestions.","type":"boolean"},"path":{"markdownDescription":"Define the path to the dictionary text file.\n\n**Note:** if path is `undefined` the `name`d dictionary is expected to be found\nin the `dictionaryDefinitions`.\n\nFile Format: Each line in the file is considered a dictionary entry.\n\nCase is preserved while leading and trailing space is removed.\n\nThe path should be absolute, or relative to the workspace.\n\n**Example:** relative to User's folder\n\n```json\n\"path\": \"~/dictionaries/custom_dictionary.txt\"\n```\n\n**Example:** relative to the `client` folder in a multi-root workspace\n\n```json\n\"path\": \"${workspaceFolder:client}/build/custom_dictionary.txt\"\n```\n\n**Example:** relative to the current workspace folder in a single-root workspace\n\n**Note:** this might not work as expected in a multi-root workspace since it is based upon the relative\nworkspace for the currently open file.\n\n```json\n\"path\": \"${workspaceFolder}/build/custom_dictionary.txt\"\n```\n\n**Example:** relative to the workspace folder in a single-root workspace or the first folder in\na multi-root workspace\n\n```json\n\"path\": \"./build/custom_dictionary.txt\"\n```","title":"Path to Dictionary Text File","type":"string"},"scope":{"anyOf":[{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},{"items":{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},"type":"array"}],"markdownDescription":"Options are\n- `user` - words that apply to all projects and workspaces\n- `workspace` - words that apply to the entire workspace\n- `folder` - words that apply to only a workspace folder","title":"Scope of dictionary"}},"required":["name"],"type":"object"},{"additionalProperties":false,"properties":{"addWords":{"default":true,"markdownDescription":"Indicate if this custom dictionary should be used to store added words.","title":"Add Words to Dictionary","type":"boolean"},"description":{"markdownDescription":"Optional: A human readable description.","title":"Description of the Dictionary","type":"string"},"ignoreForbiddenWords":{"markdownDescription":"Some dictionaries may contain forbidden words to prevent compounding from generating\nwords that are not valid in the language. These are often\nwords that are used in other languages or might be generated through compounding.\nThis setting allows flagged words to be ignored when checking the dictionary.\nThe effect is similar to the word not being in the dictionary.","type":"boolean"},"name":{"markdownDescription":"The reference name of the dictionary.\n\n\nExample: `My Words` or `custom`\n\n\nIf the name matches a pre-defined dictionary, it will override the pre-defined dictionary.\nIf you use: `typescript` it will replace the built-in TypeScript dictionary.","pattern":"^(?=[^!*,;{}[\\]~\\n]+$)(?=(.*\\w)).+$","title":"Name of Dictionary","type":"string"},"noSuggest":{"markdownDescription":"Indicate that suggestions should not come from this dictionary.\nWords in this dictionary are considered correct, but will not be\nused when making spell correction suggestions.\n\nNote: if a word is suggested by another dictionary, but found in\nthis dictionary, it will be removed from the set of\npossible suggestions.","type":"boolean"},"path":{"markdownDescription":"Define the path to the dictionary text file.\n\n**Note:** if path is `undefined` the `name`d dictionary is expected to be found\nin the `dictionaryDefinitions`.\n\nFile Format: Each line in the file is considered a dictionary entry.\n\nCase is preserved while leading and trailing space is removed.\n\nThe path should be absolute, or relative to the workspace.\n\n**Example:** relative to User's folder\n\n```json\n\"path\": \"~/dictionaries/custom_dictionary.txt\"\n```\n\n**Example:** relative to the `client` folder in a multi-root workspace\n\n```json\n\"path\": \"${workspaceFolder:client}/build/custom_dictionary.txt\"\n```\n\n**Example:** relative to the current workspace folder in a single-root workspace\n\n**Note:** this might not work as expected in a multi-root workspace since it is based upon the relative\nworkspace for the currently open file.\n\n```json\n\"path\": \"${workspaceFolder}/build/custom_dictionary.txt\"\n```\n\n**Example:** relative to the workspace folder in a single-root workspace or the first folder in\na multi-root workspace\n\n```json\n\"path\": \"./build/custom_dictionary.txt\"\n```","type":"string"},"scope":{"anyOf":[{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},{"items":{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},"type":"array"}],"markdownDescription":"Options are\n- `user` - words that apply to all projects and workspaces\n- `workspace` - words that apply to the entire workspace\n- `folder` - words that apply to only a workspace folder","title":"Scope of dictionary"}},"required":["name","path"],"type":"object"},{"markdownDescription":"This is the name of a dictionary.\n\nName Format:\n- Must contain at least 1 number or letter.\n- Spaces are allowed.\n- Leading and trailing space will be removed.\n- Names ARE case-sensitive.\n- Must not contain `*`, `!`, `;`, `,`, `{`, `}`, `[`, `]`, `~`.","pattern":"^(?=[^!*,;{}[\\]~\\n]+$)(?=(.*\\w)).+$","type":"string"}]},"markdownDescription":"Define custom dictionaries to be included by default for the user.\nIf `addWords` is `true` words will be added to this dictionary.","scope":"application","title":"Custom User Dictionaries","type":"array"},"cSpell.customWorkspaceDictionaries":{"deprecated":true,"deprecationMessage":"- Use `#cSpell.customDictionaries#` instead.","items":{"anyOf":[{"additionalProperties":false,"properties":{"addWords":{"default":true,"markdownDescription":"Indicate if this custom dictionary should be used to store added words.","title":"Add Words to Dictionary","type":"boolean"},"description":{"markdownDescription":"Optional: A human readable description.","title":"Description of the Dictionary","type":"string"},"name":{"markdownDescription":"The reference name of the dictionary.\n\n\nExample: `My Words` or `custom`\n\n\nIf the name matches a pre-defined dictionary, it will override the pre-defined dictionary.\nIf you use: `typescript` it will replace the built-in TypeScript dictionary.","pattern":"^(?=[^!*,;{}[\\]~\\n]+$)(?=(.*\\w)).+$","title":"Name of Dictionary","type":"string"},"noSuggest":{"markdownDescription":"Indicate that suggestions should not come from this dictionary.\nWords in this dictionary are considered correct, but will not be\nused when making spell correction suggestions.\n\nNote: if a word is suggested by another dictionary, but found in\nthis dictionary, it will be removed from the set of\npossible suggestions.","type":"boolean"},"path":{"markdownDescription":"Define the path to the dictionary text file.\n\n**Note:** if path is `undefined` the `name`d dictionary is expected to be found\nin the `dictionaryDefinitions`.\n\nFile Format: Each line in the file is considered a dictionary entry.\n\nCase is preserved while leading and trailing space is removed.\n\nThe path should be absolute, or relative to the workspace.\n\n**Example:** relative to User's folder\n\n```json\n\"path\": \"~/dictionaries/custom_dictionary.txt\"\n```\n\n**Example:** relative to the `client` folder in a multi-root workspace\n\n```json\n\"path\": \"${workspaceFolder:client}/build/custom_dictionary.txt\"\n```\n\n**Example:** relative to the current workspace folder in a single-root workspace\n\n**Note:** this might not work as expected in a multi-root workspace since it is based upon the relative\nworkspace for the currently open file.\n\n```json\n\"path\": \"${workspaceFolder}/build/custom_dictionary.txt\"\n```\n\n**Example:** relative to the workspace folder in a single-root workspace or the first folder in\na multi-root workspace\n\n```json\n\"path\": \"./build/custom_dictionary.txt\"\n```","title":"Path to Dictionary Text File","type":"string"},"scope":{"anyOf":[{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},{"items":{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},"type":"array"}],"markdownDescription":"Options are\n- `user` - words that apply to all projects and workspaces\n- `workspace` - words that apply to the entire workspace\n- `folder` - words that apply to only a workspace folder","title":"Scope of dictionary"}},"required":["name"],"type":"object"},{"additionalProperties":false,"properties":{"addWords":{"default":true,"markdownDescription":"Indicate if this custom dictionary should be used to store added words.","title":"Add Words to Dictionary","type":"boolean"},"description":{"markdownDescription":"Optional: A human readable description.","title":"Description of the Dictionary","type":"string"},"ignoreForbiddenWords":{"markdownDescription":"Some dictionaries may contain forbidden words to prevent compounding from generating\nwords that are not valid in the language. These are often\nwords that are used in other languages or might be generated through compounding.\nThis setting allows flagged words to be ignored when checking the dictionary.\nThe effect is similar to the word not being in the dictionary.","type":"boolean"},"name":{"markdownDescription":"The reference name of the dictionary.\n\n\nExample: `My Words` or `custom`\n\n\nIf the name matches a pre-defined dictionary, it will override the pre-defined dictionary.\nIf you use: `typescript` it will replace the built-in TypeScript dictionary.","pattern":"^(?=[^!*,;{}[\\]~\\n]+$)(?=(.*\\w)).+$","title":"Name of Dictionary","type":"string"},"noSuggest":{"markdownDescription":"Indicate that suggestions should not come from this dictionary.\nWords in this dictionary are considered correct, but will not be\nused when making spell correction suggestions.\n\nNote: if a word is suggested by another dictionary, but found in\nthis dictionary, it will be removed from the set of\npossible suggestions.","type":"boolean"},"path":{"markdownDescription":"Define the path to the dictionary text file.\n\n**Note:** if path is `undefined` the `name`d dictionary is expected to be found\nin the `dictionaryDefinitions`.\n\nFile Format: Each line in the file is considered a dictionary entry.\n\nCase is preserved while leading and trailing space is removed.\n\nThe path should be absolute, or relative to the workspace.\n\n**Example:** relative to User's folder\n\n```json\n\"path\": \"~/dictionaries/custom_dictionary.txt\"\n```\n\n**Example:** relative to the `client` folder in a multi-root workspace\n\n```json\n\"path\": \"${workspaceFolder:client}/build/custom_dictionary.txt\"\n```\n\n**Example:** relative to the current workspace folder in a single-root workspace\n\n**Note:** this might not work as expected in a multi-root workspace since it is based upon the relative\nworkspace for the currently open file.\n\n```json\n\"path\": \"${workspaceFolder}/build/custom_dictionary.txt\"\n```\n\n**Example:** relative to the workspace folder in a single-root workspace or the first folder in\na multi-root workspace\n\n```json\n\"path\": \"./build/custom_dictionary.txt\"\n```","type":"string"},"scope":{"anyOf":[{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},{"items":{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},"type":"array"}],"markdownDescription":"Options are\n- `user` - words that apply to all projects and workspaces\n- `workspace` - words that apply to the entire workspace\n- `folder` - words that apply to only a workspace folder","title":"Scope of dictionary"}},"required":["name","path"],"type":"object"},{"markdownDescription":"This is the name of a dictionary.\n\nName Format:\n- Must contain at least 1 number or letter.\n- Spaces are allowed.\n- Leading and trailing space will be removed.\n- Names ARE case-sensitive.\n- Must not contain `*`, `!`, `;`, `,`, `{`, `}`, `[`, `]`, `~`.","pattern":"^(?=[^!*,;{}[\\]~\\n]+$)(?=(.*\\w)).+$","type":"string"}]},"markdownDescription":"Define custom dictionaries to be included by default for the workspace.\nIf `addWords` is `true` words will be added to this dictionary.","scope":"resource","title":"Custom Workspace Dictionaries","type":"array"},"cSpell.enabledLanguageIds":{"deprecated":true,"deprecationMessage":"- Use `#cSpell.enabledFileTypes#` instead.","items":{"markdownDescription":"A file type:\n- `*` - will match ALL file types.\n- `typescript`, `cpp`, `json`, etc.","pattern":"^(!?[-\\w_\\s]+)|(\\*)$","type":"string"},"markdownDescription":"Specify a list of file types to spell check. It is better to use `#cSpell.enabledFileTypes#` to Enable / Disable checking files types.","scope":"resource","title":"Enabled Language Ids","type":"array","uniqueItems":true},"cSpell.showStatus":{"default":true,"deprecationMessage":"No longer used.","markdownDescription":"Display the spell checker status on the status bar.","scope":"application","type":"boolean"},"cSpell.showStatusAlignment":{"default":"Right","deprecated":true,"deprecationMessage":"No longer supported.","enum":["Left","Right"],"enumDescriptions":["Left Side of Statusbar","Right Side of Statusbar"],"markdownDescription":"The side of the status bar to display the spell checker status.","scope":"application","type":"string"}},"title":"Legacy","type":"object"},{"additionalProperties":false,"markdownDescription":"Settings that control the performance of the spell checker.","order":4,"properties":{"cSpell.blockCheckingWhenAverageChunkSizeGreaterThan":{"default":80,"markdownDescription":"The maximum average length of chunks of text without word breaks.\n\n\nA chunk is the characters between absolute word breaks.\nAbsolute word breaks match: `/[\\s,{}[\\]]/`\n\n\n**Error Message:** _Average word length is too long._\n\n\nIf you are seeing this message, it means that the file contains mostly long lines\nwithout many word breaks.","scope":"language-overridable","type":"number"},"cSpell.blockCheckingWhenLineLengthGreaterThan":{"default":10000,"markdownDescription":"The maximum line length.\n\n\nBlock spell checking if lines are longer than the value given.\nThis is used to prevent spell checking generated files.\n\n\n**Error Message:** _Lines are too long._","scope":"language-overridable","type":"number"},"cSpell.blockCheckingWhenTextChunkSizeGreaterThan":{"default":500,"markdownDescription":"The maximum length of a chunk of text without word breaks.\n\n\nIt is used to prevent spell checking of generated files.\n\n\nA chunk is the characters between absolute word breaks.\nAbsolute word breaks match: `/[\\s,{}[\\]]/`, i.e. spaces or braces.\n\n\n**Error Message:** _Maximum word length exceeded._\n\n\nIf you are seeing this message, it means that the file contains a very long line\nwithout many word breaks.","scope":"language-overridable","type":"number"},"cSpell.checkLimit":{"default":500,"markdownDescription":"Set the maximum number of blocks of text to check.\nEach block is 1024 characters.","scope":"resource","type":"number"},"cSpell.spellCheckDelayMs":{"default":50,"markdownDescription":"Delay in ms after a document has changed before checking it for spelling errors.","scope":"application","type":"number"},"cSpell.suggestionsTimeout":{"default":400,"markdownDescription":"The maximum amount of time in milliseconds to generate suggestions for a word.","scope":"resource","type":"number"}},"title":"Performance","type":"object"},{"additionalProperties":false,"markdownDescription":"Settings that control how the spell checker reports and displays errors.","order":2,"properties":{"cSpell.autoFormatConfigFile":{"default":false,"markdownDescription":"If a `cspell` configuration file is updated, format the configuration file\nusing the VS Code Format Document Provider. This will cause the configuration\nfile to be saved prior to being updated.","scope":"window","title":"Auto Format Configuration File","type":"boolean"},"cSpell.diagnosticLevel":{"default":"Information","enum":["Error","Warning","Information","Hint"],"enumDescriptions":["Report Spelling Issues as Errors","Report Spelling Issues as Warnings","Report Spelling Issues as Information","Report Spelling Issues as Hints, will not show up in Problems"],"markdownDescription":"The Diagnostic Severity Level determines how issues are shown in the Problems Pane and within the document.\nSet the level to `Hint` to hide the issues from the Problems Pane.\n\nNote: `#cSpell.useCustomDecorations#` must be `false` to use VS Code Diagnostic Severity Levels.\n\nSee: [VS Code Diagnostic Severity Level](https://code.visualstudio.com/api/references/vscode-api#DiagnosticSeverity)","scope":"resource","title":"Set Diagnostic Reporting Level","type":"string"},"cSpell.diagnosticLevelFlaggedWords":{"enum":["Error","Warning","Information","Hint"],"enumDescriptions":["Report Spelling Issues as Errors","Report Spelling Issues as Warnings","Report Spelling Issues as Information","Report Spelling Issues as Hints, will not show up in Problems"],"markdownDescription":"Flagged word issues found by the spell checker are marked with a Diagnostic Severity Level. This affects the color of the squiggle.\nBy default, flagged words will use the same diagnostic level as general issues. Use this setting to customize them.\n\nSee: [VS Code Diagnostic Severity Level](https://code.visualstudio.com/api/references/vscode-api#DiagnosticSeverity)","scope":"resource","since":"4.0.0","title":"Set Diagnostic Reporting Level for Flagged Words","type":"string"},"cSpell.enabledNotifications":{"additionalProperties":false,"default":{"Average Word Length too Long":true,"Lines too Long":true,"Maximum Word Length Exceeded":true},"markdownDescription":"Control which notifications are displayed.","properties":{"Average Word Length too Long":{"markdownDescription":"Enable notifications if the average word size is too high.","type":"boolean"},"Lines too Long":{"markdownDescription":"Enable notifications if the line is too long.","type":"boolean"},"Maximum Word Length Exceeded":{"markdownDescription":"Enable notifications if the maximum word length is exceeded.","type":"boolean"}},"scope":"resource","since":"4.0.41","title":"Enabled Notifications","type":"object"},"cSpell.hideAddToDictionaryCodeActions":{"default":false,"markdownDescription":"Hide the options to add words to dictionaries or settings.","scope":"resource","type":"boolean"},"cSpell.hideIssuesWhileTyping":{"default":"Word","enum":["Off","Word","Line","Document"],"enumDescriptions":["Show issues while typing","Hide issues while typing in the current word","Hide issues while typing on the line","Hide all issues while typing in the document"],"markdownDescription":"Control how spelling issues are displayed while typing.\nSee: `#cSpell.revealIssuesAfterDelayMS#` to control when issues are revealed.","scope":"application","since":"4.0.0","title":"Hide Issues While Typing","type":"string"},"cSpell.maxDuplicateProblems":{"default":20,"markdownDescription":"The maximum number of times the same word can be flagged as an error in a file.","scope":"resource","type":"number"},"cSpell.maxNumberOfProblems":{"default":100,"markdownDescription":"Controls the maximum number of spelling errors per document.","scope":"resource","type":"number"},"cSpell.minWordLength":{"default":4,"markdownDescription":"The minimum length of a word before checking it against a dictionary.","scope":"resource","type":"number"},"cSpell.numSuggestions":{"default":8,"markdownDescription":"Controls the number of suggestions shown.","scope":"resource","type":"number"},"cSpell.revealIssuesAfterDelayMS":{"default":1500,"markdownDescription":"Reveal hidden issues related to `#cSpell.hideIssuesWhileTyping#` after a delay in milliseconds.","scope":"application","since":"4.0.0","title":"Reveal Issues After a Delay in Milliseconds","type":"number"},"cSpell.showAutocompleteDirectiveSuggestions":{"default":true,"markdownDescription":"Show CSpell in-document directives as you type.\n\n**Note:** VS Code must be restarted for this setting to take effect.","scope":"language-overridable","type":"boolean"},"cSpell.showCommandsInEditorContextMenu":{"default":true,"markdownDescription":"Show Spell Checker actions in Editor Context Menu","scope":"application","type":"boolean"},"cSpell.showSuggestionsLinkInEditorContextMenu":{"default":true,"markdownDescription":"Show Spelling Suggestions link in the top level context menu.","scope":"application","type":"boolean"},"cSpell.suggestionMenuType":{"default":"quickPick","enum":["quickPick","quickFix"],"enumDescriptions":["Suggestions will appear as a drop down at the top of the IDE. (Best choice for Vim Key Bindings)","Suggestions will appear inline near the word, inside the text editor."],"markdownDescription":"The type of menu used to display spelling suggestions.","scope":"resource","type":"string"},"cSpell.suggestionNumChanges":{"default":3,"markdownDescription":"The maximum number of changes allowed on a word to be considered a suggestions.\n\nFor example, appending an `s` onto `example` -> `examples` is considered 1 change.\n\nRange: between 1 and 5.","scope":"resource","type":"number"},"cSpell.validateDirectives":{"markdownDescription":"Verify that the in-document directives are correct.","scope":"window","type":"boolean"}},"title":"Reporting and Display","type":"object"}],"terminal":{"profiles":[{"title":"Spell Checker REPL","id":"cSpell.terminal-profile"}]}},"workspaces":["tools/build-tools","packages/utils-logger","packages/utils-disposables","packages/json-rpc-api","packages/webview-rpc","packages/webview-api","packages/webview-ui","packages/__locale-resolver","packages/__utils","packages/_server","packages/_serverPatternMatcher","packages/client","packages/_integrationTests","scripts","website"],"scripts":{"build-package-schema":"npm --workspace=code-spell-checker-server run build-schema && build-tools update-package-schema && npm run prettier:fix-schema","build":"npm run build:workspaces && npm run build:schema","build:docs":"npm run gen-docs","build:all":"npm run build && npm run build:docs","build:readme":"inject-markdown README.md && prettier -w README.md && inject-markdown website && prettier -w website","build:schema":"npm run build-package-schema","build:workspaces":"npm --workspaces --if-present run build","build:extension":"npm run package-extension","clean":"npm --workspaces --if-present run clean && shx rm -rf \"packages/*/node_modules\" \"modules/*/node_modules\" \"modules/**/dist\" ","build-production":"npm --workspaces --if-present run build-production","build-release":"npm run build && npm run package-extension","build-website":"cd website && npm i && npm run build-site","gen-docs":"npm --if-present -ws run gen-docs","package-extension":"vsce package -o ./build","prettier:check":"prettier . -c","prettier:fix":"npm run prettier:check -- -w","prettier:fix-schema":"prettier -w \"**/*.schema.json\"","test-vsce-build":"shx mkdir -p temp && vsce package -o ./temp/code-spell-checker.vsix","remove-test-files":"shx rm -rf \"packages/*/{out,dist,settingsViewer}/**/*.test.*js\"","vscode:prepublish":"npm run build-production && npm run remove-test-files","lint":"npm run lint:eslint && npm run prettier:fix","lint:eslint":"eslint . --fix --cache","lint-docs":"prettier -w website","lint-docs-ci":"prettier -c website","test-client-integration":"npm --workspace=@internal/integration-tests run test-integration","test":"npm --workspaces --if-present run test && echo OK","update-cspell":"npx npm-check-updates --root -ws --target semver -u \"cspell*\" \"@cspell/*\"  && npm i","update-packages":"npm run update:packages:root && npm run update:packages:website","update:packages:root":"npx npm-check-updates --root -ws --target semver -u && npm i","update:packages:website":"cd website && npm run update-packages","postinstall":"patch-package"},"devDependencies":{"@eslint/js":"^9.25.0","@tsconfig/node20":"^20.1.5","@types/node":"^20.17.30","@types/vscode":"1.90.0","@types/vscode-webview":"^1.57.5","@vitest/coverage-istanbul":"^3.1.1","@vscode/vsce":"^3.3.2","ansi-styles":"^6.2.1","chokidar-cli":"^3.0.0","concurrently":"^9.1.2","esbuild":"^0.25.2","eslint":"^9.25.0","eslint-plugin-n":"^17.17.0","eslint-plugin-simple-import-sort":"^12.1.1","eslint-plugin-unicorn":"^58.0.0","globals":"^16.0.0","inject-markdown":"^3.1.4","jest-mock-vscode":"^4.3.1","ovsx":"^0.10.2","patch-package":"^8.0.0","prettier":"^3.5.3","prettier-plugin-svelte":"^3.3.3","rollup":"^4.40.0","rollup-plugin-dts":"^6.2.1","shx":"^0.4.0","tsup":"^8.4.0","typescript":"~5.8.3","typescript-eslint":"^8.30.1","vite":"^6.3.2","vitest":"^3.1.1"},"dependencies":{"@cspell/cspell-bundled-dicts":"^8.19.1","@cspell/cspell-types":"^8.19.1","@cspell/dict-cspell-bundle":"^1.0.46","cspell":"^8.19.1","regexp-worker":"^3.0.0"},"vsce":{}},"location":{"$mid":1,"path":"/home/dan/.vscode-oss/extensions/streetsidesoftware.code-spell-checker-4.0.47-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"Street Side Software","metadata":{"installedTimestamp":1748772457818,"pinned":false,"source":"gallery","id":"f6dbd813-b0a0-42c1-90ea-10dde9d925a7","publisherId":"67600ca7-88fb-4104-9f7e-dd51c00facf2","publisherDisplayName":"Street Side Software","targetPlatform":"universal","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":6085726},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"bradlc.vscode-tailwindcss","uuid":"4db62a7c-7d70-419c-96d2-6c3a4dc77ea5"},"manifest":{"name":"vscode-tailwindcss","version":"0.14.21","displayName":"Tailwind CSS IntelliSense","description":"Intelligent Tailwind CSS tooling for VS Code","author":"Brad Cornes <hello@bradley.dev>","license":"MIT","homepage":"https://github.com/tailwindlabs/tailwindcss-intellisense","bugs":{"url":"https://github.com/tailwindlabs/tailwindcss-intellisense/issues","email":"hello@bradley.dev"},"repository":{"type":"git","url":"https://github.com/tailwindlabs/tailwindcss-intellisense.git"},"publisher":"bradlc","keywords":["tailwind","tailwindcss","css","intellisense","autocomplete","vscode"],"engines":{"vscode":"^1.67.0"},"categories":["Linters","Other"],"galleryBanner":{"color":"#f9fafb"},"icon":"media/icon.png","activationEvents":["onStartupFinished"],"main":"dist/extension.js","capabilities":{"virtualWorkspaces":false},"contributes":{"languages":[{"id":"tailwindcss","aliases":["Tailwind CSS"],"configuration":"./tailwindcss.language.configuration.json","icon":{"light":"media/icon.png","dark":"media/icon.png"}}],"commands":[{"command":"tailwindCSS.showOutput","title":"Tailwind CSS: Show Output","enablement":"tailwindCSS.hasOutputChannel"},{"command":"tailwindCSS.sortSelection","title":"Tailwind CSS: Sort Selection","enablement":"editorHasSelection && (resourceScheme == file || resourceScheme == vscode-remote) && tailwindCSS.activeTextEditorSupportsClassSorting"}],"grammars":[{"language":"tailwindcss","scopeName":"source.css.tailwind","path":"./syntaxes/source.css.tailwind.tmLanguage.json","tokenTypes":{"meta.function.url string.quoted":"other"}},{"scopeName":"tailwindcss.at-rules.injection","path":"./syntaxes/at-rules.tmLanguage.json","injectTo":["source.css","source.vue","source.svelte","text.html","source.gjs","source.gts"]},{"scopeName":"tailwindcss.at-rules.scss.injection","path":"./syntaxes/at-rules.scss.tmLanguage.json","injectTo":["source.css.scss"]},{"scopeName":"tailwindcss.at-rules.postcss.injection","path":"./syntaxes/at-rules.postcss.tmLanguage.json","injectTo":["source.css.postcss"]},{"scopeName":"tailwindcss.at-apply.injection","path":"./syntaxes/at-apply.tmLanguage.json","injectTo":["source.css","source.css.postcss","source.vue","source.svelte","text.html","source.gjs","source.gts"]},{"scopeName":"tailwindcss.theme-fn.injection","path":"./syntaxes/theme-fn.tmLanguage.json","injectTo":["source.css","source.css.postcss","source.vue","source.svelte","text.html","source.gjs","source.gts"]},{"scopeName":"tailwindcss.screen-fn.injection","path":"./syntaxes/screen-fn.tmLanguage.json","injectTo":["source.css","source.css.postcss","source.vue","source.svelte","text.html","source.gjs","source.gts"]}],"configuration":{"title":"Tailwind CSS IntelliSense","properties":{"tailwindCSS.emmetCompletions":{"type":"boolean","default":false,"markdownDescription":"Enable class name completions when using Emmet-style syntax, for example `div.bg-red-500.uppercase`"},"tailwindCSS.includeLanguages":{"type":"object","additionalProperties":{"type":"string"},"default":{},"markdownDescription":"Enable features in languages that are not supported by default. Add a mapping here between the new language and an already supported language.\n E.g.: `{\"plaintext\": \"html\"}`"},"tailwindCSS.files.exclude":{"type":"array","items":{"type":"string"},"default":["**/.git/**","**/node_modules/**","**/.hg/**","**/.svn/**"],"markdownDescription":"Configure glob patterns to exclude from all IntelliSense features. Inherits all glob patterns from the `#files.exclude#` setting."},"tailwindCSS.classAttributes":{"type":"array","items":{"type":"string"},"default":["class","className","ngClass","class:list"],"markdownDescription":"The HTML attributes for which to provide class completions, hover previews, linting etc."},"tailwindCSS.classFunctions":{"type":"array","items":{"type":"string"},"default":[],"markdownDescription":"The function or tagged template literal names for which to provide class completions, hover previews, linting etc."},"tailwindCSS.suggestions":{"type":"boolean","default":true,"markdownDescription":"Enable autocomplete suggestions.","scope":"language-overridable"},"tailwindCSS.hovers":{"type":"boolean","default":true,"markdownDescription":"Enable hovers.","scope":"language-overridable"},"tailwindCSS.codeActions":{"type":"boolean","default":true,"markdownDescription":"Enable code actions.","scope":"language-overridable"},"tailwindCSS.codeLens":{"type":"boolean","default":true,"markdownDescription":"Enable code lens.","scope":"language-overridable"},"tailwindCSS.colorDecorators":{"type":"boolean","default":true,"markdownDescription":"Controls whether the editor should render inline color decorators for Tailwind CSS classes and helper functions.","scope":"language-overridable"},"tailwindCSS.validate":{"type":"boolean","default":true,"markdownDescription":"Enable linting. Rules can be configured individually using the `tailwindcss.lint.*` settings","scope":"language-overridable"},"tailwindCSS.lint.cssConflict":{"type":"string","enum":["ignore","warning","error"],"default":"warning","markdownDescription":"Class names on the same HTML element which apply the same CSS property or properties","scope":"language-overridable"},"tailwindCSS.lint.invalidApply":{"type":"string","enum":["ignore","warning","error"],"default":"error","markdownDescription":"Unsupported use of the [`@apply` directive](https://tailwindcss.com/docs/functions-and-directives/#apply)","scope":"language-overridable"},"tailwindCSS.lint.invalidScreen":{"type":"string","enum":["ignore","warning","error"],"default":"error","markdownDescription":"Unknown screen name used with the [`@screen` directive](https://tailwindcss.com/docs/functions-and-directives/#screen)","scope":"language-overridable"},"tailwindCSS.lint.invalidVariant":{"type":"string","enum":["ignore","warning","error"],"default":"error","markdownDescription":"Unknown variant name used with the [`@variants` directive](https://tailwindcss.com/docs/functions-and-directives/#variants)","scope":"language-overridable"},"tailwindCSS.lint.invalidConfigPath":{"type":"string","enum":["ignore","warning","error"],"default":"error","markdownDescription":"Unknown or invalid path used with the [`theme` helper](https://tailwindcss.com/docs/functions-and-directives/#theme)","scope":"language-overridable"},"tailwindCSS.lint.invalidTailwindDirective":{"type":"string","enum":["ignore","warning","error"],"default":"error","markdownDescription":"Unknown value used with the [`@tailwind` directive](https://tailwindcss.com/docs/functions-and-directives/#tailwind)","scope":"language-overridable"},"tailwindCSS.lint.recommendedVariantOrder":{"type":"string","enum":["ignore","warning","error"],"default":"warning","markdownDescription":"Class variants not in the recommended order (applies in [JIT mode](https://tailwindcss.com/docs/just-in-time-mode) only)","scope":"language-overridable"},"tailwindCSS.lint.usedBlocklistedClass":{"type":"string","enum":["ignore","warning","error"],"default":"warning","markdownDescription":"Usage of class names that have been blocklisted via `@source not inline(…)`","scope":"language-overridable"},"tailwindCSS.experimental.classRegex":{"type":"array","scope":"language-overridable"},"tailwindCSS.experimental.configFile":{"type":["null","string","object"],"default":null,"markdownDescription":"Manually specify the Tailwind config file or files that should be read to provide IntelliSense features. Can either be a single string value, or an object where each key is a config file path and each value is a glob or array of globs representing the set of files that the config file applies to."},"tailwindCSS.showPixelEquivalents":{"type":"boolean","default":true,"markdownDescription":"Show `px` equivalents for `rem` CSS values."},"tailwindCSS.rootFontSize":{"type":"number","default":16,"markdownDescription":"Root font size in pixels. Used to convert `rem` CSS values to their `px` equivalents. See `#tailwindCSS.showPixelEquivalents#`."},"tailwindCSS.inspectPort":{"type":["number","null"],"default":null,"markdownDescription":"Enable the Node.js inspector agent for the language server and listen on the specified port."},"tailwindcss-intellisense.trace.server":{"scope":"window","type":"string","enum":["off","messages","verbose"],"default":"off","description":"Traces the communication between VS Code and the Tailwind CSS Language Server."}}}},"scripts":{"_esbuild":"node ../../esbuild.mjs src/extension.ts src/server.ts src/cssServer.ts --outdir=dist","dev":"concurrently --raw --kill-others \"pnpm run watch\" \"pnpm run check --watch\"","watch":"pnpm run clean && pnpm run _esbuild --watch","build":"pnpm run check && pnpm run clean && pnpm run _esbuild --minify && move-file dist/server.js dist/tailwindServer.js && move-file dist/cssServer.js dist/tailwindModeServer.js","package":"vsce package --no-dependencies","publish":"vsce publish --no-dependencies","copy:notices":"cp ../tailwindcss-language-server/ThirdPartyNotices.txt ./dist/ThirdPartyNotices.txt","vscode:prepublish":"pnpm run build && pnpm run copy:notices","clean":"rimraf dist","check":"tsc --noEmit"},"devDependencies":{"@tailwindcss/language-server":"workspace:*","@tailwindcss/language-service":"workspace:*","@types/braces":"3.0.1","@types/picomatch":"^2.3.3","@types/vscode":"1.65.0","@vscode/vsce":"2.21.1","braces":"3.0.3","color-name":"1.1.4","concurrently":"9.1.2","esbuild":"^0.25.5","minimist":"^1.2.8","move-file-cli":"3.0.0","normalize-path":"3.0.0","picomatch":"^4.0.1","rimraf":"3.0.2","typescript":"5.8.3","vscode-languageclient":"8.0.2"}},"location":{"$mid":1,"path":"/home/dan/.vscode-oss/extensions/bradlc.vscode-tailwindcss-0.14.21-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"bradlc","metadata":{"isApplicationScoped":false,"isMachineScoped":false,"isBuiltin":false,"installedTimestamp":1749197528202,"pinned":false,"source":"gallery","id":"4db62a7c-7d70-419c-96d2-6c3a4dc77ea5","publisherId":"84722833-669b-4c7d-920e-b60e43fae19a","publisherDisplayName":"bradlc","targetPlatform":"universal","updated":true,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"preRelease":false,"size":6858235},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"gruntfuggly.todo-tree","uuid":"261cac81-cd7b-4555-bb41-0c2d2bcd3e70"},"manifest":{"name":"todo-tree","displayName":"Todo Tree","description":"Show TODO, FIXME, etc. comment tags in a tree view","keywords":["todo","task","tasklist","multi-root ready"],"version":"0.0.215","license":"MIT","icon":"resources/todo-tree.png","publisher":"Gruntfuggly","engines":{"vscode":"^1.46.0"},"repository":"https://github.com/Gruntfuggly/todo-tree","bugs":{"url":"https://github.com/Gruntfuggly/todo-tree/issues","email":"gruntfuggly@googlemail.com"},"scripts":{"test":"./node_modules/node-qunit/bin/cli.js -c src/utils.js -t test/tests.js","vscode:prepublish":"./buildCodiconNames.js && webpack --mode production","webpack":"webpack --mode development","webpack-dev":"webpack --mode development --watch"},"categories":["Other"],"activationEvents":["onStartupFinished"],"main":"./dist/extension","contributes":{"viewsContainers":{"activitybar":[{"id":"todo-tree-container","title":"TODOs","icon":"resources/todo-tree-container.svg"}]},"views":{"todo-tree-container":[{"id":"todo-tree-view","name":"TODOs","when":"!todo-tree-is-empty"}]},"menus":{"view/title":[{"command":"todo-tree.exportTree","when":"view =~ /todo-tree/ && todo-tree-show-export-button == true","group":"navigation@1"},{"command":"todo-tree.reveal","when":"view =~ /todo-tree/ && todo-tree-tags-only == false && todo-tree-show-reveal-button == true","group":"navigation@2"},{"command":"todo-tree.scanOpenFilesOnly","when":"view =~ /todo-tree/ && todo-tree-scan-mode == 'workspace only' && todo-tree-show-scan-mode-button == true","group":"navigation@3"},{"command":"todo-tree.scanCurrentFileOnly","when":"view =~ /todo-tree/ && todo-tree-scan-mode == 'open files' && todo-tree-show-scan-mode-button == true","group":"navigation@3"},{"command":"todo-tree.scanWorkspaceAndOpenFiles","when":"view =~ /todo-tree/ && todo-tree-scan-mode == 'current file' && todo-tree-show-scan-mode-button == true","group":"navigation@3"},{"command":"todo-tree.scanWorkspaceOnly","when":"view =~ /todo-tree/ && todo-tree-scan-mode == 'workspace' && todo-tree-show-scan-mode-button == true","group":"navigation@3"},{"command":"todo-tree.showFlatView","when":"view =~ /todo-tree/ && todo-tree-flat == false && todo-tree-tags-only == false && todo-tree-show-view-style-button == true","group":"navigation@4"},{"command":"todo-tree.showTagsOnlyView","when":"view =~ /todo-tree/ && todo-tree-flat == true && todo-tree-tags-only == false && todo-tree-show-view-style-button == true","group":"navigation@4"},{"command":"todo-tree.showTreeView","when":"view =~ /todo-tree/ && todo-tree-flat == false && todo-tree-tags-only == true && todo-tree-show-view-style-button == true","group":"navigation@4"},{"command":"todo-tree.groupByTag","when":"view =~ /todo-tree/ && todo-tree-grouped-by-tag == false && todo-tree-show-group-by-tag-button == true","group":"navigation@5"},{"command":"todo-tree.ungroupByTag","when":"view =~ /todo-tree/ && todo-tree-grouped-by-tag == true && todo-tree-show-group-by-tag-button == true","group":"navigation@5"},{"command":"todo-tree.groupBySubTag","when":"view =~ /todo-tree/ && todo-tree-grouped-by-sub-tag == false && todo-tree-show-group-by-sub-tag-button == true && todo-tree-has-sub-tags == true","group":"navigation@6"},{"command":"todo-tree.ungroupBySubTag","when":"view =~ /todo-tree/ && todo-tree-grouped-by-sub-tag == true && todo-tree-show-group-by-sub-tag-button == true && todo-tree-has-sub-tags == true","group":"navigation@6"},{"command":"todo-tree.filter","when":"view =~ /todo-tree/ && todo-tree-filtered == false && todo-tree-show-filter-button == true","group":"navigation@7"},{"command":"todo-tree.filterClear","when":"view =~ /todo-tree/ && todo-tree-filtered == true && todo-tree-show-filter-button == true","group":"navigation@7"},{"command":"todo-tree.refresh","when":"view =~ /todo-tree/ && todo-tree-show-refresh-button == true","group":"navigation@8"},{"command":"todo-tree.expand","when":"view =~ /todo-tree/ && todo-tree-expanded == false && todo-tree-show-expand-button == true","group":"navigation@9"},{"command":"todo-tree.collapse","when":"view =~ /todo-tree/ && todo-tree-expanded == true && todo-tree-show-expand-button == true","group":"navigation@9"}],"view/item/context":[{"command":"todo-tree.filter","when":"view =~ /todo-tree/ && todo-tree-filtered == false","group":"1-filters@1"},{"command":"todo-tree.filterClear","when":"view =~ /todo-tree/ && todo-tree-global-filter-active","group":"1-filters@2"},{"command":"todo-tree.excludeThisFolder","when":"view =~ /todo-tree/ && viewItem == folder","group":"1-filters@3"},{"command":"todo-tree.excludeThisFile","when":"view =~ /todo-tree/ && viewItem == file","group":"1-filters@4"},{"command":"todo-tree.showOnlyThisFolder","when":"view =~ /todo-tree/ && viewItem == folder","group":"1-filters@5"},{"command":"todo-tree.showOnlyThisFolderAndSubfolders","when":"view =~ /todo-tree/ && viewItem == folder","group":"1-filters@6"},{"command":"todo-tree.removeFilter","when":"view =~ /todo-tree/ && todo-tree-folder-filter-active","group":"1-filters@7"},{"command":"todo-tree.resetAllFilters","when":"view =~ /todo-tree/ && todo-tree-folder-filter-active","group":"1-filters@8"},{"command":"todo-tree.toggleItemCounts","when":"view =~ /todo-tree/","group":"2-toggles"},{"command":"todo-tree.toggleBadges","when":"view =~ /todo-tree/","group":"2-toggles"},{"command":"todo-tree.toggleCompactFolders","when":"view =~/todo-tree/ && todo-tree-can-toggle-compact-folders == true","group":"2-toggles"},{"command":"todo-tree.scanOpenFilesOnly","when":"view =~ /todo-tree/ && todo-tree-scan-mode != 'open files'","group":"3-view"},{"command":"todo-tree.scanCurrentFileOnly","when":"view =~ /todo-tree/ && todo-tree-scan-mode != 'current file'","group":"3-view"},{"command":"todo-tree.scanWorkspaceAndOpenFiles","when":"view =~ /todo-tree/ && todo-tree-scan-mode != 'workspace'","group":"3-view"},{"command":"todo-tree.scanWorkspaceOnly","when":"view =~ /todo-tree/ && todo-tree-scan-mode != 'workspace only'","group":"3-view"},{"command":"todo-tree.expand","when":"view =~ /todo-tree/ && todo-tree-expanded == false","group":"4-tree@1"},{"command":"todo-tree.collapse","when":"view =~ /todo-tree/ && todo-tree-expanded == true","group":"4-tree@1"},{"command":"todo-tree.showFlatView","when":"view =~ /todo-tree/ && todo-tree-flat == false","group":"4-tree@2"},{"command":"todo-tree.showTagsOnlyView","when":"view =~ /todo-tree/ && todo-tree-tags-only == false","group":"4-tree@3"},{"command":"todo-tree.showTreeView","when":"view =~ /todo-tree/ && todo-tree-flat == true || todo-tree-tags-only == true","group":"4-tree@4"},{"command":"todo-tree.groupByTag","when":"view =~ /todo-tree/ && todo-tree-grouped-by-tag == false","group":"4-tree@5"},{"command":"todo-tree.ungroupByTag","when":"view =~ /todo-tree/ && todo-tree-grouped-by-tag == true","group":"4-tree@5"},{"command":"todo-tree.groupBySubTag","when":"view =~ /todo-tree/ && todo-tree-grouped-by-sub-tag == false && todo-tree-has-sub-tags == true","group":"4-tree@6"},{"command":"todo-tree.ungroupBySubTag","when":"view =~ /todo-tree/ && todo-tree-grouped-by-sub-tag == true && todo-tree-has-sub-tags == true","group":"4-tree@6"},{"command":"todo-tree.exportTree","when":"view =~/todo-tree/","group":"5-misc1"},{"command":"todo-tree.reveal","when":"view =~/todo-tree/","group":"6-misc2"}],"commandPalette":[{"command":"todo-tree.showOnlyThisFolder","when":"false"},{"command":"todo-tree.showOnlyThisFolderAndSubfolders","when":"false"},{"command":"todo-tree.excludeThisFolder","when":"false"},{"command":"todo-tree.excludeThisFile","when":"false"}]},"commands":[{"command":"todo-tree.showFlatView","title":"Show Flat View","category":"Todo Tree","icon":"$(list-unordered)"},{"command":"todo-tree.showTagsOnlyView","title":"Show Tags Only View","category":"Todo Tree","icon":"$(list-flat)"},{"command":"todo-tree.showTreeView","title":"Show Tree View","category":"Todo Tree","icon":"$(list-tree)"},{"command":"todo-tree.refresh","title":"Refresh","category":"Todo Tree","icon":"$(refresh)"},{"command":"todo-tree.expand","title":"Expand Tree","category":"Todo Tree","icon":"$(expand-all)","enablement":"todo-tree-collapsible"},{"command":"todo-tree.collapse","title":"Collapse Tree","category":"Todo Tree","icon":"$(collapse-all)","enablement":"todo-tree-collapsible"},{"command":"todo-tree.filter","title":"Filter Tree","category":"Todo Tree","icon":"$(filter)"},{"command":"todo-tree.filterClear","title":"Clear Tree Filter","category":"Todo Tree","icon":"$(clear-all)"},{"command":"todo-tree.groupByTag","title":"Group by Tag","category":"Todo Tree","icon":"$(tag)"},{"command":"todo-tree.ungroupByTag","title":"Ungroup by Tag","category":"Todo Tree","icon":"$(unfold)"},{"command":"todo-tree.groupBySubTag","title":"Group by Sub Tag","category":"Todo Tree","icon":"$(chrome-restore)"},{"command":"todo-tree.ungroupBySubTag","title":"Ungroup by Sub Tag","category":"Todo Tree","icon":"$(chrome-maximize)"},{"command":"todo-tree.scanOpenFilesOnly","title":"Scan Open Files Only","category":"Todo Tree","icon":"$(files)"},{"command":"todo-tree.scanCurrentFileOnly","title":"Scan Current File Only","category":"Todo Tree","icon":"$(symbol-file)"},{"command":"todo-tree.scanWorkspaceAndOpenFiles","title":"Scan Workspace And Open Files","category":"Todo Tree","icon":"$(folder-active)"},{"command":"todo-tree.scanWorkspaceOnly","title":"Scan Workspace Only","category":"Todo Tree","icon":"$(folder)"},{"command":"todo-tree.addTag","title":"Add Tag","category":"Todo Tree"},{"command":"todo-tree.removeTag","title":"Remove Tag","category":"Todo Tree"},{"command":"todo-tree.exportTree","title":"Export Tree","category":"Todo Tree","icon":"$(save)"},{"command":"todo-tree.showOnlyThisFolder","title":"Only Show This Folder","category":"Todo Tree","icon":"$(filter)"},{"command":"todo-tree.showOnlyThisFolderAndSubfolders","title":"Only Show This Folder And Subfolders","category":"Todo Tree","icon":"$(filter)"},{"command":"todo-tree.switchScope","title":"Switch Scope","category":"Todo Tree","icon":"$(filter)"},{"command":"todo-tree.excludeThisFolder","title":"Hide This Folder","category":"Todo Tree","icon":"$(filter)"},{"command":"todo-tree.excludeThisFile","title":"Hide This File","category":"Todo Tree","icon":"$(filter)"},{"command":"todo-tree.removeFilter","title":"Remove Filter","category":"Todo Tree","icon":"$(filter)"},{"command":"todo-tree.resetAllFilters","title":"Reset All Filters","category":"Todo Tree","icon":"$(clear-all)"},{"command":"todo-tree.reveal","title":"Reveal Current File In Tree","category":"Todo Tree","icon":"$(location)"},{"command":"todo-tree.resetCache","title":"Reset Cache","category":"Todo Tree"},{"command":"todo-tree.toggleItemCounts","title":"Toggle Item Counts","category":"Todo Tree"},{"command":"todo-tree.toggleBadges","title":"Toggle Badges","category":"Todo Tree"},{"command":"todo-tree.toggleCompactFolders","title":"Toggle Compact Folders","category":"Todo Tree"}],"configuration":[{"title":"General","order":1,"type":"object","properties":{"todo-tree.general.debug":{"default":false,"markdownDescription":"Create a debug channel in the Output view.","type":"boolean"},"todo-tree.general.enableFileWatcher":{"default":false,"markdownDescription":"Set to true to enable automatic updates when files in the workspace are created, changed or deleted.","type":"boolean"},"todo-tree.general.fileWatcherGlob":{"default":"**/*","markdownDescription":"Glob for use with the file watcher. Change this if the default setting causes performance issues.","type":"string"},"todo-tree.general.revealBehaviour":{"default":"start of todo","enum":["start of line","start of todo","end of todo"],"markdownDescription":"Sets where the cursor is positioned when revealing a todo.","markdownEnumDescriptions":["Moves the cursor to the start of the line","Moves the cursor to the beginning of the todo","Moves the cursor to the end of the todo"],"type":"string"},"todo-tree.general.exportPath":{"default":"~/todo-tree-%Y%m%d-%H%M.txt","markdownDescription":"Path to use when exporting the tree. Environment variables will be expanded, e.g `${HOME}` and the path is passed through strftime (see <https://github.com/samsonjs/strftime>). Set the extension to `.json` to export as a JSON record.","type":"string"},"todo-tree.general.rootFolder":{"default":"","markdownDescription":"Folder in which to run the search (defaults to the workspace folder).","type":"string"},"todo-tree.general.schemes":{"default":["file","ssh","untitled","vscode-notebook-cell"],"items":{"type":"string"},"markdownDescription":"Editor schemes to find TODOs in. To find TODOs in settings files, for instance, add `vscode-userdata` or for output windows, add `output`.","type":"array"},"todo-tree.general.statusBar":{"default":"none","enum":["none","total","tags","top three","current file"],"markdownDescription":"What to show in the status bar - nothing, total count, counts per tag, top three counts per tag or count of tags in the current file.","markdownEnumDescriptions":["Only show the scanning status in the status bar","Show the total count of tags in the status bar","Show a breakdown of the count of each tag in the status bar","Show the count of the top three tags in the status bar","Show the count of tags in the current file in the status bar"],"type":"string"},"todo-tree.general.showIconsInsteadOfTagsInStatusBar":{"default":false,"markdownDescription":"Show icons instead of tags in the status bar","type":"boolean"},"todo-tree.general.statusBarClickBehaviour":{"default":"reveal","enum":["cycle","reveal","toggle highlights"],"markdownDescription":"What to do when the status bar is clicked.","markdownEnumDescriptions":["Toggle between showing total count and the top three tag counts","Reveal the tree view","Toggle highlighting"],"type":"string"},"todo-tree.general.tagGroups":{"default":{},"markdownDescription":"Allows similar tags to be grouped under the same type, e.g. `{ \"FIX\": [\"FIXME\",\"FIXIT\"] }`. *Note: All tags must also be in the `todo-tree.general.tags` tag list. If a tag group is defined, custom highlights apply to the group, not the tags within the group.*","type":"object","additionalProperties":{"type":"array","items":{"type":"string"}}},"todo-tree.general.tags":{"default":["BUG","HACK","FIXME","TODO","XXX","[ ]","[x]"],"items":{"type":"string"},"markdownDescription":"List of tags. *Note, if one tag starts with another tag, the longer tag should be specified first to prevent the shorter tag being matched.*","type":"array"}}},{"title":"Highlights","order":2,"type":"object","properties":{"todo-tree.highlights.customHighlight":{"default":{"BUG":{"icon":"bug"},"HACK":{"icon":"tools"},"FIXME":{"icon":"flame"},"XXX":{"icon":"$(close)"}},"markdownDescription":"Custom configuration for highlighting, [Read more...](https://github.com/Gruntfuggly/todo-tree#highlighting).","type":"object","additionalProperties":{"type":"object","properties":{"foreground":{"type":"string","format":"color-hex"},"background":{"type":"string","format":"color-hex"},"opacity":{"type":"number"},"fontWeight":{"type":"string"},"fontStyle":{"type":"string"},"textDecoration":{"type":"string"},"borderRadius":{"type":"string"},"icon":{"type":"string"},"iconColour":{"type":"string","format":"color-hex"},"gutterIcon":{"type":"boolean"},"rulerColour":{"type":"string","format":"color-hex"},"rulerOpacity":{"type":"number"},"rulerLane":{"type":"string","enum":["none","left","center","right","full"]},"type":{"type":"string","enum":["tag","text","tag-and-comment","tag-and-subTag","text-and-comment","line","whole-line","none"]},"hideFromTree":{"type":"boolean"},"hideFromStatusBar":{"type":"boolean"}}}},"todo-tree.highlights.defaultHighlight":{"default":{},"markdownDescription":"Default configuration for highlighting. [Read more...](https://github.com/Gruntfuggly/todo-tree#highlighting).","type":"object","properties":{"foreground":{"type":"string","format":"color-hex"},"background":{"type":"string","format":"color-hex"},"opacity":{"type":"number"},"fontWeight":{"type":"string"},"fontStyle":{"type":"string"},"textDecoration":{"type":"string"},"borderRadius":{"type":"string"},"icon":{"type":"string"},"iconColour":{"type":"string","format":"color-hex"},"gutterIcon":{"type":"boolean"},"rulerColour":{"type":"string","format":"color-hex"},"rulerOpacity":{"type":"number"},"rulerLane":{"type":"string","enum":["none","left","center","right","full"]},"type":{"type":"string","enum":["tag","text","tag-and-comment","tag-and-subTag","text-and-comment","line","whole-line","none"]},"hideFromTree":{"type":"boolean"},"hideFromStatusBar":{"type":"boolean"}}},"todo-tree.highlights.enabled":{"default":true,"markdownDescription":"Set to false to disable highlighting.","type":"boolean"},"todo-tree.highlights.highlightDelay":{"default":500,"markdownDescription":"Delay before highlighting tags within files (milliseconds).","type":"integer"},"todo-tree.highlights.useColourScheme":{"default":false,"markdownDescription":"Use a colour scheme to colour the tags. This scheme is applied to the tags in the order of tags. The colours can be modified using `todo-tree.highlights.foregroundColourScheme` and `todo-tree.highlights.backgroundColourScheme`. The colour scheme overrides colours in the default highlight, but not the custom highlight.","type":"boolean","scope":"language-overridable"},"todo-tree.highlights.foregroundColourScheme":{"default":["white","black","black","white","white","white","black"],"items":{"type":"string"},"markdownDescription":"A list of colours which is applied to tag highlights in the same order as the tags. Repeats if necessary and is overridden by `todo-tree.highlights.customHighlight`.","type":"array"},"todo-tree.highlights.backgroundColourScheme":{"default":["red","orange","yellow","green","blue","indigo","violet"],"items":{"type":"string"},"markdownDescription":"A list of colours which is applied to tag highlights in the same order as the tags. Repeats if necessary and is overridden by `todo-tree.highlights.customHighlight`.","type":"array"}}},{"title":"Filtering","order":3,"type":"object","properties":{"todo-tree.filtering.excludedWorkspaces":{"default":[],"items":{"type":"string"},"markdownDescription":"An array of workspace names to exclude as roots in the tree (wildcards can be used).","type":"array"},"todo-tree.filtering.excludeGlobs":{"default":["**/node_modules"],"items":{"type":"string"},"markdownDescription":"Globs for use in limiting search results by exclusion (applied after **includeGlobs**), e.g. `[\"**/*.txt\"]` to ignore all .txt files.","type":"array"},"todo-tree.filtering.ignoreGitSubmodules":{"default":false,"markdownDescription":"If true, any subfolders containing a .git file will be ignored when searching.","type":"boolean"},"todo-tree.filtering.includedWorkspaces":{"default":[],"items":{"type":"string"},"markdownDescription":"An array of workspace names to include as roots in the tree (wildcards can be used). An empty array includes all workspace folders.","type":"array"},"todo-tree.filtering.includeGlobs":{"default":[],"items":{"type":"string"},"markdownDescription":"Globs for use in limiting search results by inclusion, e.g. `[\"**/unit-tests/*.js\"]` to only show .js files in unit-tests subfolders.","type":"array"},"todo-tree.filtering.includeHiddenFiles":{"default":false,"markdownDescription":"Include hidden files (starting with a .).","type":"boolean"},"todo-tree.filtering.passGlobsToRipgrep":{"default":true,"markdownDescription":"By default the globs are passed into ripgrep to narrow the search. Set this to false to apply the globs *after* the search (pre 0.0.132 behaviour).","type":"boolean"},"todo-tree.filtering.scopes":{"default":[],"markdownDescription":"Scopes (sets of globs) that can be switched between","type":"array"},"todo-tree.filtering.useBuiltInExcludes":{"default":"none","enum":["none","file excludes","search excludes","file and search excludes"],"markdownDescription":"Add VSCode's `files.exclude` and/or `search.exclude` list to the ignored paths.","markdownEnumDescriptions":["Don't used any built in excludes","Use the Files:Exclude setting","Use the Search:Exclude setting","Use the Files:Exclude and the Search:Exclude setting"],"type":"string"}}},{"title":"Tree","order":4,"type":"object","properties":{"todo-tree.tree.autoRefresh":{"default":true,"markdownDescription":"Refresh the tree when files are opened or saved.","type":"boolean"},"todo-tree.tree.disableCompactFolders":{"default":false,"markdownDescription":"Prevent the tree from showing compact folders.","type":"boolean"},"todo-tree.tree.expanded":{"default":false,"markdownDescription":"When opening new workspaces, show the tree initially fully expanded.","type":"boolean"},"todo-tree.tree.filterCaseSensitive":{"default":false,"markdownDescription":"Set to true if you want the view filtering to be case sensitive.","type":"boolean"},"todo-tree.tree.flat":{"default":false,"markdownDescription":"When opening new workspaces, show the tree initially as flat list of files.","type":"boolean"},"todo-tree.tree.groupedByTag":{"default":false,"markdownDescription":"When opening new workspaces, show the tree initially grouped by tag.","type":"boolean"},"todo-tree.tree.groupedBySubTag":{"default":false,"markdownDescription":"When opening new workspaces, show the tree initially grouped by sub tag.","type":"boolean"},"todo-tree.tree.hideIconsWhenGroupedByTag":{"default":false,"markdownDescription":"Save some space by hiding the item icons when grouped by tag.","type":"boolean"},"todo-tree.tree.hideTreeWhenEmpty":{"default":false,"markdownDescription":"Hide the view if it is empty.","type":"boolean"},"todo-tree.tree.labelFormat":{"default":"${tag} ${after}","markdownDescription":"Format for tree items.","type":"string"},"todo-tree.tree.scanAtStartup":{"default":true,"markdownDescription":"Normally the tree is built as soon as the window is opened. If you have a large code base and want to manually start the scan, set this to false.","type":"boolean"},"todo-tree.tree.scanMode":{"default":"workspace","enum":["workspace","open files","current file","workspace only"],"markdownDescription":"Set this to change which files are scanned.","markdownEnumDescriptions":["Scan the whole workspace (or workspaces) and open file","Scan open files only","Scan the current file only","Scan the workspace but don't refresh files open in the editor"],"type":"string"},"todo-tree.tree.showBadges":{"default":true,"markdownDescription":"Show badges and SCM state in the tree view.","type":"boolean"},"todo-tree.tree.showCountsInTree":{"default":false,"markdownDescription":"Show counts of TODOs in the tree.","type":"boolean"},"todo-tree.tree.showInExplorer":{"default":false,"deprecationMessage":"This setting is no longer used. Please drag the view to move it.","type":"boolean"},"todo-tree.tree.showCurrentScanMode":{"default":true,"markdownDescription":"Show the current scan mode at the top of the tree view","type":"boolean"},"todo-tree.tree.showScanOpenFilesOrWorkspaceButton":{"default":false,"deprecationMessage":"This setting is no longer used, please use \"todo-tree.tree.scanMode\" instead.","type":"boolean"},"todo-tree.tree.subTagClickUrl":{"default":"","markdownDescription":"The URL to open when clicking on a sub tag in the tree. Can include placeholders as defined in `todo-tree.tree.labelFormat`.","type":"string"},"todo-tree.tree.showTagsFromOpenFilesOnly":{"default":false,"deprecationMessage":"This setting is no longer used, please use \"todo-tree.tree.scanMode\" instead.","type":"boolean"},"todo-tree.tree.sortTagsOnlyViewAlphabetically":{"default":false,"markdownDescription":"Sort items in the tags only view alphabetically instead of by file and line number.","type":"boolean"},"todo-tree.tree.sort":{"default":true,"markdownDescription":"ripgrep searches using multiple threads to improve performance. The tree is sorted when it is populated so that it stays stable. If you want to use ripgrep's own sort arguments, set this to false.","type":"boolean"},"todo-tree.tree.tagsOnly":{"default":false,"markdownDescription":"When opening new workspaces, show only tag elements in tree.","type":"boolean"},"todo-tree.tree.tooltipFormat":{"default":"${filepath}, line ${line}","markdownDescription":"Tree item tooltip format.","type":"string"},"todo-tree.tree.trackFile":{"default":true,"markdownDescription":"Track the current file in the tree view.","type":"boolean"}}},{"title":"Buttons","order":5,"type":"object","properties":{"todo-tree.tree.buttons.reveal":{"default":true,"markdownDescription":"Show a button in the tree view title bar to reveal the current item (only when track file is not enabled).","type":"boolean"},"todo-tree.tree.buttons.scanMode":{"default":false,"markdownDescription":"Show a button in the tree view title bar to change the Scan Mode setting.","type":"boolean"},"todo-tree.tree.buttons.viewStyle":{"default":true,"markdownDescription":"Show a button in the tree view title bar to change the view style (tree, flat or tags only).","type":"boolean"},"todo-tree.tree.buttons.groupByTag":{"default":true,"markdownDescription":"Show a button in the tree view title bar to enable grouping items by tag.","type":"boolean"},"todo-tree.tree.buttons.groupBySubTag":{"default":false,"markdownDescription":"Show a button in the tree view title bar to enable grouping items by sub tag.","type":"boolean"},"todo-tree.tree.buttons.filter":{"default":true,"markdownDescription":"Show a button in the tree view title bar allowing the tree to be filtered by entering some text.","type":"boolean"},"todo-tree.tree.buttons.refresh":{"default":true,"markdownDescription":"Show a refresh button in the tree view title bar.","type":"boolean"},"todo-tree.tree.buttons.expand":{"default":true,"markdownDescription":"Show a button in the tree view title bar to expand or collapse the whole tree.","type":"boolean"},"todo-tree.tree.buttons.export":{"default":false,"markdownDescription":"Show a button in the tree view title bar to create a file showing the tree content.","type":"boolean"}}},{"title":"Regex","order":6,"type":"object","properties":{"todo-tree.regex.regex":{"default":"(//|#|<!--|;|/\\*|^|^[ \\t]*(-|\\d+.))\\s*($TAGS)","markdownDescription":"Regular expression for matching TODOs. Note: **($TAGS)** will be replaced by the expanded tag list. For some of the extension features to work, **($TAGS)** should be present in the regex, however, the basic functionality should still work if you need to explicitly expand the tag list.","type":"string","minLength":1},"todo-tree.regex.regexCaseSensitive":{"default":true,"markdownDescription":"Use a case sensitive regular expression.","type":"boolean"},"todo-tree.regex.subTagRegex":{"default":"","markdownDescription":"Regular expression for processing the text to the right of the tag, e.g. for extracting a sub tag, or removing unwanted characters.","type":"string"},"todo-tree.regex.enableMultiLine":{"default":false,"markdownDescription":"Force the regex to match over multiple lines. Allows use of `[\\s\\S]` to match anything including newlines.","type":"boolean"},"todo-tree.ripgrep.ripgrep":{"default":"","markdownDescription":"Location of your version of ripgrep.","type":"string"},"todo-tree.ripgrep.ripgrepArgs":{"default":"--max-columns=1000 --no-config ","markdownDescription":"Additional arguments to pass to ripgrep (Use with caution!).","type":"string"}}},{"title":"Ripgrep","order":7,"type":"object","properties":{"todo-tree.ripgrep.ripgrepMaxBuffer":{"default":200,"markdownDescription":"Size of the buffer to use for retrieving output from ripgrep (kilobytes).","type":"integer"},"todo-tree.ripgrep.usePatternFile":{"default":true,"markdownDescription":"A pattern file is used with ripgrep by default. If you experience issues with deleting the pattern file, set this to false to use the legacy method of providing the regex to ripgrep.","type":"boolean"}}}]},"dependencies":{"@primer/octicons":"^11.0.0","comment-patterns":"^0.10.1","fast-strftime":"^1.1.1","find":"^0.3.0","micromatch":"^4.0.2","node-qunit":"^2.0.0","regexp-match-indices":"^1.0.2","treeify":"^1.1.0"},"devDependencies":{"parse-code-context":"^1.0.0","webpack":"^4.43.0","webpack-cli":"^4.9.1"}},"location":{"$mid":1,"path":"/home/dan/.vscode-oss/extensions/gruntfuggly.todo-tree-0.0.215-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"Gruntfuggly","metadata":{"installedTimestamp":1749888976698,"pinned":false,"source":"gallery","id":"261cac81-cd7b-4555-bb41-0c2d2bcd3e70","publisherId":"d4906d2e-f2ee-492d-9c7c-02b6160599ec","publisherDisplayName":"Gruntfuggly","targetPlatform":"universal","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":1223539},"isValid":true,"validations":[],"preRelease":false}]}